{"version":3,"file":"animations-65a2e7d1.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs"],"sourcesContent":["import { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst MotionConfigContext = createContext({\r\n    transformPagePoint: (p) => p,\r\n    isStatic: false,\r\n    reducedMotion: \"never\",\r\n});\r\n\r\nexport { MotionConfigContext };\r\n","import { createContext } from 'react';\r\n\r\nconst MotionContext = createContext({});\r\n\r\nexport { MotionContext };\r\n","import { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst PresenceContext = createContext(null);\r\n\r\nexport { PresenceContext };\r\n","const isBrowser = typeof document !== \"undefined\";\r\n\r\nexport { isBrowser };\r\n","import { useLayoutEffect, useEffect } from 'react';\r\nimport { isBrowser } from './is-browser.mjs';\r\n\r\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\r\n\r\nexport { useIsomorphicLayoutEffect };\r\n","import { createContext } from 'react';\r\n\r\nconst LazyContext = createContext({ strict: false });\r\n\r\nexport { LazyContext };\r\n","/**\r\n * Convert camelCase to dash-case properties.\r\n */\r\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\r\n\r\nexport { camelToDash };\r\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\r\n\r\nconst optimizedAppearDataId = \"framerAppearId\";\r\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\r\n\r\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\r\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\nimport { LazyContext } from '../../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\r\n\r\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\r\n    const { visualElement: parent } = useContext(MotionContext);\r\n    const lazyContext = useContext(LazyContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\r\n    const visualElementRef = useRef();\r\n    /**\r\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n     */\r\n    createVisualElement = createVisualElement || lazyContext.renderer;\r\n    if (!visualElementRef.current && createVisualElement) {\r\n        visualElementRef.current = createVisualElement(Component, {\r\n            visualState,\r\n            parent,\r\n            props,\r\n            presenceContext,\r\n            blockInitialAnimation: presenceContext\r\n                ? presenceContext.initial === false\r\n                : false,\r\n            reducedMotionConfig,\r\n        });\r\n    }\r\n    const visualElement = visualElementRef.current;\r\n    useInsertionEffect(() => {\r\n        visualElement && visualElement.update(props, presenceContext);\r\n    });\r\n    /**\r\n     * Cache this value as we want to know whether HandoffAppearAnimations\r\n     * was present on initial render - it will be deleted after this.\r\n     */\r\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        visualElement.render();\r\n        /**\r\n         * Ideally this function would always run in a useEffect.\r\n         *\r\n         * However, if we have optimised appear animations to handoff from,\r\n         * it needs to happen synchronously to ensure there's no flash of\r\n         * incorrect styles in the event of a hydration error.\r\n         *\r\n         * So if we detect a situtation where optimised appear animations\r\n         * are running, we use useLayoutEffect to trigger animations.\r\n         */\r\n        if (wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        visualElement.updateFeatures();\r\n        if (!wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n        if (wantsHandoff.current) {\r\n            wantsHandoff.current = false;\r\n            // This ensures all future calls to animateChanges() will run in useEffect\r\n            window.HandoffComplete = true;\r\n        }\r\n    });\r\n    return visualElement;\r\n}\r\n\r\nexport { useVisualElement };\r\n","function isRefObject(ref) {\r\n    return (ref &&\r\n        typeof ref === \"object\" &&\r\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\r\n}\r\n\r\nexport { isRefObject };\r\n","import { useCallback } from 'react';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\n\r\n/**\r\n * Creates a ref function that, when called, hydrates the provided\r\n * external ref and VisualElement.\r\n */\r\nfunction useMotionRef(visualState, visualElement, externalRef) {\r\n    return useCallback((instance) => {\r\n        instance && visualState.mount && visualState.mount(instance);\r\n        if (visualElement) {\r\n            instance\r\n                ? visualElement.mount(instance)\r\n                : visualElement.unmount();\r\n        }\r\n        if (externalRef) {\r\n            if (typeof externalRef === \"function\") {\r\n                externalRef(instance);\r\n            }\r\n            else if (isRefObject(externalRef)) {\r\n                externalRef.current = instance;\r\n            }\r\n        }\r\n    }, \r\n    /**\r\n     * Only pass a new ref callback to React if we've received a visual element\r\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\r\n     * or other dependencies change.\r\n     */\r\n    [visualElement]);\r\n}\r\n\r\nexport { useMotionRef };\r\n","/**\r\n * Decides if the supplied variable is variant label\r\n */\r\nfunction isVariantLabel(v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n}\r\n\r\nexport { isVariantLabel };\r\n","function isAnimationControls(v) {\r\n    return (v !== null &&\r\n        typeof v === \"object\" &&\r\n        typeof v.start === \"function\");\r\n}\r\n\r\nexport { isAnimationControls };\r\n","const variantPriorityOrder = [\r\n    \"animate\",\r\n    \"whileInView\",\r\n    \"whileFocus\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"whileDrag\",\r\n    \"exit\",\r\n];\r\nconst variantProps = [\"initial\", ...variantPriorityOrder];\r\n\r\nexport { variantPriorityOrder, variantProps };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nfunction isControllingVariants(props) {\r\n    return (isAnimationControls(props.animate) ||\r\n        variantProps.some((name) => isVariantLabel(props[name])));\r\n}\r\nfunction isVariantNode(props) {\r\n    return Boolean(isControllingVariants(props) || props.variants);\r\n}\r\n\r\nexport { isControllingVariants, isVariantNode };\r\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\r\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\r\n\r\nfunction getCurrentTreeVariants(props, context) {\r\n    if (isControllingVariants(props)) {\r\n        const { initial, animate } = props;\r\n        return {\r\n            initial: initial === false || isVariantLabel(initial)\r\n                ? initial\r\n                : undefined,\r\n            animate: isVariantLabel(animate) ? animate : undefined,\r\n        };\r\n    }\r\n    return props.inherit !== false ? context : {};\r\n}\r\n\r\nexport { getCurrentTreeVariants };\r\n","import { useContext, useMemo } from 'react';\r\nimport { MotionContext } from './index.mjs';\r\nimport { getCurrentTreeVariants } from './utils.mjs';\r\n\r\nfunction useCreateMotionContext(props) {\r\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\r\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\r\n}\r\nfunction variantLabelsAsDependency(prop) {\r\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\r\n}\r\n\r\nexport { useCreateMotionContext };\r\n","const featureProps = {\r\n    animation: [\r\n        \"animate\",\r\n        \"variants\",\r\n        \"whileHover\",\r\n        \"whileTap\",\r\n        \"exit\",\r\n        \"whileInView\",\r\n        \"whileFocus\",\r\n        \"whileDrag\",\r\n    ],\r\n    exit: [\"exit\"],\r\n    drag: [\"drag\", \"dragControls\"],\r\n    focus: [\"whileFocus\"],\r\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\r\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\r\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\r\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\r\n    layout: [\"layout\", \"layoutId\"],\r\n};\r\nconst featureDefinitions = {};\r\nfor (const key in featureProps) {\r\n    featureDefinitions[key] = {\r\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\r\n    };\r\n}\r\n\r\nexport { featureDefinitions };\r\n","import { featureDefinitions } from './definitions.mjs';\r\n\r\nfunction loadFeatures(features) {\r\n    for (const key in features) {\r\n        featureDefinitions[key] = {\r\n            ...featureDefinitions[key],\r\n            ...features[key],\r\n        };\r\n    }\r\n}\r\n\r\nexport { loadFeatures };\r\n","import { createContext } from 'react';\r\n\r\nconst LayoutGroupContext = createContext({});\r\n\r\nexport { LayoutGroupContext };\r\n","import { createContext } from 'react';\r\n\r\n/**\r\n * Internal, exported only for usage in Framer\r\n */\r\nconst SwitchLayoutGroupContext = createContext({});\r\n\r\nexport { SwitchLayoutGroupContext };\r\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\r\n\r\nexport { motionComponentSymbol };\r\n","import * as React from 'react';\r\nimport { forwardRef, useContext } from 'react';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { MotionContext } from '../context/MotionContext/index.mjs';\r\nimport { useVisualElement } from './utils/use-visual-element.mjs';\r\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\r\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\r\nimport { loadFeatures } from './features/load-features.mjs';\r\nimport { isBrowser } from '../utils/is-browser.mjs';\r\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\r\nimport { LazyContext } from '../context/LazyContext.mjs';\r\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\r\nimport { motionComponentSymbol } from './utils/symbol.mjs';\r\n\r\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n */\r\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\r\n    preloadedFeatures && loadFeatures(preloadedFeatures);\r\n    function MotionComponent(props, externalRef) {\r\n        /**\r\n         * If we need to measure the element we load this functionality in a\r\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\r\n         */\r\n        let MeasureLayout;\r\n        const configAndProps = {\r\n            ...useContext(MotionConfigContext),\r\n            ...props,\r\n            layoutId: useLayoutId(props),\r\n        };\r\n        const { isStatic } = configAndProps;\r\n        const context = useCreateMotionContext(props);\r\n        const visualState = useVisualState(props, isStatic);\r\n        if (!isStatic && isBrowser) {\r\n            /**\r\n             * Create a VisualElement for this component. A VisualElement provides a common\r\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n             * providing a way of rendering to these APIs outside of the React render loop\r\n             * for more performant animations and interactions\r\n             */\r\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\r\n            /**\r\n             * Load Motion gesture and animation features. These are rendered as renderless\r\n             * components so each feature can optionally make use of React lifecycle methods.\r\n             */\r\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\r\n            const isStrict = useContext(LazyContext).strict;\r\n            if (context.visualElement) {\r\n                MeasureLayout = context.visualElement.loadFeatures(\r\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\r\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\r\n            }\r\n        }\r\n        /**\r\n         * The mount order and hierarchy is specific to ensure our element ref\r\n         * is hydrated by the time features fire their effects.\r\n         */\r\n        return (React.createElement(MotionContext.Provider, { value: context },\r\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\r\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\r\n    }\r\n    const ForwardRefComponent = forwardRef(MotionComponent);\r\n    ForwardRefComponent[motionComponentSymbol] = Component;\r\n    return ForwardRefComponent;\r\n}\r\nfunction useLayoutId({ layoutId }) {\r\n    const layoutGroupId = useContext(LayoutGroupContext).id;\r\n    return layoutGroupId && layoutId !== undefined\r\n        ? layoutGroupId + \"-\" + layoutId\r\n        : layoutId;\r\n}\r\n\r\nexport { createMotionComponent };\r\n","import { createMotionComponent } from '../../motion/index.mjs';\r\n\r\n/**\r\n * Convert any React component into a `motion` component. The provided component\r\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\r\n *\r\n * ```jsx\r\n * const Component = React.forwardRef((props, ref) => {\r\n *   return <div ref={ref} />\r\n * })\r\n *\r\n * const MotionComponent = motion(Component)\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction createMotionProxy(createConfig) {\r\n    function custom(Component, customMotionComponentConfig = {}) {\r\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\r\n    }\r\n    if (typeof Proxy === \"undefined\") {\r\n        return custom;\r\n    }\r\n    /**\r\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\r\n     * Rather than generating them anew every render.\r\n     */\r\n    const componentCache = new Map();\r\n    return new Proxy(custom, {\r\n        /**\r\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\r\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n         * DOM component with that name.\r\n         */\r\n        get: (_target, key) => {\r\n            /**\r\n             * If this element doesn't exist in the component cache, create it and cache.\r\n             */\r\n            if (!componentCache.has(key)) {\r\n                componentCache.set(key, custom(key));\r\n            }\r\n            return componentCache.get(key);\r\n        },\r\n    });\r\n}\r\n\r\nexport { createMotionProxy };\r\n","/**\r\n * We keep these listed seperately as we use the lowercase tag names as part\r\n * of the runtime bundle to detect SVG components\r\n */\r\nconst lowercaseSVGElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"filter\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"svg\",\r\n    \"text\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\r\n\r\nexport { lowercaseSVGElements };\r\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\r\n\r\nfunction isSVGComponent(Component) {\r\n    if (\r\n    /**\r\n     * If it's not a string, it's a custom React component. Currently we only support\r\n     * HTML custom React components.\r\n     */\r\n    typeof Component !== \"string\" ||\r\n        /**\r\n         * If it contains a dash, the element is a custom HTML webcomponent.\r\n         */\r\n        Component.includes(\"-\")) {\r\n        return false;\r\n    }\r\n    else if (\r\n    /**\r\n     * If it's in our list of lowercase SVG tags, it's an SVG component\r\n     */\r\n    lowercaseSVGElements.indexOf(Component) > -1 ||\r\n        /**\r\n         * If it contains a capital letter, it's an SVG component\r\n         */\r\n        /[A-Z]/.test(Component)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isSVGComponent };\r\n","const scaleCorrectors = {};\r\nfunction addScaleCorrector(correctors) {\r\n    Object.assign(scaleCorrectors, correctors);\r\n}\r\n\r\nexport { addScaleCorrector, scaleCorrectors };\r\n","/**\r\n * Generate a list of every possible transform key.\r\n */\r\nconst transformPropOrder = [\r\n    \"transformPerspective\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n    \"translateX\",\r\n    \"translateY\",\r\n    \"translateZ\",\r\n    \"scale\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"rotate\",\r\n    \"rotateX\",\r\n    \"rotateY\",\r\n    \"rotateZ\",\r\n    \"skew\",\r\n    \"skewX\",\r\n    \"skewY\",\r\n];\r\n/**\r\n * A quick lookup for transform props.\r\n */\r\nconst transformProps = new Set(transformPropOrder);\r\n\r\nexport { transformPropOrder, transformProps };\r\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\r\nimport { transformProps } from '../../render/html/utils/transform.mjs';\r\n\r\nfunction isForcedMotionValue(key, { layout, layoutId }) {\r\n    return (transformProps.has(key) ||\r\n        key.startsWith(\"origin\") ||\r\n        ((layout || layoutId !== undefined) &&\r\n            (!!scaleCorrectors[key] || key === \"opacity\")));\r\n}\r\n\r\nexport { isForcedMotionValue };\r\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\r\n\r\nexport { isMotionValue };\r\n","import { transformPropOrder } from './transform.mjs';\r\n\r\nconst translateAlias = {\r\n    x: \"translateX\",\r\n    y: \"translateY\",\r\n    z: \"translateZ\",\r\n    transformPerspective: \"perspective\",\r\n};\r\nconst numTransforms = transformPropOrder.length;\r\n/**\r\n * Build a CSS transform style from individual x/y/scale etc properties.\r\n *\r\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\r\n * providing a transformTemplate function.\r\n */\r\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\r\n    // The transform string we're going to build into.\r\n    let transformString = \"\";\r\n    /**\r\n     * Loop over all possible transforms in order, adding the ones that\r\n     * are present to the transform string.\r\n     */\r\n    for (let i = 0; i < numTransforms; i++) {\r\n        const key = transformPropOrder[i];\r\n        if (transform[key] !== undefined) {\r\n            const transformName = translateAlias[key] || key;\r\n            transformString += `${transformName}(${transform[key]}) `;\r\n        }\r\n    }\r\n    if (enableHardwareAcceleration && !transform.z) {\r\n        transformString += \"translateZ(0)\";\r\n    }\r\n    transformString = transformString.trim();\r\n    // If we have a custom `transform` template, pass our transform values and\r\n    // generated transformString to that before returning\r\n    if (transformTemplate) {\r\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\r\n    }\r\n    else if (allowTransformNone && transformIsDefault) {\r\n        transformString = \"none\";\r\n    }\r\n    return transformString;\r\n}\r\n\r\nexport { buildTransform };\r\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\r\nconst isCSSVariableName = checkStringStartsWith(\"--\");\r\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\r\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\r\n\r\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\r\n","/**\r\n * Provided a value and a ValueType, returns the value as that value type.\r\n */\r\nconst getValueAsType = (value, type) => {\r\n    return type && typeof value === \"number\"\r\n        ? type.transform(value)\r\n        : value;\r\n};\r\n\r\nexport { getValueAsType };\r\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\r\n\r\nexport { clamp };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\n\r\nconst number = {\r\n    test: (v) => typeof v === \"number\",\r\n    parse: parseFloat,\r\n    transform: (v) => v,\r\n};\r\nconst alpha = {\r\n    ...number,\r\n    transform: (v) => clamp(0, 1, v),\r\n};\r\nconst scale = {\r\n    ...number,\r\n    default: 1,\r\n};\r\n\r\nexport { alpha, number, scale };\r\n","/**\r\n * TODO: When we move from string as a source of truth to data models\r\n * everything in this folder should probably be referred to as models vs types\r\n */\r\n// If this number is a decimal, make it just five decimal places\r\n// to avoid exponents\r\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\r\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\r\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\r\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\r\nfunction isString(v) {\r\n    return typeof v === \"string\";\r\n}\r\n\r\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\r\n","import { isString } from '../utils.mjs';\r\n\r\nconst createUnitType = (unit) => ({\r\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\r\n    parse: parseFloat,\r\n    transform: (v) => `${v}${unit}`,\r\n});\r\nconst degrees = createUnitType(\"deg\");\r\nconst percent = createUnitType(\"%\");\r\nconst px = createUnitType(\"px\");\r\nconst vh = createUnitType(\"vh\");\r\nconst vw = createUnitType(\"vw\");\r\nconst progressPercentage = {\r\n    ...percent,\r\n    parse: (v) => percent.parse(v) / 100,\r\n    transform: (v) => percent.transform(v * 100),\r\n};\r\n\r\nexport { degrees, percent, progressPercentage, px, vh, vw };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\n\r\nconst int = {\r\n    ...number,\r\n    transform: Math.round,\r\n};\r\n\r\nexport { int };\r\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\r\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\r\nimport { int } from './type-int.mjs';\r\n\r\nconst numberValueTypes = {\r\n    // Border props\r\n    borderWidth: px,\r\n    borderTopWidth: px,\r\n    borderRightWidth: px,\r\n    borderBottomWidth: px,\r\n    borderLeftWidth: px,\r\n    borderRadius: px,\r\n    radius: px,\r\n    borderTopLeftRadius: px,\r\n    borderTopRightRadius: px,\r\n    borderBottomRightRadius: px,\r\n    borderBottomLeftRadius: px,\r\n    // Positioning props\r\n    width: px,\r\n    maxWidth: px,\r\n    height: px,\r\n    maxHeight: px,\r\n    size: px,\r\n    top: px,\r\n    right: px,\r\n    bottom: px,\r\n    left: px,\r\n    // Spacing props\r\n    padding: px,\r\n    paddingTop: px,\r\n    paddingRight: px,\r\n    paddingBottom: px,\r\n    paddingLeft: px,\r\n    margin: px,\r\n    marginTop: px,\r\n    marginRight: px,\r\n    marginBottom: px,\r\n    marginLeft: px,\r\n    // Transform props\r\n    rotate: degrees,\r\n    rotateX: degrees,\r\n    rotateY: degrees,\r\n    rotateZ: degrees,\r\n    scale,\r\n    scaleX: scale,\r\n    scaleY: scale,\r\n    scaleZ: scale,\r\n    skew: degrees,\r\n    skewX: degrees,\r\n    skewY: degrees,\r\n    distance: px,\r\n    translateX: px,\r\n    translateY: px,\r\n    translateZ: px,\r\n    x: px,\r\n    y: px,\r\n    z: px,\r\n    perspective: px,\r\n    transformPerspective: px,\r\n    opacity: alpha,\r\n    originX: progressPercentage,\r\n    originY: progressPercentage,\r\n    originZ: px,\r\n    // Misc\r\n    zIndex: int,\r\n    // SVG\r\n    fillOpacity: alpha,\r\n    strokeOpacity: alpha,\r\n    numOctaves: int,\r\n};\r\n\r\nexport { numberValueTypes };\r\n","import { buildTransform } from './build-transform.mjs';\r\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\r\nimport { transformProps } from './transform.mjs';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\r\n    const { style, vars, transform, transformOrigin } = state;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    // Does the calculated transform essentially equal \"none\"?\r\n    let transformIsNone = true;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept seperately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        /**\r\n         * If this is a CSS variable we don't do any further processing.\r\n         */\r\n        if (isCSSVariableName(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        // Convert the value to its default value type, ie 0 -> \"0px\"\r\n        const valueType = numberValueTypes[key];\r\n        const valueAsType = getValueAsType(value, valueType);\r\n        if (transformProps.has(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            transform[key] = valueAsType;\r\n            // If we already know we have a non-default transform, early return\r\n            if (!transformIsNone)\r\n                continue;\r\n            // Otherwise check to see if this is a default transform\r\n            if (value !== (valueType.default || 0))\r\n                transformIsNone = false;\r\n        }\r\n        else if (key.startsWith(\"origin\")) {\r\n            // If this is a transform origin, flag and enable further transform-origin processing\r\n            hasTransformOrigin = true;\r\n            transformOrigin[key] = valueAsType;\r\n        }\r\n        else {\r\n            style[key] = valueAsType;\r\n        }\r\n    }\r\n    if (!latestValues.transform) {\r\n        if (hasTransform || transformTemplate) {\r\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\r\n        }\r\n        else if (style.transform) {\r\n            /**\r\n             * If we have previously created a transform but currently don't have any,\r\n             * reset transform style to none.\r\n             */\r\n            style.transform = \"none\";\r\n        }\r\n    }\r\n    /**\r\n     * Build a transformOrigin style. Uses the same defaults as the browser for\r\n     * undefined origins.\r\n     */\r\n    if (hasTransformOrigin) {\r\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\r\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n","const createHtmlRenderState = () => ({\r\n    style: {},\r\n    transform: {},\r\n    transformOrigin: {},\r\n    vars: {},\r\n});\r\n\r\nexport { createHtmlRenderState };\r\n","import { useMemo } from 'react';\r\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nfunction copyRawValuesOnly(target, source, props) {\r\n    for (const key in source) {\r\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n}\r\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\r\n    return useMemo(() => {\r\n        const state = createHtmlRenderState();\r\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\r\n        return Object.assign({}, state.vars, state.style);\r\n    }, [visualState]);\r\n}\r\nfunction useStyle(props, visualState, isStatic) {\r\n    const styleProp = props.style || {};\r\n    const style = {};\r\n    /**\r\n     * Copy non-Motion Values straight into style\r\n     */\r\n    copyRawValuesOnly(style, styleProp, props);\r\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\r\n    return props.transformValues ? props.transformValues(style) : style;\r\n}\r\nfunction useHTMLProps(props, visualState, isStatic) {\r\n    // The `any` isn't ideal but it is the type of createElement props argument\r\n    const htmlProps = {};\r\n    const style = useStyle(props, visualState, isStatic);\r\n    if (props.drag && props.dragListener !== false) {\r\n        // Disable the ghost element when a user drags\r\n        htmlProps.draggable = false;\r\n        // Disable text selection\r\n        style.userSelect =\r\n            style.WebkitUserSelect =\r\n                style.WebkitTouchCallout =\r\n                    \"none\";\r\n        // Disable scrolling on the draggable direction\r\n        style.touchAction =\r\n            props.drag === true\r\n                ? \"none\"\r\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\r\n    }\r\n    if (props.tabIndex === undefined &&\r\n        (props.onTap || props.onTapStart || props.whileTap)) {\r\n        htmlProps.tabIndex = 0;\r\n    }\r\n    htmlProps.style = style;\r\n    return htmlProps;\r\n}\r\n\r\nexport { copyRawValuesOnly, useHTMLProps };\r\n","/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @privateRemarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nconst validMotionProps = new Set([\r\n    \"animate\",\r\n    \"exit\",\r\n    \"variants\",\r\n    \"initial\",\r\n    \"style\",\r\n    \"values\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"transformValues\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"onBeforeLayoutMeasure\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onMeasureDragConstraints\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"_dragX\",\r\n    \"_dragY\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n    \"onViewportEnter\",\r\n    \"onViewportLeave\",\r\n    \"globalTapTarget\",\r\n    \"ignoreStrict\",\r\n    \"viewport\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return (key.startsWith(\"while\") ||\r\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\r\n        key.startsWith(\"layout\") ||\r\n        key.startsWith(\"onTap\") ||\r\n        key.startsWith(\"onPan\") ||\r\n        key.startsWith(\"onLayout\") ||\r\n        validMotionProps.has(key));\r\n}\r\n\r\nexport { isValidMotionProp };\r\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\r\n\r\nlet shouldForward = (key) => !isValidMotionProp(key);\r\nfunction loadExternalIsValidProp(isValidProp) {\r\n    if (!isValidProp)\r\n        return;\r\n    // Explicitly filter our events\r\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\r\n}\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    /**\r\n     * We attempt to import this package but require won't be defined in esm environments, in that case\r\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\r\n     * in favour of explicit injection.\r\n     */\r\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterProps(props, isDom, forwardMotionProps) {\r\n    const filteredProps = {};\r\n    for (const key in props) {\r\n        /**\r\n         * values is considered a valid prop by Emotion, so if it's present\r\n         * this will be rendered out to the DOM unless explicitly filtered.\r\n         *\r\n         * We check the type as it could be used with the `feColorMatrix`\r\n         * element, which we support.\r\n         */\r\n        if (key === \"values\" && typeof props.values === \"object\")\r\n            continue;\r\n        if (shouldForward(key) ||\r\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\r\n            (!isDom && !isValidMotionProp(key)) ||\r\n            // If trying to use native HTML drag events, forward drag listeners\r\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\r\n            filteredProps[key] = props[key];\r\n        }\r\n    }\r\n    return filteredProps;\r\n}\r\n\r\nexport { filterProps, loadExternalIsValidProp };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nfunction calcOrigin(origin, offset, size) {\r\n    return typeof origin === \"string\"\r\n        ? origin\r\n        : px.transform(offset + size * origin);\r\n}\r\n/**\r\n * The SVG transform origin defaults are different to CSS and is less intuitive,\r\n * so we use the measured dimensions of the SVG to reconcile these.\r\n */\r\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\r\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\r\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\r\n    return `${pxOriginX} ${pxOriginY}`;\r\n}\r\n\r\nexport { calcSVGTransformOrigin };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nconst camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\r\n    // Normalise path length by setting SVG attribute pathLength to 1\r\n    attrs.pathLength = 1;\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    const keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = px.transform(-offset);\r\n    // Build the dash array\r\n    const pathLength = px.transform(length);\r\n    const pathSpacing = px.transform(spacing);\r\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\r\n}\r\n\r\nexport { buildSVGPath };\r\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\r\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\r\nimport { buildSVGPath } from './path.mjs';\r\n\r\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\r\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \r\n// This is object creation, which we try to avoid per-frame.\r\n...latest }, options, isSVGTag, transformTemplate) {\r\n    buildHTMLStyles(state, latest, options, transformTemplate);\r\n    /**\r\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\r\n     * as normal HTML tags.\r\n     */\r\n    if (isSVGTag) {\r\n        if (state.style.viewBox) {\r\n            state.attrs.viewBox = state.style.viewBox;\r\n        }\r\n        return;\r\n    }\r\n    state.attrs = state.style;\r\n    state.style = {};\r\n    const { attrs, style, dimensions } = state;\r\n    /**\r\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\r\n     * and copy it into style.\r\n     */\r\n    if (attrs.transform) {\r\n        if (dimensions)\r\n            style.transform = attrs.transform;\r\n        delete attrs.transform;\r\n    }\r\n    // Parse transformOrigin\r\n    if (dimensions &&\r\n        (originX !== undefined || originY !== undefined || style.transform)) {\r\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\r\n    }\r\n    // Render attrX/attrY/attrScale as attributes\r\n    if (attrX !== undefined)\r\n        attrs.x = attrX;\r\n    if (attrY !== undefined)\r\n        attrs.y = attrY;\r\n    if (attrScale !== undefined)\r\n        attrs.scale = attrScale;\r\n    // Build SVG path if one has been defined\r\n    if (pathLength !== undefined) {\r\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\r\n    }\r\n}\r\n\r\nexport { buildSVGAttrs };\r\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\r\n\r\nconst createSvgRenderState = () => ({\r\n    ...createHtmlRenderState(),\r\n    attrs: {},\r\n});\r\n\r\nexport { createSvgRenderState };\r\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\r\n\r\nexport { isSVGTag };\r\n","import { useMemo } from 'react';\r\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\n\r\nfunction useSVGProps(props, visualState, _isStatic, Component) {\r\n    const visualProps = useMemo(() => {\r\n        const state = createSvgRenderState();\r\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\r\n        return {\r\n            ...state.attrs,\r\n            style: { ...state.style },\r\n        };\r\n    }, [visualState]);\r\n    if (props.style) {\r\n        const rawStyles = {};\r\n        copyRawValuesOnly(rawStyles, props.style, props);\r\n        visualProps.style = { ...rawStyles, ...visualProps.style };\r\n    }\r\n    return visualProps;\r\n}\r\n\r\nexport { useSVGProps };\r\n","import { useMemo, createElement } from 'react';\r\nimport { useHTMLProps } from '../html/use-props.mjs';\r\nimport { filterProps } from './utils/filter-props.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\nimport { useSVGProps } from '../svg/use-props.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction createUseRender(forwardMotionProps = false) {\r\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\r\n        const useVisualProps = isSVGComponent(Component)\r\n            ? useSVGProps\r\n            : useHTMLProps;\r\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\r\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\r\n        const elementProps = {\r\n            ...filteredProps,\r\n            ...visualProps,\r\n            ref,\r\n        };\r\n        /**\r\n         * If component has been handed a motion value as its child,\r\n         * memoise its initial value and render that. Subsequent updates\r\n         * will be handled by the onChange handler\r\n         */\r\n        const { children } = props;\r\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\r\n        return createElement(Component, {\r\n            ...elementProps,\r\n            children: renderedChildren,\r\n        });\r\n    };\r\n    return useRender;\r\n}\r\n\r\nexport { createUseRender };\r\n","function renderHTML(element, { style, vars }, styleProp, projection) {\r\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\r\n    // Loop over any CSS variables and assign those.\r\n    for (const key in vars) {\r\n        element.style.setProperty(key, vars[key]);\r\n    }\r\n}\r\n\r\nexport { renderHTML };\r\n","/**\r\n * A set of attribute names that are always read/written as camel case.\r\n */\r\nconst camelCaseAttributes = new Set([\r\n    \"baseFrequency\",\r\n    \"diffuseConstant\",\r\n    \"kernelMatrix\",\r\n    \"kernelUnitLength\",\r\n    \"keySplines\",\r\n    \"keyTimes\",\r\n    \"limitingConeAngle\",\r\n    \"markerHeight\",\r\n    \"markerWidth\",\r\n    \"numOctaves\",\r\n    \"targetX\",\r\n    \"targetY\",\r\n    \"surfaceScale\",\r\n    \"specularConstant\",\r\n    \"specularExponent\",\r\n    \"stdDeviation\",\r\n    \"tableValues\",\r\n    \"viewBox\",\r\n    \"gradientTransform\",\r\n    \"pathLength\",\r\n    \"startOffset\",\r\n    \"textLength\",\r\n    \"lengthAdjust\",\r\n]);\r\n\r\nexport { camelCaseAttributes };\r\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\r\nimport { renderHTML } from '../../html/utils/render.mjs';\r\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\r\n\r\nfunction renderSVG(element, renderState, _styleProp, projection) {\r\n    renderHTML(element, renderState, undefined, projection);\r\n    for (const key in renderState.attrs) {\r\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\r\n    }\r\n}\r\n\r\nexport { renderSVG };\r\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps) {\r\n    const { style } = props;\r\n    const newValues = {};\r\n    for (const key in style) {\r\n        if (isMotionValue(style[key]) ||\r\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\r\n            isForcedMotionValue(key, props)) {\r\n            newValues[key] = style[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\r\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\r\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps) {\r\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\r\n    for (const key in props) {\r\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\r\n            const targetKey = transformPropOrder.indexOf(key) !== -1\r\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\r\n                : key;\r\n            newValues[targetKey] = props[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\r\n    /**\r\n     * If the variant definition is a function, resolve.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\r\n    }\r\n    /**\r\n     * If the variant definition is a variant label, or\r\n     * the function returned a variant label, resolve.\r\n     */\r\n    if (typeof definition === \"string\") {\r\n        definition = props.variants && props.variants[definition];\r\n    }\r\n    /**\r\n     * At this point we've resolved both functions and variant labels,\r\n     * but the resolved variant label might itself have been a function.\r\n     * If so, resolve. This can only have returned a valid target object.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\r\n    }\r\n    return definition;\r\n}\r\n\r\nexport { resolveVariantFromProps };\r\n","import { useRef } from 'react';\r\n\r\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    const ref = useRef(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\r\n\r\nexport { useConstant };\r\n","const isKeyframesTarget = (v) => {\r\n    return Array.isArray(v);\r\n};\r\n\r\nexport { isKeyframesTarget };\r\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\r\n\r\nconst isCustomValue = (v) => {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nconst resolveFinalValueInKeyframes = (v) => {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\r\n\r\nexport { isCustomValue, resolveFinalValueInKeyframes };\r\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\r\nimport { isMotionValue } from './is-motion-value.mjs';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\r\nfunction resolveMotionValue(value) {\r\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n","import { useContext } from 'react';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\r\n\r\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\r\n    const state = {\r\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\r\n        renderState: createRenderState(),\r\n    };\r\n    if (onMount) {\r\n        state.mount = (instance) => onMount(props, instance, state);\r\n    }\r\n    return state;\r\n}\r\nconst makeUseVisualState = (config) => (props, isStatic) => {\r\n    const context = useContext(MotionContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const make = () => makeState(config, props, context, presenceContext);\r\n    return isStatic ? make() : useConstant(make);\r\n};\r\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\r\n    const values = {};\r\n    const motionValues = scrapeMotionValues(props, {});\r\n    for (const key in motionValues) {\r\n        values[key] = resolveMotionValue(motionValues[key]);\r\n    }\r\n    let { initial, animate } = props;\r\n    const isControllingVariants$1 = isControllingVariants(props);\r\n    const isVariantNode$1 = isVariantNode(props);\r\n    if (context &&\r\n        isVariantNode$1 &&\r\n        !isControllingVariants$1 &&\r\n        props.inherit !== false) {\r\n        if (initial === undefined)\r\n            initial = context.initial;\r\n        if (animate === undefined)\r\n            animate = context.animate;\r\n    }\r\n    let isInitialAnimationBlocked = presenceContext\r\n        ? presenceContext.initial === false\r\n        : false;\r\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\r\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\r\n    if (variantToSet &&\r\n        typeof variantToSet !== \"boolean\" &&\r\n        !isAnimationControls(variantToSet)) {\r\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\r\n        list.forEach((definition) => {\r\n            const resolved = resolveVariantFromProps(props, definition);\r\n            if (!resolved)\r\n                return;\r\n            const { transitionEnd, transition, ...target } = resolved;\r\n            for (const key in target) {\r\n                let valueTarget = target[key];\r\n                if (Array.isArray(valueTarget)) {\r\n                    /**\r\n                     * Take final keyframe if the initial animation is blocked because\r\n                     * we want to initialise at the end of that blocked animation.\r\n                     */\r\n                    const index = isInitialAnimationBlocked\r\n                        ? valueTarget.length - 1\r\n                        : 0;\r\n                    valueTarget = valueTarget[index];\r\n                }\r\n                if (valueTarget !== null) {\r\n                    values[key] = valueTarget;\r\n                }\r\n            }\r\n            for (const key in transitionEnd)\r\n                values[key] = transitionEnd[key];\r\n        });\r\n    }\r\n    return values;\r\n}\r\n\r\nexport { makeUseVisualState };\r\n","const noop = (any) => any;\r\n\r\nexport { noop };\r\n","class Queue {\r\n    constructor() {\r\n        this.order = [];\r\n        this.scheduled = new Set();\r\n    }\r\n    add(process) {\r\n        if (!this.scheduled.has(process)) {\r\n            this.scheduled.add(process);\r\n            this.order.push(process);\r\n            return true;\r\n        }\r\n    }\r\n    remove(process) {\r\n        const index = this.order.indexOf(process);\r\n        if (index !== -1) {\r\n            this.order.splice(index, 1);\r\n            this.scheduled.delete(process);\r\n        }\r\n    }\r\n    clear() {\r\n        this.order.length = 0;\r\n        this.scheduled.clear();\r\n    }\r\n}\r\nfunction createRenderStep(runNextFrame) {\r\n    /**\r\n     * We create and reuse two queues, one to queue jobs for the current frame\r\n     * and one for the next. We reuse to avoid triggering GC after x frames.\r\n     */\r\n    let thisFrame = new Queue();\r\n    let nextFrame = new Queue();\r\n    let numToRun = 0;\r\n    /**\r\n     * Track whether we're currently processing jobs in this step. This way\r\n     * we can decide whether to schedule new jobs for this frame or next.\r\n     */\r\n    let isProcessing = false;\r\n    let flushNextFrame = false;\r\n    /**\r\n     * A set of processes which were marked keepAlive when scheduled.\r\n     */\r\n    const toKeepAlive = new WeakSet();\r\n    const step = {\r\n        /**\r\n         * Schedule a process to run on the next frame.\r\n         */\r\n        schedule: (callback, keepAlive = false, immediate = false) => {\r\n            const addToCurrentFrame = immediate && isProcessing;\r\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\r\n            if (keepAlive)\r\n                toKeepAlive.add(callback);\r\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\r\n                // If we're adding it to the currently running queue, update its measured size\r\n                numToRun = thisFrame.order.length;\r\n            }\r\n            return callback;\r\n        },\r\n        /**\r\n         * Cancel the provided callback from running on the next frame.\r\n         */\r\n        cancel: (callback) => {\r\n            nextFrame.remove(callback);\r\n            toKeepAlive.delete(callback);\r\n        },\r\n        /**\r\n         * Execute all schedule callbacks.\r\n         */\r\n        process: (frameData) => {\r\n            /**\r\n             * If we're already processing we've probably been triggered by a flushSync\r\n             * inside an existing process. Instead of executing, mark flushNextFrame\r\n             * as true and ensure we flush the following frame at the end of this one.\r\n             */\r\n            if (isProcessing) {\r\n                flushNextFrame = true;\r\n                return;\r\n            }\r\n            isProcessing = true;\r\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\r\n            // Clear the next frame queue\r\n            nextFrame.clear();\r\n            // Execute this frame\r\n            numToRun = thisFrame.order.length;\r\n            if (numToRun) {\r\n                for (let i = 0; i < numToRun; i++) {\r\n                    const callback = thisFrame.order[i];\r\n                    callback(frameData);\r\n                    if (toKeepAlive.has(callback)) {\r\n                        step.schedule(callback);\r\n                        runNextFrame();\r\n                    }\r\n                }\r\n            }\r\n            isProcessing = false;\r\n            if (flushNextFrame) {\r\n                flushNextFrame = false;\r\n                step.process(frameData);\r\n            }\r\n        },\r\n    };\r\n    return step;\r\n}\r\n\r\nexport { createRenderStep };\r\n","import { createRenderStep } from './render-step.mjs';\r\n\r\nconst stepsOrder = [\r\n    \"prepare\",\r\n    \"read\",\r\n    \"update\",\r\n    \"preRender\",\r\n    \"render\",\r\n    \"postRender\",\r\n];\r\nconst maxElapsed = 40;\r\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\r\n    let runNextFrame = false;\r\n    let useDefaultElapsed = true;\r\n    const state = {\r\n        delta: 0,\r\n        timestamp: 0,\r\n        isProcessing: false,\r\n    };\r\n    const steps = stepsOrder.reduce((acc, key) => {\r\n        acc[key] = createRenderStep(() => (runNextFrame = true));\r\n        return acc;\r\n    }, {});\r\n    const processStep = (stepId) => steps[stepId].process(state);\r\n    const processBatch = () => {\r\n        const timestamp = performance.now();\r\n        runNextFrame = false;\r\n        state.delta = useDefaultElapsed\r\n            ? 1000 / 60\r\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\r\n        state.timestamp = timestamp;\r\n        state.isProcessing = true;\r\n        stepsOrder.forEach(processStep);\r\n        state.isProcessing = false;\r\n        if (runNextFrame && allowKeepAlive) {\r\n            useDefaultElapsed = false;\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const wake = () => {\r\n        runNextFrame = true;\r\n        useDefaultElapsed = true;\r\n        if (!state.isProcessing) {\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const schedule = stepsOrder.reduce((acc, key) => {\r\n        const step = steps[key];\r\n        acc[key] = (process, keepAlive = false, immediate = false) => {\r\n            if (!runNextFrame)\r\n                wake();\r\n            return step.schedule(process, keepAlive, immediate);\r\n        };\r\n        return acc;\r\n    }, {});\r\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\r\n    return { schedule, cancel, state, steps };\r\n}\r\n\r\nexport { createRenderBatcher, stepsOrder };\r\n","import { noop } from '../utils/noop.mjs';\r\nimport { createRenderBatcher } from './batcher.mjs';\r\n\r\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\r\n\r\nexport { cancelFrame, frame, frameData, steps };\r\n","import { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onMount: (props, instance, { renderState, latestValues }) => {\r\n            frame.read(() => {\r\n                try {\r\n                    renderState.dimensions =\r\n                        typeof instance.getBBox ===\r\n                            \"function\"\r\n                            ? instance.getBBox()\r\n                            : instance.getBoundingClientRect();\r\n                }\r\n                catch (e) {\r\n                    // Most likely trying to measure an unrendered element under Firefox\r\n                    renderState.dimensions = {\r\n                        x: 0,\r\n                        y: 0,\r\n                        width: 0,\r\n                        height: 0,\r\n                    };\r\n                }\r\n            });\r\n            frame.render(() => {\r\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\r\n                renderSVG(instance, renderState);\r\n            });\r\n        },\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nconst htmlMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps,\r\n        createRenderState: createHtmlRenderState,\r\n    }),\r\n};\r\n\r\nexport { htmlMotionConfig };\r\n","import { isSVGComponent } from './is-svg-component.mjs';\r\nimport { createUseRender } from '../use-render.mjs';\r\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\r\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\r\n\r\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\r\n    const baseConfig = isSVGComponent(Component)\r\n        ? svgMotionConfig\r\n        : htmlMotionConfig;\r\n    return {\r\n        ...baseConfig,\r\n        preloadedFeatures,\r\n        useRender: createUseRender(forwardMotionProps),\r\n        createVisualElement,\r\n        Component,\r\n    };\r\n}\r\n\r\nexport { createDomMotionConfig };\r\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\r\n    target.addEventListener(eventName, handler, options);\r\n    return () => target.removeEventListener(eventName, handler);\r\n}\r\n\r\nexport { addDomEvent };\r\n","const isPrimaryPointer = (event) => {\r\n    if (event.pointerType === \"mouse\") {\r\n        return typeof event.button !== \"number\" || event.button <= 0;\r\n    }\r\n    else {\r\n        /**\r\n         * isPrimary is true for all mice buttons, whereas every touch point\r\n         * is regarded as its own input. So subsequent concurrent touch points\r\n         * will be false.\r\n         *\r\n         * Specifically match against false here as incomplete versions of\r\n         * PointerEvents in very old browser might have it set as undefined.\r\n         */\r\n        return event.isPrimary !== false;\r\n    }\r\n};\r\n\r\nexport { isPrimaryPointer };\r\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\r\n\r\nfunction extractEventInfo(event, pointType = \"page\") {\r\n    return {\r\n        point: {\r\n            x: event[pointType + \"X\"],\r\n            y: event[pointType + \"Y\"],\r\n        },\r\n    };\r\n}\r\nconst addPointerInfo = (handler) => {\r\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\r\n};\r\n\r\nexport { addPointerInfo, extractEventInfo };\r\n","import { addDomEvent } from './add-dom-event.mjs';\r\nimport { addPointerInfo } from './event-info.mjs';\r\n\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\r\n}\r\n\r\nexport { addPointerEvent };\r\n","/**\r\n * Pipe\r\n * Compose other transformers to run linearily\r\n * pipe(min(20), max(40))\r\n * @param  {...functions} transformers\r\n * @return {function}\r\n */\r\nconst combineFunctions = (a, b) => (v) => b(a(v));\r\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\r\n\r\nexport { pipe };\r\n","function createLock(name) {\r\n    let lock = null;\r\n    return () => {\r\n        const openLock = () => {\r\n            lock = null;\r\n        };\r\n        if (lock === null) {\r\n            lock = name;\r\n            return openLock;\r\n        }\r\n        return false;\r\n    };\r\n}\r\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\r\nconst globalVerticalLock = createLock(\"dragVertical\");\r\nfunction getGlobalLock(drag) {\r\n    let lock = false;\r\n    if (drag === \"y\") {\r\n        lock = globalVerticalLock();\r\n    }\r\n    else if (drag === \"x\") {\r\n        lock = globalHorizontalLock();\r\n    }\r\n    else {\r\n        const openHorizontal = globalHorizontalLock();\r\n        const openVertical = globalVerticalLock();\r\n        if (openHorizontal && openVertical) {\r\n            lock = () => {\r\n                openHorizontal();\r\n                openVertical();\r\n            };\r\n        }\r\n        else {\r\n            // Release the locks because we don't use them\r\n            if (openHorizontal)\r\n                openHorizontal();\r\n            if (openVertical)\r\n                openVertical();\r\n        }\r\n    }\r\n    return lock;\r\n}\r\nfunction isDragActive() {\r\n    // Check the gesture lock - if we get it, it means no drag gesture is active\r\n    // and we can safely fire the tap gesture.\r\n    const openGestureLock = getGlobalLock(true);\r\n    if (!openGestureLock)\r\n        return true;\r\n    openGestureLock();\r\n    return false;\r\n}\r\n\r\nexport { createLock, getGlobalLock, isDragActive };\r\n","class Feature {\r\n    constructor(node) {\r\n        this.isMounted = false;\r\n        this.node = node;\r\n    }\r\n    update() { }\r\n}\r\n\r\nexport { Feature };\r\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\r\nimport { pipe } from '../utils/pipe.mjs';\r\nimport { isDragActive } from './drag/utils/lock.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\nfunction addHoverEvent(node, isActive) {\r\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\r\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\r\n    const handleEvent = (event, info) => {\r\n        if (event.pointerType === \"touch\" || isDragActive())\r\n            return;\r\n        const props = node.getProps();\r\n        if (node.animationState && props.whileHover) {\r\n            node.animationState.setActive(\"whileHover\", isActive);\r\n        }\r\n        if (props[callbackName]) {\r\n            frame.update(() => props[callbackName](event, info));\r\n        }\r\n    };\r\n    return addPointerEvent(node.current, eventName, handleEvent, {\r\n        passive: !node.getProps()[callbackName],\r\n    });\r\n}\r\nclass HoverGesture extends Feature {\r\n    mount() {\r\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { HoverGesture };\r\n","import { addDomEvent } from '../events/add-dom-event.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { pipe } from '../utils/pipe.mjs';\r\n\r\nclass FocusGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isActive = false;\r\n    }\r\n    onFocus() {\r\n        let isFocusVisible = false;\r\n        /**\r\n         * If this element doesn't match focus-visible then don't\r\n         * apply whileHover. But, if matches throws that focus-visible\r\n         * is not a valid selector then in that browser outline styles will be applied\r\n         * to the element by default and we want to match that behaviour with whileFocus.\r\n         */\r\n        try {\r\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\r\n        }\r\n        catch (e) {\r\n            isFocusVisible = true;\r\n        }\r\n        if (!isFocusVisible || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", true);\r\n        this.isActive = true;\r\n    }\r\n    onBlur() {\r\n        if (!this.isActive || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", false);\r\n        this.isActive = false;\r\n    }\r\n    mount() {\r\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { FocusGesture };\r\n","/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nconst isNodeOrChild = (parent, child) => {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\r\n\r\nexport { isNodeOrChild };\r\n","import { extractEventInfo } from '../events/event-info.mjs';\r\nimport { addDomEvent } from '../events/add-dom-event.mjs';\r\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { pipe } from '../utils/pipe.mjs';\r\nimport { isDragActive } from './drag/utils/lock.mjs';\r\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\r\nimport { noop } from '../utils/noop.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\nfunction fireSyntheticPointerEvent(name, handler) {\r\n    if (!handler)\r\n        return;\r\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\r\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\r\n}\r\nclass PressGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.removeStartListeners = noop;\r\n        this.removeEndListeners = noop;\r\n        this.removeAccessibleListeners = noop;\r\n        this.startPointerPress = (startEvent, startInfo) => {\r\n            if (this.isPressing)\r\n                return;\r\n            this.removeEndListeners();\r\n            const props = this.node.getProps();\r\n            const endPointerPress = (endEvent, endInfo) => {\r\n                if (!this.checkPressEnd())\r\n                    return;\r\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\r\n                frame.update(() => {\r\n                    /**\r\n                     * We only count this as a tap gesture if the event.target is the same\r\n                     * as, or a child of, this component's element\r\n                     */\r\n                    !globalTapTarget &&\r\n                        !isNodeOrChild(this.node.current, endEvent.target)\r\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\r\n                        : onTap && onTap(endEvent, endInfo);\r\n                });\r\n            };\r\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\r\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\r\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\r\n            this.startPress(startEvent, startInfo);\r\n        };\r\n        this.startAccessiblePress = () => {\r\n            const handleKeydown = (keydownEvent) => {\r\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\r\n                    return;\r\n                const handleKeyup = (keyupEvent) => {\r\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\r\n                        return;\r\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\r\n                        const { onTap } = this.node.getProps();\r\n                        if (onTap) {\r\n                            frame.update(() => onTap(event, info));\r\n                        }\r\n                    });\r\n                };\r\n                this.removeEndListeners();\r\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\r\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\r\n                    this.startPress(event, info);\r\n                });\r\n            };\r\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\r\n            const handleBlur = () => {\r\n                if (!this.isPressing)\r\n                    return;\r\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\r\n            };\r\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\r\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\r\n        };\r\n    }\r\n    startPress(event, info) {\r\n        this.isPressing = true;\r\n        const { onTapStart, whileTap } = this.node.getProps();\r\n        /**\r\n         * Ensure we trigger animations before firing event callback\r\n         */\r\n        if (whileTap && this.node.animationState) {\r\n            this.node.animationState.setActive(\"whileTap\", true);\r\n        }\r\n        if (onTapStart) {\r\n            frame.update(() => onTapStart(event, info));\r\n        }\r\n    }\r\n    checkPressEnd() {\r\n        this.removeEndListeners();\r\n        this.isPressing = false;\r\n        const props = this.node.getProps();\r\n        if (props.whileTap && this.node.animationState) {\r\n            this.node.animationState.setActive(\"whileTap\", false);\r\n        }\r\n        return !isDragActive();\r\n    }\r\n    cancelPress(event, info) {\r\n        if (!this.checkPressEnd())\r\n            return;\r\n        const { onTapCancel } = this.node.getProps();\r\n        if (onTapCancel) {\r\n            frame.update(() => onTapCancel(event, info));\r\n        }\r\n    }\r\n    mount() {\r\n        const props = this.node.getProps();\r\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\r\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\r\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\r\n    }\r\n    unmount() {\r\n        this.removeStartListeners();\r\n        this.removeEndListeners();\r\n        this.removeAccessibleListeners();\r\n    }\r\n}\r\n\r\nexport { PressGesture };\r\n","/**\r\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\r\n * element, so even though these handlers might all be triggered by different\r\n * observers, we can keep them in the same map.\r\n */\r\nconst observerCallbacks = new WeakMap();\r\n/**\r\n * Multiple observers can be created for multiple element/document roots. Each with\r\n * different settings. So here we store dictionaries of observers to each root,\r\n * using serialised settings (threshold/margin) as lookup keys.\r\n */\r\nconst observers = new WeakMap();\r\nconst fireObserverCallback = (entry) => {\r\n    const callback = observerCallbacks.get(entry.target);\r\n    callback && callback(entry);\r\n};\r\nconst fireAllObserverCallbacks = (entries) => {\r\n    entries.forEach(fireObserverCallback);\r\n};\r\nfunction initIntersectionObserver({ root, ...options }) {\r\n    const lookupRoot = root || document;\r\n    /**\r\n     * If we don't have an observer lookup map for this root, create one.\r\n     */\r\n    if (!observers.has(lookupRoot)) {\r\n        observers.set(lookupRoot, {});\r\n    }\r\n    const rootObservers = observers.get(lookupRoot);\r\n    const key = JSON.stringify(options);\r\n    /**\r\n     * If we don't have an observer for this combination of root and settings,\r\n     * create one.\r\n     */\r\n    if (!rootObservers[key]) {\r\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\r\n    }\r\n    return rootObservers[key];\r\n}\r\nfunction observeIntersection(element, options, callback) {\r\n    const rootInteresectionObserver = initIntersectionObserver(options);\r\n    observerCallbacks.set(element, callback);\r\n    rootInteresectionObserver.observe(element);\r\n    return () => {\r\n        observerCallbacks.delete(element);\r\n        rootInteresectionObserver.unobserve(element);\r\n    };\r\n}\r\n\r\nexport { observeIntersection };\r\n","import { Feature } from '../Feature.mjs';\r\nimport { observeIntersection } from './observers.mjs';\r\n\r\nconst thresholdNames = {\r\n    some: 0,\r\n    all: 1,\r\n};\r\nclass InViewFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hasEnteredView = false;\r\n        this.isInView = false;\r\n    }\r\n    startObserver() {\r\n        this.unmount();\r\n        const { viewport = {} } = this.node.getProps();\r\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\r\n        const options = {\r\n            root: root ? root.current : undefined,\r\n            rootMargin,\r\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\r\n        };\r\n        const onIntersectionUpdate = (entry) => {\r\n            const { isIntersecting } = entry;\r\n            /**\r\n             * If there's been no change in the viewport state, early return.\r\n             */\r\n            if (this.isInView === isIntersecting)\r\n                return;\r\n            this.isInView = isIntersecting;\r\n            /**\r\n             * Handle hasEnteredView. If this is only meant to run once, and\r\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\r\n             */\r\n            if (once && !isIntersecting && this.hasEnteredView) {\r\n                return;\r\n            }\r\n            else if (isIntersecting) {\r\n                this.hasEnteredView = true;\r\n            }\r\n            if (this.node.animationState) {\r\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\r\n            }\r\n            /**\r\n             * Use the latest committed props rather than the ones in scope\r\n             * when this observer is created\r\n             */\r\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\r\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\r\n            callback && callback(entry);\r\n        };\r\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\r\n    }\r\n    mount() {\r\n        this.startObserver();\r\n    }\r\n    update() {\r\n        if (typeof IntersectionObserver === \"undefined\")\r\n            return;\r\n        const { props, prevProps } = this.node;\r\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\r\n        if (hasOptionsChanged) {\r\n            this.startObserver();\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\r\n    return (name) => viewport[name] !== prevViewport[name];\r\n}\r\n\r\nexport { InViewFeature };\r\n","import { HoverGesture } from '../../gestures/hover.mjs';\r\nimport { FocusGesture } from '../../gestures/focus.mjs';\r\nimport { PressGesture } from '../../gestures/press.mjs';\r\nimport { InViewFeature } from './viewport/index.mjs';\r\n\r\nconst gestureAnimations = {\r\n    inView: {\r\n        Feature: InViewFeature,\r\n    },\r\n    tap: {\r\n        Feature: PressGesture,\r\n    },\r\n    focus: {\r\n        Feature: FocusGesture,\r\n    },\r\n    hover: {\r\n        Feature: HoverGesture,\r\n    },\r\n};\r\n\r\nexport { gestureAnimations };\r\n","function shallowCompare(next, prev) {\r\n    if (!Array.isArray(prev))\r\n        return false;\r\n    const prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (let i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport { shallowCompare };\r\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\r\n\r\n/**\r\n * Creates an object containing the latest state of every MotionValue on a VisualElement\r\n */\r\nfunction getCurrent(visualElement) {\r\n    const current = {};\r\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\r\n    return current;\r\n}\r\n/**\r\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\r\n */\r\nfunction getVelocity(visualElement) {\r\n    const velocity = {};\r\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\r\n    return velocity;\r\n}\r\nfunction resolveVariant(visualElement, definition, custom) {\r\n    const props = visualElement.getProps();\r\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\r\n}\r\n\r\nexport { resolveVariant };\r\n","import { noop } from './noop.mjs';\r\n\r\nlet warning = noop;\r\nlet invariant = noop;\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    warning = (check, message) => {\r\n        if (!check && typeof console !== \"undefined\") {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = (check, message) => {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\r\n\r\nexport { invariant, warning };\r\n","/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\r\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\r\n\r\nexport { millisecondsToSeconds, secondsToMilliseconds };\r\n","const instantAnimationState = {\r\n    current: false,\r\n};\r\n\r\nexport { instantAnimationState };\r\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\r\n\r\nexport { isBezierDefinition };\r\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\r\n\r\nfunction isWaapiSupportedEasing(easing) {\r\n    return Boolean(!easing ||\r\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\r\n        isBezierDefinition(easing) ||\r\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\r\n}\r\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\r\nconst supportedWaapiEasing = {\r\n    linear: \"linear\",\r\n    ease: \"ease\",\r\n    easeIn: \"ease-in\",\r\n    easeOut: \"ease-out\",\r\n    easeInOut: \"ease-in-out\",\r\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\r\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\r\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\r\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\r\n};\r\nfunction mapEasingToNativeEasing(easing) {\r\n    if (!easing)\r\n        return undefined;\r\n    return isBezierDefinition(easing)\r\n        ? cubicBezierAsString(easing)\r\n        : Array.isArray(easing)\r\n            ? easing.map(mapEasingToNativeEasing)\r\n            : supportedWaapiEasing[easing];\r\n}\r\n\r\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\r\n","import { mapEasingToNativeEasing } from './easing.mjs';\r\n\r\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\r\n    const keyframeOptions = { [valueName]: keyframes };\r\n    if (times)\r\n        keyframeOptions.offset = times;\r\n    const easing = mapEasingToNativeEasing(ease);\r\n    /**\r\n     * If this is an easing array, apply to keyframes, not animation as a whole\r\n     */\r\n    if (Array.isArray(easing))\r\n        keyframeOptions.easing = easing;\r\n    return element.animate(keyframeOptions, {\r\n        delay,\r\n        duration,\r\n        easing: !Array.isArray(easing) ? easing : \"linear\",\r\n        fill: \"both\",\r\n        iterations: repeat + 1,\r\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\r\n    });\r\n}\r\n\r\nexport { animateStyle };\r\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\r\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\r\n        ? 0\r\n        : keyframes.length - 1;\r\n    return keyframes[index];\r\n}\r\n\r\nexport { getFinalKeyframe };\r\n","import { noop } from '../utils/noop.mjs';\r\n\r\n/*\r\n  Bezier function generator\r\n  This has been modified from Gaëtan Renaudeau's BezierEasing\r\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\r\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\r\n  \r\n  I've removed the newtonRaphsonIterate algo because in benchmarking it\r\n  wasn't noticiably faster than binarySubdivision, indeed removing it\r\n  usually improved times, depending on the curve.\r\n  I also removed the lookup table, as for the added bundle size and loop we're\r\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\r\n  to 12 to compensate and this still tended to be faster for no perceivable\r\n  loss in accuracy.\r\n  Usage\r\n    const easeOut = cubicBezier(.17,.67,.83,.67);\r\n    const x = easeOut(0.5); // returns 0.627...\r\n*/\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\r\n    t;\r\nconst subdivisionPrecision = 0.0000001;\r\nconst subdivisionMaxIterations = 12;\r\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\r\n    let currentX;\r\n    let currentT;\r\n    let i = 0;\r\n    do {\r\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\r\n        currentX = calcBezier(currentT, mX1, mX2) - x;\r\n        if (currentX > 0.0) {\r\n            upperBound = currentT;\r\n        }\r\n        else {\r\n            lowerBound = currentT;\r\n        }\r\n    } while (Math.abs(currentX) > subdivisionPrecision &&\r\n        ++i < subdivisionMaxIterations);\r\n    return currentT;\r\n}\r\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\r\n    // If this is a linear gradient, return linear easing\r\n    if (mX1 === mY1 && mX2 === mY2)\r\n        return noop;\r\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\r\n    // If animation is at start/end, return t without easing\r\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\r\n}\r\n\r\nexport { cubicBezier };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\n\r\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\r\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\r\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\r\n\r\nexport { easeIn, easeInOut, easeOut };\r\n","const isEasingArray = (ease) => {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\r\n\r\nexport { isEasingArray };\r\n","// Accepts an easing function and returns a new one that outputs mirrored values for\r\n// the second half of the animation. Turns easeIn into easeInOut.\r\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\r\n\r\nexport { mirrorEasing };\r\n","// Accepts an easing function and returns a new one that outputs reversed values.\r\n// Turns easeIn into easeOut.\r\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\r\n\r\nexport { reverseEasing };\r\n","import { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\r\nconst circOut = reverseEasing(circIn);\r\nconst circInOut = mirrorEasing(circIn);\r\n\r\nexport { circIn, circInOut, circOut };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\nimport { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\r\nconst backIn = reverseEasing(backOut);\r\nconst backInOut = mirrorEasing(backIn);\r\n\r\nexport { backIn, backInOut, backOut };\r\n","import { backIn } from './back.mjs';\r\n\r\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n\r\nexport { anticipate };\r\n","import { invariant } from '../../utils/errors.mjs';\r\nimport { cubicBezier } from '../cubic-bezier.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\r\nimport { circIn, circInOut, circOut } from '../circ.mjs';\r\nimport { backIn, backInOut, backOut } from '../back.mjs';\r\nimport { anticipate } from '../anticipate.mjs';\r\n\r\nconst easingLookup = {\r\n    linear: noop,\r\n    easeIn,\r\n    easeInOut,\r\n    easeOut,\r\n    circIn,\r\n    circInOut,\r\n    circOut,\r\n    backIn,\r\n    backInOut,\r\n    backOut,\r\n    anticipate,\r\n};\r\nconst easingDefinitionToFunction = (definition) => {\r\n    if (Array.isArray(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\r\n        const [x1, y1, x2, y2] = definition;\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\n\r\nexport { easingDefinitionToFunction };\r\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\r\n\r\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\r\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (!isString(v))\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\nimport { number, alpha } from '../numbers/index.mjs';\r\nimport { sanitize } from '../utils.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst clampRgbUnit = (v) => clamp(0, 255, v);\r\nconst rgbUnit = {\r\n    ...number,\r\n    transform: (v) => Math.round(clampRgbUnit(v)),\r\n};\r\nconst rgba = {\r\n    test: isColorString(\"rgb\", \"red\"),\r\n    parse: splitColor(\"red\", \"green\", \"blue\"),\r\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\r\n        rgbUnit.transform(red) +\r\n        \", \" +\r\n        rgbUnit.transform(green) +\r\n        \", \" +\r\n        rgbUnit.transform(blue) +\r\n        \", \" +\r\n        sanitize(alpha.transform(alpha$1)) +\r\n        \")\",\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n","import { rgba } from './rgba.mjs';\r\nimport { isColorString } from './utils.mjs';\r\n\r\nfunction parseHex(v) {\r\n    let r = \"\";\r\n    let g = \"\";\r\n    let b = \"\";\r\n    let a = \"\";\r\n    // If we have 6 characters, ie #FF0000\r\n    if (v.length > 5) {\r\n        r = v.substring(1, 3);\r\n        g = v.substring(3, 5);\r\n        b = v.substring(5, 7);\r\n        a = v.substring(7, 9);\r\n        // Or we have 3 characters, ie #F00\r\n    }\r\n    else {\r\n        r = v.substring(1, 2);\r\n        g = v.substring(2, 3);\r\n        b = v.substring(3, 4);\r\n        a = v.substring(4, 5);\r\n        r += r;\r\n        g += g;\r\n        b += b;\r\n        a += a;\r\n    }\r\n    return {\r\n        red: parseInt(r, 16),\r\n        green: parseInt(g, 16),\r\n        blue: parseInt(b, 16),\r\n        alpha: a ? parseInt(a, 16) / 255 : 1,\r\n    };\r\n}\r\nconst hex = {\r\n    test: isColorString(\"#\"),\r\n    parse: parseHex,\r\n    transform: rgba.transform,\r\n};\r\n\r\nexport { hex };\r\n","import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: isColorString(\"hsl\", \"hue\"),\r\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return (\"hsla(\" +\r\n            Math.round(hue) +\r\n            \", \" +\r\n            percent.transform(sanitize(saturation)) +\r\n            \", \" +\r\n            percent.transform(sanitize(lightness)) +\r\n            \", \" +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            \")\");\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n","import { isString } from '../utils.mjs';\r\nimport { hex } from './hex.mjs';\r\nimport { hsla } from './hsla.mjs';\r\nimport { rgba } from './rgba.mjs';\r\n\r\nconst color = {\r\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\r\n    parse: (v) => {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else {\r\n            return hex.parse(v);\r\n        }\r\n    },\r\n    transform: (v) => {\r\n        return isString(v)\r\n            ? v\r\n            : v.hasOwnProperty(\"red\")\r\n                ? rgba.transform(v)\r\n                : hsla.transform(v);\r\n    },\r\n};\r\n\r\nexport { color };\r\n","/*\r\n  Value in range from progress\r\n\r\n  Given a lower limit and an upper limit, we return the value within\r\n  that range as expressed by progress (usually a number from 0 to 1)\r\n\r\n  So progress = 0.5 would change\r\n\r\n  from -------- to\r\n\r\n  to\r\n\r\n  from ---- to\r\n\r\n  E.g. from = 10, to = 20, progress = 0.5 => 15\r\n\r\n  @param [number]: Lower limit of range\r\n  @param [number]: Upper limit of range\r\n  @param [number]: The progress between lower and upper limits expressed 0-1\r\n  @return [number]: Value as calculated from progress within range (not limited within range)\r\n*/\r\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\r\n\r\nexport { mix };\r\n","// Adapted from https://gist.github.com/mjackson/5311256\r\nfunction hueToRgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n    let red = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    if (!saturation) {\r\n        red = green = blue = lightness;\r\n    }\r\n    else {\r\n        const q = lightness < 0.5\r\n            ? lightness * (1 + saturation)\r\n            : lightness + saturation - lightness * saturation;\r\n        const p = 2 * lightness - q;\r\n        red = hueToRgb(p, q, hue + 1 / 3);\r\n        green = hueToRgb(p, q, hue);\r\n        blue = hueToRgb(p, q, hue - 1 / 3);\r\n    }\r\n    return {\r\n        red: Math.round(red * 255),\r\n        green: Math.round(green * 255),\r\n        blue: Math.round(blue * 255),\r\n        alpha,\r\n    };\r\n}\r\n\r\nexport { hslaToRgba };\r\n","import { mix } from './mix.mjs';\r\nimport { invariant } from './errors.mjs';\r\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\r\nimport { hex } from '../value/types/color/hex.mjs';\r\nimport { rgba } from '../value/types/color/rgba.mjs';\r\nimport { hsla } from '../value/types/color/hsla.mjs';\r\n\r\n// Linear color space blending\r\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\r\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\r\nconst mixLinearColor = (from, to, v) => {\r\n    const fromExpo = from * from;\r\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\r\n};\r\nconst colorTypes = [hex, rgba, hsla];\r\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\r\nfunction asRGBA(color) {\r\n    const type = getColorType(color);\r\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\r\n    let model = type.parse(color);\r\n    if (type === hsla) {\r\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\r\n        model = hslaToRgba(model);\r\n    }\r\n    return model;\r\n}\r\nconst mixColor = (from, to) => {\r\n    const fromRGBA = asRGBA(from);\r\n    const toRGBA = asRGBA(to);\r\n    const blended = { ...fromRGBA };\r\n    return (v) => {\r\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\r\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\r\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\r\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\r\n        return rgba.transform(blended);\r\n    };\r\n};\r\n\r\nexport { mixColor, mixLinearColor };\r\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\r\nimport { noop } from '../../../utils/noop.mjs';\r\nimport { color } from '../color/index.mjs';\r\nimport { number } from '../numbers/index.mjs';\r\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\r\n\r\nfunction test(v) {\r\n    var _a, _b;\r\n    return (isNaN(v) &&\r\n        isString(v) &&\r\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\r\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\r\n            0);\r\n}\r\nconst cssVarTokeniser = {\r\n    regex: cssVariableRegex,\r\n    countKey: \"Vars\",\r\n    token: \"${v}\",\r\n    parse: noop,\r\n};\r\nconst colorTokeniser = {\r\n    regex: colorRegex,\r\n    countKey: \"Colors\",\r\n    token: \"${c}\",\r\n    parse: color.parse,\r\n};\r\nconst numberTokeniser = {\r\n    regex: floatRegex,\r\n    countKey: \"Numbers\",\r\n    token: \"${n}\",\r\n    parse: number.parse,\r\n};\r\nfunction tokenise(info, { regex, countKey, token, parse }) {\r\n    const matches = info.tokenised.match(regex);\r\n    if (!matches)\r\n        return;\r\n    info[\"num\" + countKey] = matches.length;\r\n    info.tokenised = info.tokenised.replace(regex, token);\r\n    info.values.push(...matches.map(parse));\r\n}\r\nfunction analyseComplexValue(value) {\r\n    const originalValue = value.toString();\r\n    const info = {\r\n        value: originalValue,\r\n        tokenised: originalValue,\r\n        values: [],\r\n        numVars: 0,\r\n        numColors: 0,\r\n        numNumbers: 0,\r\n    };\r\n    if (info.value.includes(\"var(--\"))\r\n        tokenise(info, cssVarTokeniser);\r\n    tokenise(info, colorTokeniser);\r\n    tokenise(info, numberTokeniser);\r\n    return info;\r\n}\r\nfunction parseComplexValue(v) {\r\n    return analyseComplexValue(v).values;\r\n}\r\nfunction createTransformer(source) {\r\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\r\n    const numValues = values.length;\r\n    return (v) => {\r\n        let output = tokenised;\r\n        for (let i = 0; i < numValues; i++) {\r\n            if (i < numVars) {\r\n                output = output.replace(cssVarTokeniser.token, v[i]);\r\n            }\r\n            else if (i < numVars + numColors) {\r\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\r\n            }\r\n            else {\r\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\r\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\r\nfunction getAnimatableNone(v) {\r\n    const parsed = parseComplexValue(v);\r\n    const transformer = createTransformer(v);\r\n    return transformer(parsed.map(convertNumbersToZero));\r\n}\r\nconst complex = {\r\n    test,\r\n    parse: parseComplexValue,\r\n    createTransformer,\r\n    getAnimatableNone,\r\n};\r\n\r\nexport { analyseComplexValue, complex };\r\n","import { mix } from './mix.mjs';\r\nimport { mixColor } from './mix-color.mjs';\r\nimport { pipe } from './pipe.mjs';\r\nimport { warning } from './errors.mjs';\r\nimport { color } from '../value/types/color/index.mjs';\r\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\r\n\r\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\r\nfunction getMixer(origin, target) {\r\n    if (typeof origin === \"number\") {\r\n        return (v) => mix(origin, target, v);\r\n    }\r\n    else if (color.test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return origin.startsWith(\"var(\")\r\n            ? mixImmediate(origin, target)\r\n            : mixComplex(origin, target);\r\n    }\r\n}\r\nconst mixArray = (from, to) => {\r\n    const output = [...from];\r\n    const numValues = output.length;\r\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\r\n    return (v) => {\r\n        for (let i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nconst mixObject = (origin, target) => {\r\n    const output = { ...origin, ...target };\r\n    const blendValue = {};\r\n    for (const key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return (v) => {\r\n        for (const key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nconst mixComplex = (origin, target) => {\r\n    const template = complex.createTransformer(target);\r\n    const originStats = analyseComplexValue(origin);\r\n    const targetStats = analyseComplexValue(target);\r\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\r\n        originStats.numColors === targetStats.numColors &&\r\n        originStats.numNumbers >= targetStats.numNumbers;\r\n    if (canInterpolate) {\r\n        return pipe(mixArray(originStats.values, targetStats.values), template);\r\n    }\r\n    else {\r\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\r\n        return mixImmediate(origin, target);\r\n    }\r\n};\r\n\r\nexport { mixArray, mixComplex, mixObject };\r\n","/*\r\n  Progress within given range\r\n\r\n  Given a lower limit and an upper limit, we return the progress\r\n  (expressed as a number 0-1) represented by the given value, and\r\n  limit that progress to within 0-1.\r\n\r\n  @param [number]: Lower limit\r\n  @param [number]: Upper limit\r\n  @param [number]: Value to find progress within given range\r\n  @return [number]: Progress of value within range as expressed 0-1\r\n*/\r\nconst progress = (from, to, value) => {\r\n    const toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n};\r\n\r\nexport { progress };\r\n","import { invariant } from './errors.mjs';\r\nimport { color } from '../value/types/color/index.mjs';\r\nimport { clamp } from './clamp.mjs';\r\nimport { mix } from './mix.mjs';\r\nimport { mixColor } from './mix-color.mjs';\r\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\r\nimport { pipe } from './pipe.mjs';\r\nimport { progress } from './progress.mjs';\r\nimport { noop } from './noop.mjs';\r\n\r\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\r\nfunction detectMixerFactory(v) {\r\n    if (typeof v === \"number\") {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof v === \"string\") {\r\n        return color.test(v) ? mixColor : mixComplex;\r\n    }\r\n    else if (Array.isArray(v)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof v === \"object\") {\r\n        return mixObject;\r\n    }\r\n    return mixNumber;\r\n}\r\nfunction createMixers(output, ease, customMixer) {\r\n    const mixers = [];\r\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\r\n    const numMixers = output.length - 1;\r\n    for (let i = 0; i < numMixers; i++) {\r\n        let mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\n/**\r\n * Create a function that maps from a numerical input array to a generic output array.\r\n *\r\n * Accepts:\r\n *   - Numbers\r\n *   - Colors (hex, hsl, hsla, rgb, rgba)\r\n *   - Complex (combinations of one or more numbers or strings)\r\n *\r\n * ```jsx\r\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\r\n *\r\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\r\n * ```\r\n *\r\n * TODO Revist this approach once we've moved to data models for values,\r\n * probably not needed to pregenerate mixer functions.\r\n *\r\n * @public\r\n */\r\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\r\n    const inputLength = input.length;\r\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\r\n    /**\r\n     * If we're only provided a single input, we can just make a function\r\n     * that returns the output.\r\n     */\r\n    if (inputLength === 1)\r\n        return () => output[0];\r\n    // If input runs highest -> lowest, reverse both arrays\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [...input].reverse();\r\n        output = [...output].reverse();\r\n    }\r\n    const mixers = createMixers(output, ease, mixer);\r\n    const numMixers = mixers.length;\r\n    const interpolator = (v) => {\r\n        let i = 0;\r\n        if (numMixers > 1) {\r\n            for (; i < input.length - 2; i++) {\r\n                if (v < input[i + 1])\r\n                    break;\r\n            }\r\n        }\r\n        const progressInRange = progress(input[i], input[i + 1], v);\r\n        return mixers[i](progressInRange);\r\n    };\r\n    return isClamp\r\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\r\n        : interpolator;\r\n}\r\n\r\nexport { interpolate };\r\n","import { mix } from '../mix.mjs';\r\nimport { progress } from '../progress.mjs';\r\n\r\nfunction fillOffset(offset, remaining) {\r\n    const min = offset[offset.length - 1];\r\n    for (let i = 1; i <= remaining; i++) {\r\n        const offsetProgress = progress(0, remaining, i);\r\n        offset.push(mix(min, 1, offsetProgress));\r\n    }\r\n}\r\n\r\nexport { fillOffset };\r\n","import { fillOffset } from './fill.mjs';\r\n\r\nfunction defaultOffset(arr) {\r\n    const offset = [0];\r\n    fillOffset(offset, arr.length - 1);\r\n    return offset;\r\n}\r\n\r\nexport { defaultOffset };\r\n","function convertOffsetToTimes(offset, duration) {\r\n    return offset.map((o) => o * duration);\r\n}\r\n\r\nexport { convertOffsetToTimes };\r\n","import { easeInOut } from '../../easing/ease.mjs';\r\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\r\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\r\nimport { interpolate } from '../../utils/interpolate.mjs';\r\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\r\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\r\n\r\nfunction defaultEasing(values, easing) {\r\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\r\n}\r\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\r\n    /**\r\n     * Easing functions can be externally defined as strings. Here we convert them\r\n     * into actual functions.\r\n     */\r\n    const easingFunctions = isEasingArray(ease)\r\n        ? ease.map(easingDefinitionToFunction)\r\n        : easingDefinitionToFunction(ease);\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = {\r\n        done: false,\r\n        value: keyframeValues[0],\r\n    };\r\n    /**\r\n     * Create a times array based on the provided 0-1 offsets\r\n     */\r\n    const absoluteTimes = convertOffsetToTimes(\r\n    // Only use the provided offsets if they're the correct length\r\n    // TODO Maybe we should warn here if there's a length mismatch\r\n    times && times.length === keyframeValues.length\r\n        ? times\r\n        : defaultOffset(keyframeValues), duration);\r\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\r\n        ease: Array.isArray(easingFunctions)\r\n            ? easingFunctions\r\n            : defaultEasing(keyframeValues, easingFunctions),\r\n    });\r\n    return {\r\n        calculatedDuration: duration,\r\n        next: (t) => {\r\n            state.value = mapTimeToKeyframe(t);\r\n            state.done = t >= duration;\r\n            return state;\r\n        },\r\n    };\r\n}\r\n\r\nexport { defaultEasing, keyframes };\r\n","/*\r\n  Convert velocity into velocity per second\r\n\r\n  @param [number]: Unit per frame\r\n  @param [number]: Frame duration in ms\r\n*/\r\nfunction velocityPerSecond(velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n}\r\n\r\nexport { velocityPerSecond };\r\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\r\n\r\nconst velocitySampleDuration = 5; // ms\r\nfunction calcGeneratorVelocity(resolveValue, t, current) {\r\n    const prevT = Math.max(t - velocitySampleDuration, 0);\r\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\r\n}\r\n\r\nexport { calcGeneratorVelocity };\r\n","import { warning } from '../../../utils/errors.mjs';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\r\n\r\nconst safeMin = 0.001;\r\nconst minDuration = 0.01;\r\nconst maxDuration = 10.0;\r\nconst minDamping = 0.05;\r\nconst maxDamping = 1;\r\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\r\n    let envelope;\r\n    let derivative;\r\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\r\n    let dampingRatio = 1 - bounce;\r\n    /**\r\n     * Restrict dampingRatio and duration to within acceptable ranges.\r\n     */\r\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\r\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\r\n    if (dampingRatio < 1) {\r\n        /**\r\n         * Underdamped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const a = exponentialDecay - velocity;\r\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\r\n            const c = Math.exp(-delta);\r\n            return safeMin - (a / b) * c;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const d = delta * velocity + velocity;\r\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\r\n            const f = Math.exp(-delta);\r\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\r\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\r\n            return (factor * ((d - e) * f)) / g;\r\n        };\r\n    }\r\n    else {\r\n        /**\r\n         * Critically-damped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (undampedFreq - velocity) * duration + 1;\r\n            return -safeMin + a * b;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (velocity - undampedFreq) * (duration * duration);\r\n            return a * b;\r\n        };\r\n    }\r\n    const initialGuess = 5 / duration;\r\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\r\n    duration = secondsToMilliseconds(duration);\r\n    if (isNaN(undampedFreq)) {\r\n        return {\r\n            stiffness: 100,\r\n            damping: 10,\r\n            duration,\r\n        };\r\n    }\r\n    else {\r\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\r\n        return {\r\n            stiffness,\r\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\r\n            duration,\r\n        };\r\n    }\r\n}\r\nconst rootIterations = 12;\r\nfunction approximateRoot(envelope, derivative, initialGuess) {\r\n    let result = initialGuess;\r\n    for (let i = 1; i < rootIterations; i++) {\r\n        result = result - envelope(result) / derivative(result);\r\n    }\r\n    return result;\r\n}\r\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\r\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\r\n}\r\n\r\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\r\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\r\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\r\nimport { findSpring, calcAngularFreq } from './find.mjs';\r\n\r\nconst durationKeys = [\"duration\", \"bounce\"];\r\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\r\nfunction isSpringType(options, keys) {\r\n    return keys.some((key) => options[key] !== undefined);\r\n}\r\nfunction getSpringOptions(options) {\r\n    let springOptions = {\r\n        velocity: 0.0,\r\n        stiffness: 100,\r\n        damping: 10,\r\n        mass: 1.0,\r\n        isResolvedFromDuration: false,\r\n        ...options,\r\n    };\r\n    // stiffness/damping/mass overrides duration/bounce\r\n    if (!isSpringType(options, physicsKeys) &&\r\n        isSpringType(options, durationKeys)) {\r\n        const derived = findSpring(options);\r\n        springOptions = {\r\n            ...springOptions,\r\n            ...derived,\r\n            mass: 1.0,\r\n        };\r\n        springOptions.isResolvedFromDuration = true;\r\n    }\r\n    return springOptions;\r\n}\r\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\r\n    const origin = keyframes[0];\r\n    const target = keyframes[keyframes.length - 1];\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = { done: false, value: origin };\r\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\r\n        ...options,\r\n        velocity: -millisecondsToSeconds(options.velocity || 0),\r\n    });\r\n    const initialVelocity = velocity || 0.0;\r\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\r\n    const initialDelta = target - origin;\r\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\r\n    /**\r\n     * If we're working on a granular scale, use smaller defaults for determining\r\n     * when the spring is finished.\r\n     *\r\n     * These defaults have been selected emprically based on what strikes a good\r\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\r\n     */\r\n    const isGranularScale = Math.abs(initialDelta) < 5;\r\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\r\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\r\n    let resolveSpring;\r\n    if (dampingRatio < 1) {\r\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\r\n        // Underdamped spring\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            return (target -\r\n                envelope *\r\n                    (((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) /\r\n                        angularFreq) *\r\n                        Math.sin(angularFreq * t) +\r\n                        initialDelta * Math.cos(angularFreq * t)));\r\n        };\r\n    }\r\n    else if (dampingRatio === 1) {\r\n        // Critically damped spring\r\n        resolveSpring = (t) => target -\r\n            Math.exp(-undampedAngularFreq * t) *\r\n                (initialDelta +\r\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\r\n    }\r\n    else {\r\n        // Overdamped spring\r\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            // When performing sinh or cosh values can hit Infinity so we cap them here\r\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\r\n            return (target -\r\n                (envelope *\r\n                    ((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) *\r\n                        Math.sinh(freqForT) +\r\n                        dampedAngularFreq *\r\n                            initialDelta *\r\n                            Math.cosh(freqForT))) /\r\n                    dampedAngularFreq);\r\n        };\r\n    }\r\n    return {\r\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\r\n        next: (t) => {\r\n            const current = resolveSpring(t);\r\n            if (!isResolvedFromDuration) {\r\n                let currentVelocity = initialVelocity;\r\n                if (t !== 0) {\r\n                    /**\r\n                     * We only need to calculate velocity for under-damped springs\r\n                     * as over- and critically-damped springs can't overshoot, so\r\n                     * checking only for displacement is enough.\r\n                     */\r\n                    if (dampingRatio < 1) {\r\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\r\n                    }\r\n                    else {\r\n                        currentVelocity = 0;\r\n                    }\r\n                }\r\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\r\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\r\n                state.done =\r\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\r\n            }\r\n            else {\r\n                state.done = t >= duration;\r\n            }\r\n            state.value = state.done ? target : current;\r\n            return state;\r\n        },\r\n    };\r\n}\r\n\r\nexport { spring };\r\n","import { spring } from './spring/index.mjs';\r\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\r\n\r\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\r\n    const origin = keyframes[0];\r\n    const state = {\r\n        done: false,\r\n        value: origin,\r\n    };\r\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\r\n    const nearestBoundary = (v) => {\r\n        if (min === undefined)\r\n            return max;\r\n        if (max === undefined)\r\n            return min;\r\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\r\n    };\r\n    let amplitude = power * velocity;\r\n    const ideal = origin + amplitude;\r\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\r\n    /**\r\n     * If the target has changed we need to re-calculate the amplitude, otherwise\r\n     * the animation will start from the wrong position.\r\n     */\r\n    if (target !== ideal)\r\n        amplitude = target - origin;\r\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\r\n    const calcLatest = (t) => target + calcDelta(t);\r\n    const applyFriction = (t) => {\r\n        const delta = calcDelta(t);\r\n        const latest = calcLatest(t);\r\n        state.done = Math.abs(delta) <= restDelta;\r\n        state.value = state.done ? target : latest;\r\n    };\r\n    /**\r\n     * Ideally this would resolve for t in a stateless way, we could\r\n     * do that by always precalculating the animation but as we know\r\n     * this will be done anyway we can assume that spring will\r\n     * be discovered during that.\r\n     */\r\n    let timeReachedBoundary;\r\n    let spring$1;\r\n    const checkCatchBoundary = (t) => {\r\n        if (!isOutOfBounds(state.value))\r\n            return;\r\n        timeReachedBoundary = t;\r\n        spring$1 = spring({\r\n            keyframes: [state.value, nearestBoundary(state.value)],\r\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\r\n            damping: bounceDamping,\r\n            stiffness: bounceStiffness,\r\n            restDelta,\r\n            restSpeed,\r\n        });\r\n    };\r\n    checkCatchBoundary(0);\r\n    return {\r\n        calculatedDuration: null,\r\n        next: (t) => {\r\n            /**\r\n             * We need to resolve the friction to figure out if we need a\r\n             * spring but we don't want to do this twice per frame. So here\r\n             * we flag if we updated for this frame and later if we did\r\n             * we can skip doing it again.\r\n             */\r\n            let hasUpdatedFrame = false;\r\n            if (!spring$1 && timeReachedBoundary === undefined) {\r\n                hasUpdatedFrame = true;\r\n                applyFriction(t);\r\n                checkCatchBoundary(t);\r\n            }\r\n            /**\r\n             * If we have a spring and the provided t is beyond the moment the friction\r\n             * animation crossed the min/max boundary, use the spring.\r\n             */\r\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\r\n                return spring$1.next(t - timeReachedBoundary);\r\n            }\r\n            else {\r\n                !hasUpdatedFrame && applyFriction(t);\r\n                return state;\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport { inertia };\r\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\r\n\r\nconst frameloopDriver = (update) => {\r\n    const passTimestamp = ({ timestamp }) => update(timestamp);\r\n    return {\r\n        start: () => frame.update(passTimestamp, true),\r\n        stop: () => cancelFrame(passTimestamp),\r\n        /**\r\n         * If we're processing this frame we can use the\r\n         * framelocked timestamp to keep things in sync.\r\n         */\r\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\r\n    };\r\n};\r\n\r\nexport { frameloopDriver };\r\n","/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxGeneratorDuration = 20000;\r\nfunction calcGeneratorDuration(generator) {\r\n    let duration = 0;\r\n    const timeStep = 50;\r\n    let state = generator.next(duration);\r\n    while (!state.done && duration < maxGeneratorDuration) {\r\n        duration += timeStep;\r\n        state = generator.next(duration);\r\n    }\r\n    return duration >= maxGeneratorDuration ? Infinity : duration;\r\n}\r\n\r\nexport { calcGeneratorDuration, maxGeneratorDuration };\r\n","import { keyframes } from '../../generators/keyframes.mjs';\r\nimport { spring } from '../../generators/spring/index.mjs';\r\nimport { inertia } from '../../generators/inertia.mjs';\r\nimport { frameloopDriver } from './driver-frameloop.mjs';\r\nimport { interpolate } from '../../../utils/interpolate.mjs';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\r\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\r\nimport { invariant } from '../../../utils/errors.mjs';\r\n\r\nconst types = {\r\n    decay: inertia,\r\n    inertia,\r\n    tween: keyframes,\r\n    keyframes: keyframes,\r\n    spring,\r\n};\r\n/**\r\n * Animate a single value on the main thread.\r\n *\r\n * This function is written, where functionality overlaps,\r\n * to be largely spec-compliant with WAAPI to allow fungibility\r\n * between the two.\r\n */\r\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\r\n    let speed = 1;\r\n    let hasStopped = false;\r\n    let resolveFinishedPromise;\r\n    let currentFinishedPromise;\r\n    /**\r\n     * Resolve the current Promise every time we enter the\r\n     * finished state. This is WAAPI-compatible behaviour.\r\n     */\r\n    const updateFinishedPromise = () => {\r\n        currentFinishedPromise = new Promise((resolve) => {\r\n            resolveFinishedPromise = resolve;\r\n        });\r\n    };\r\n    // Create the first finished promise\r\n    updateFinishedPromise();\r\n    let animationDriver;\r\n    const generatorFactory = types[type] || keyframes;\r\n    /**\r\n     * If this isn't the keyframes generator and we've been provided\r\n     * strings as keyframes, we need to interpolate these.\r\n     */\r\n    let mapNumbersToKeyframes;\r\n    if (generatorFactory !== keyframes &&\r\n        typeof keyframes$1[0] !== \"number\") {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\r\n        }\r\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\r\n            clamp: false,\r\n        });\r\n        keyframes$1 = [0, 100];\r\n    }\r\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\r\n    let mirroredGenerator;\r\n    if (repeatType === \"mirror\") {\r\n        mirroredGenerator = generatorFactory({\r\n            ...options,\r\n            keyframes: [...keyframes$1].reverse(),\r\n            velocity: -(options.velocity || 0),\r\n        });\r\n    }\r\n    let playState = \"idle\";\r\n    let holdTime = null;\r\n    let startTime = null;\r\n    let cancelTime = null;\r\n    /**\r\n     * If duration is undefined and we have repeat options,\r\n     * we need to calculate a duration from the generator.\r\n     *\r\n     * We set it to the generator itself to cache the duration.\r\n     * Any timeline resolver will need to have already precalculated\r\n     * the duration by this step.\r\n     */\r\n    if (generator.calculatedDuration === null && repeat) {\r\n        generator.calculatedDuration = calcGeneratorDuration(generator);\r\n    }\r\n    const { calculatedDuration } = generator;\r\n    let resolvedDuration = Infinity;\r\n    let totalDuration = Infinity;\r\n    if (calculatedDuration !== null) {\r\n        resolvedDuration = calculatedDuration + repeatDelay;\r\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\r\n    }\r\n    let currentTime = 0;\r\n    const tick = (timestamp) => {\r\n        if (startTime === null)\r\n            return;\r\n        /**\r\n         * requestAnimationFrame timestamps can come through as lower than\r\n         * the startTime as set by performance.now(). Here we prevent this,\r\n         * though in the future it could be possible to make setting startTime\r\n         * a pending operation that gets resolved here.\r\n         */\r\n        if (speed > 0)\r\n            startTime = Math.min(startTime, timestamp);\r\n        if (speed < 0)\r\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\r\n        if (holdTime !== null) {\r\n            currentTime = holdTime;\r\n        }\r\n        else {\r\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\r\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\r\n            // example.\r\n            currentTime = Math.round(timestamp - startTime) * speed;\r\n        }\r\n        // Rebase on delay\r\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\r\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\r\n        currentTime = Math.max(timeWithoutDelay, 0);\r\n        /**\r\n         * If this animation has finished, set the current time\r\n         * to the total duration.\r\n         */\r\n        if (playState === \"finished\" && holdTime === null) {\r\n            currentTime = totalDuration;\r\n        }\r\n        let elapsed = currentTime;\r\n        let frameGenerator = generator;\r\n        if (repeat) {\r\n            /**\r\n             * Get the current progress (0-1) of the animation. If t is >\r\n             * than duration we'll get values like 2.5 (midway through the\r\n             * third iteration)\r\n             */\r\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\r\n            /**\r\n             * Get the current iteration (0 indexed). For instance the floor of\r\n             * 2.5 is 2.\r\n             */\r\n            let currentIteration = Math.floor(progress);\r\n            /**\r\n             * Get the current progress of the iteration by taking the remainder\r\n             * so 2.5 is 0.5 through iteration 2\r\n             */\r\n            let iterationProgress = progress % 1.0;\r\n            /**\r\n             * If iteration progress is 1 we count that as the end\r\n             * of the previous iteration.\r\n             */\r\n            if (!iterationProgress && progress >= 1) {\r\n                iterationProgress = 1;\r\n            }\r\n            iterationProgress === 1 && currentIteration--;\r\n            currentIteration = Math.min(currentIteration, repeat + 1);\r\n            /**\r\n             * Reverse progress if we're not running in \"normal\" direction\r\n             */\r\n            const isOddIteration = Boolean(currentIteration % 2);\r\n            if (isOddIteration) {\r\n                if (repeatType === \"reverse\") {\r\n                    iterationProgress = 1 - iterationProgress;\r\n                    if (repeatDelay) {\r\n                        iterationProgress -= repeatDelay / resolvedDuration;\r\n                    }\r\n                }\r\n                else if (repeatType === \"mirror\") {\r\n                    frameGenerator = mirroredGenerator;\r\n                }\r\n            }\r\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\r\n        }\r\n        /**\r\n         * If we're in negative time, set state as the initial keyframe.\r\n         * This prevents delay: x, duration: 0 animations from finishing\r\n         * instantly.\r\n         */\r\n        const state = isInDelayPhase\r\n            ? { done: false, value: keyframes$1[0] }\r\n            : frameGenerator.next(elapsed);\r\n        if (mapNumbersToKeyframes) {\r\n            state.value = mapNumbersToKeyframes(state.value);\r\n        }\r\n        let { done } = state;\r\n        if (!isInDelayPhase && calculatedDuration !== null) {\r\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\r\n        }\r\n        const isAnimationFinished = holdTime === null &&\r\n            (playState === \"finished\" || (playState === \"running\" && done));\r\n        if (onUpdate) {\r\n            onUpdate(state.value);\r\n        }\r\n        if (isAnimationFinished) {\r\n            finish();\r\n        }\r\n        return state;\r\n    };\r\n    const stopAnimationDriver = () => {\r\n        animationDriver && animationDriver.stop();\r\n        animationDriver = undefined;\r\n    };\r\n    const cancel = () => {\r\n        playState = \"idle\";\r\n        stopAnimationDriver();\r\n        resolveFinishedPromise();\r\n        updateFinishedPromise();\r\n        startTime = cancelTime = null;\r\n    };\r\n    const finish = () => {\r\n        playState = \"finished\";\r\n        onComplete && onComplete();\r\n        stopAnimationDriver();\r\n        resolveFinishedPromise();\r\n    };\r\n    const play = () => {\r\n        if (hasStopped)\r\n            return;\r\n        if (!animationDriver)\r\n            animationDriver = driver(tick);\r\n        const now = animationDriver.now();\r\n        onPlay && onPlay();\r\n        if (holdTime !== null) {\r\n            startTime = now - holdTime;\r\n        }\r\n        else if (!startTime || playState === \"finished\") {\r\n            startTime = now;\r\n        }\r\n        if (playState === \"finished\") {\r\n            updateFinishedPromise();\r\n        }\r\n        cancelTime = startTime;\r\n        holdTime = null;\r\n        /**\r\n         * Set playState to running only after we've used it in\r\n         * the previous logic.\r\n         */\r\n        playState = \"running\";\r\n        animationDriver.start();\r\n    };\r\n    if (autoplay) {\r\n        play();\r\n    }\r\n    const controls = {\r\n        then(resolve, reject) {\r\n            return currentFinishedPromise.then(resolve, reject);\r\n        },\r\n        get time() {\r\n            return millisecondsToSeconds(currentTime);\r\n        },\r\n        set time(newTime) {\r\n            newTime = secondsToMilliseconds(newTime);\r\n            currentTime = newTime;\r\n            if (holdTime !== null || !animationDriver || speed === 0) {\r\n                holdTime = newTime;\r\n            }\r\n            else {\r\n                startTime = animationDriver.now() - newTime / speed;\r\n            }\r\n        },\r\n        get duration() {\r\n            const duration = generator.calculatedDuration === null\r\n                ? calcGeneratorDuration(generator)\r\n                : generator.calculatedDuration;\r\n            return millisecondsToSeconds(duration);\r\n        },\r\n        get speed() {\r\n            return speed;\r\n        },\r\n        set speed(newSpeed) {\r\n            if (newSpeed === speed || !animationDriver)\r\n                return;\r\n            speed = newSpeed;\r\n            controls.time = millisecondsToSeconds(currentTime);\r\n        },\r\n        get state() {\r\n            return playState;\r\n        },\r\n        play,\r\n        pause: () => {\r\n            playState = \"paused\";\r\n            holdTime = currentTime;\r\n        },\r\n        stop: () => {\r\n            hasStopped = true;\r\n            if (playState === \"idle\")\r\n                return;\r\n            playState = \"idle\";\r\n            onStop && onStop();\r\n            cancel();\r\n        },\r\n        cancel: () => {\r\n            if (cancelTime !== null)\r\n                tick(cancelTime);\r\n            cancel();\r\n        },\r\n        complete: () => {\r\n            playState = \"finished\";\r\n        },\r\n        sample: (elapsed) => {\r\n            startTime = 0;\r\n            return tick(elapsed);\r\n        },\r\n    };\r\n    return controls;\r\n}\r\n\r\nexport { animateValue };\r\n","function memo(callback) {\r\n    let result;\r\n    return () => {\r\n        if (result === undefined)\r\n            result = callback();\r\n        return result;\r\n    };\r\n}\r\n\r\nexport { memo };\r\n","import { animateStyle } from './index.mjs';\r\nimport { isWaapiSupportedEasing } from './easing.mjs';\r\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\r\nimport { animateValue } from '../js/index.mjs';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\r\nimport { memo } from '../../../utils/memo.mjs';\r\nimport { noop } from '../../../utils/noop.mjs';\r\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\r\n\r\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\r\n/**\r\n * A list of values that can be hardware-accelerated.\r\n */\r\nconst acceleratedValues = new Set([\r\n    \"opacity\",\r\n    \"clipPath\",\r\n    \"filter\",\r\n    \"transform\",\r\n    \"backgroundColor\",\r\n]);\r\n/**\r\n * 10ms is chosen here as it strikes a balance between smooth\r\n * results (more than one keyframe per frame at 60fps) and\r\n * keyframe quantity.\r\n */\r\nconst sampleDelta = 10; //ms\r\n/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxDuration = 20000;\r\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\r\n    valueName === \"backgroundColor\" ||\r\n    !isWaapiSupportedEasing(options.ease);\r\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\r\n    const canAccelerateAnimation = supportsWaapi() &&\r\n        acceleratedValues.has(valueName) &&\r\n        !options.repeatDelay &&\r\n        options.repeatType !== \"mirror\" &&\r\n        options.damping !== 0 &&\r\n        options.type !== \"inertia\";\r\n    if (!canAccelerateAnimation)\r\n        return false;\r\n    /**\r\n     * TODO: Unify with js/index\r\n     */\r\n    let hasStopped = false;\r\n    let resolveFinishedPromise;\r\n    let currentFinishedPromise;\r\n    /**\r\n     * Cancelling an animation will write to the DOM. For safety we want to defer\r\n     * this until the next `update` frame lifecycle. This flag tracks whether we\r\n     * have a pending cancel, if so we shouldn't allow animations to finish.\r\n     */\r\n    let pendingCancel = false;\r\n    /**\r\n     * Resolve the current Promise every time we enter the\r\n     * finished state. This is WAAPI-compatible behaviour.\r\n     */\r\n    const updateFinishedPromise = () => {\r\n        currentFinishedPromise = new Promise((resolve) => {\r\n            resolveFinishedPromise = resolve;\r\n        });\r\n    };\r\n    // Create the first finished promise\r\n    updateFinishedPromise();\r\n    let { keyframes, duration = 300, ease, times } = options;\r\n    /**\r\n     * If this animation needs pre-generated keyframes then generate.\r\n     */\r\n    if (requiresPregeneratedKeyframes(valueName, options)) {\r\n        const sampleAnimation = animateValue({\r\n            ...options,\r\n            repeat: 0,\r\n            delay: 0,\r\n        });\r\n        let state = { done: false, value: keyframes[0] };\r\n        const pregeneratedKeyframes = [];\r\n        /**\r\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\r\n         * we're heading for an infinite loop.\r\n         */\r\n        let t = 0;\r\n        while (!state.done && t < maxDuration) {\r\n            state = sampleAnimation.sample(t);\r\n            pregeneratedKeyframes.push(state.value);\r\n            t += sampleDelta;\r\n        }\r\n        times = undefined;\r\n        keyframes = pregeneratedKeyframes;\r\n        duration = t - sampleDelta;\r\n        ease = \"linear\";\r\n    }\r\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\r\n        ...options,\r\n        duration,\r\n        /**\r\n         * This function is currently not called if ease is provided\r\n         * as a function so the cast is safe.\r\n         *\r\n         * However it would be possible for a future refinement to port\r\n         * in easing pregeneration from Motion One for browsers that\r\n         * support the upcoming `linear()` easing function.\r\n         */\r\n        ease: ease,\r\n        times,\r\n    });\r\n    const cancelAnimation = () => {\r\n        pendingCancel = false;\r\n        animation.cancel();\r\n    };\r\n    const safeCancel = () => {\r\n        pendingCancel = true;\r\n        frame.update(cancelAnimation);\r\n        resolveFinishedPromise();\r\n        updateFinishedPromise();\r\n    };\r\n    /**\r\n     * Prefer the `onfinish` prop as it's more widely supported than\r\n     * the `finished` promise.\r\n     *\r\n     * Here, we synchronously set the provided MotionValue to the end\r\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\r\n     * be removed from the element which would then revert to its old styles.\r\n     */\r\n    animation.onfinish = () => {\r\n        if (pendingCancel)\r\n            return;\r\n        value.set(getFinalKeyframe(keyframes, options));\r\n        onComplete && onComplete();\r\n        safeCancel();\r\n    };\r\n    /**\r\n     * Animation interrupt callback.\r\n     */\r\n    const controls = {\r\n        then(resolve, reject) {\r\n            return currentFinishedPromise.then(resolve, reject);\r\n        },\r\n        attachTimeline(timeline) {\r\n            animation.timeline = timeline;\r\n            animation.onfinish = null;\r\n            return noop;\r\n        },\r\n        get time() {\r\n            return millisecondsToSeconds(animation.currentTime || 0);\r\n        },\r\n        set time(newTime) {\r\n            animation.currentTime = secondsToMilliseconds(newTime);\r\n        },\r\n        get speed() {\r\n            return animation.playbackRate;\r\n        },\r\n        set speed(newSpeed) {\r\n            animation.playbackRate = newSpeed;\r\n        },\r\n        get duration() {\r\n            return millisecondsToSeconds(duration);\r\n        },\r\n        play: () => {\r\n            if (hasStopped)\r\n                return;\r\n            animation.play();\r\n            /**\r\n             * Cancel any pending cancel tasks\r\n             */\r\n            cancelFrame(cancelAnimation);\r\n        },\r\n        pause: () => animation.pause(),\r\n        stop: () => {\r\n            hasStopped = true;\r\n            if (animation.playState === \"idle\")\r\n                return;\r\n            /**\r\n             * WAAPI doesn't natively have any interruption capabilities.\r\n             *\r\n             * Rather than read commited styles back out of the DOM, we can\r\n             * create a renderless JS animation and sample it twice to calculate\r\n             * its current value, \"previous\" value, and therefore allow\r\n             * Motion to calculate velocity for any subsequent animation.\r\n             */\r\n            const { currentTime } = animation;\r\n            if (currentTime) {\r\n                const sampleAnimation = animateValue({\r\n                    ...options,\r\n                    autoplay: false,\r\n                });\r\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\r\n            }\r\n            safeCancel();\r\n        },\r\n        complete: () => {\r\n            if (pendingCancel)\r\n                return;\r\n            animation.finish();\r\n        },\r\n        cancel: safeCancel,\r\n    };\r\n    return controls;\r\n}\r\n\r\nexport { createAcceleratedAnimation };\r\n","import { animateValue } from './js/index.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\n\r\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\r\n    const setValue = () => {\r\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\r\n        onComplete && onComplete();\r\n        /**\r\n         * TODO: As this API grows it could make sense to always return\r\n         * animateValue. This will be a bigger project as animateValue\r\n         * is frame-locked whereas this function resolves instantly.\r\n         * This is a behavioural change and also has ramifications regarding\r\n         * assumptions within tests.\r\n         */\r\n        return {\r\n            time: 0,\r\n            speed: 1,\r\n            duration: 0,\r\n            play: (noop),\r\n            pause: (noop),\r\n            stop: (noop),\r\n            then: (resolve) => {\r\n                resolve();\r\n                return Promise.resolve();\r\n            },\r\n            cancel: (noop),\r\n            complete: (noop),\r\n        };\r\n    };\r\n    return delay\r\n        ? animateValue({\r\n            keyframes: [0, 1],\r\n            duration: 0,\r\n            delay,\r\n            onComplete: setValue,\r\n        })\r\n        : setValue();\r\n}\r\n\r\nexport { createInstantAnimation };\r\n","import { transformProps } from '../../render/html/utils/transform.mjs';\r\n\r\nconst underDampedSpring = {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restSpeed: 10,\r\n};\r\nconst criticallyDampedSpring = (target) => ({\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\r\n    restSpeed: 10,\r\n});\r\nconst keyframesTransition = {\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n};\r\n/**\r\n * Default easing curve is a slightly shallower version of\r\n * the default browser easing curve.\r\n */\r\nconst ease = {\r\n    type: \"keyframes\",\r\n    ease: [0.25, 0.1, 0.35, 1],\r\n    duration: 0.3,\r\n};\r\nconst getDefaultTransition = (valueKey, { keyframes }) => {\r\n    if (keyframes.length > 2) {\r\n        return keyframesTransition;\r\n    }\r\n    else if (transformProps.has(valueKey)) {\r\n        return valueKey.startsWith(\"scale\")\r\n            ? criticallyDampedSpring(keyframes[1])\r\n            : underDampedSpring;\r\n    }\r\n    return ease;\r\n};\r\n\r\nexport { getDefaultTransition };\r\n","import { complex } from '../../value/types/complex/index.mjs';\r\n\r\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nconst isAnimatable = (key, value) => {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (key === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { isAnimatable };\r\n","import { complex } from './index.mjs';\r\nimport { floatRegex } from '../utils.mjs';\r\n\r\n/**\r\n * Properties that should default to 1 or 100%\r\n */\r\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\r\nfunction applyDefaultFilter(v) {\r\n    const [name, value] = v.slice(0, -1).split(\"(\");\r\n    if (name === \"drop-shadow\")\r\n        return v;\r\n    const [number] = value.match(floatRegex) || [];\r\n    if (!number)\r\n        return v;\r\n    const unit = value.replace(number, \"\");\r\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\r\n    if (number !== value)\r\n        defaultValue *= 100;\r\n    return name + \"(\" + defaultValue + unit + \")\";\r\n}\r\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\r\nconst filter = {\r\n    ...complex,\r\n    getAnimatableNone: (v) => {\r\n        const functions = v.match(functionRegex);\r\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\r\n    },\r\n};\r\n\r\nexport { filter };\r\n","import { color } from '../../../value/types/color/index.mjs';\r\nimport { filter } from '../../../value/types/complex/filter.mjs';\r\nimport { numberValueTypes } from './number.mjs';\r\n\r\n/**\r\n * A map of default value types for common values\r\n */\r\nconst defaultValueTypes = {\r\n    ...numberValueTypes,\r\n    // Color props\r\n    color,\r\n    backgroundColor: color,\r\n    outlineColor: color,\r\n    fill: color,\r\n    stroke: color,\r\n    // Border props\r\n    borderColor: color,\r\n    borderTopColor: color,\r\n    borderRightColor: color,\r\n    borderBottomColor: color,\r\n    borderLeftColor: color,\r\n    filter,\r\n    WebkitFilter: filter,\r\n};\r\n/**\r\n * Gets the default ValueType for the provided value key\r\n */\r\nconst getDefaultValueType = (key) => defaultValueTypes[key];\r\n\r\nexport { defaultValueTypes, getDefaultValueType };\r\n","import { complex } from '../../../value/types/complex/index.mjs';\r\nimport { filter } from '../../../value/types/complex/filter.mjs';\r\nimport { getDefaultValueType } from './defaults.mjs';\r\n\r\nfunction getAnimatableNone(key, value) {\r\n    let defaultValueType = getDefaultValueType(key);\r\n    if (defaultValueType !== filter)\r\n        defaultValueType = complex;\r\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n    return defaultValueType.getAnimatableNone\r\n        ? defaultValueType.getAnimatableNone(value)\r\n        : undefined;\r\n}\r\n\r\nexport { getAnimatableNone };\r\n","/**\r\n * Check if the value is a zero value string like \"0px\" or \"0%\"\r\n */\r\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\r\n\r\nexport { isZeroValueString };\r\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\r\n\r\nfunction isNone(value) {\r\n    if (typeof value === \"number\") {\r\n        return value === 0;\r\n    }\r\n    else if (value !== null) {\r\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\r\n    }\r\n}\r\n\r\nexport { isNone };\r\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\r\nimport { isAnimatable } from './is-animatable.mjs';\r\nimport { isNone } from './is-none.mjs';\r\n\r\nfunction getKeyframes(value, valueName, target, transition) {\r\n    const isTargetAnimatable = isAnimatable(valueName, target);\r\n    let keyframes;\r\n    if (Array.isArray(target)) {\r\n        keyframes = [...target];\r\n    }\r\n    else {\r\n        keyframes = [null, target];\r\n    }\r\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\r\n    let animatableTemplateValue = undefined;\r\n    const noneKeyframeIndexes = [];\r\n    for (let i = 0; i < keyframes.length; i++) {\r\n        /**\r\n         * Fill null/wildcard keyframes\r\n         */\r\n        if (keyframes[i] === null) {\r\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\r\n        }\r\n        if (isNone(keyframes[i])) {\r\n            noneKeyframeIndexes.push(i);\r\n        }\r\n        // TODO: Clean this conditional, it works for now\r\n        if (typeof keyframes[i] === \"string\" &&\r\n            keyframes[i] !== \"none\" &&\r\n            keyframes[i] !== \"0\") {\r\n            animatableTemplateValue = keyframes[i];\r\n        }\r\n    }\r\n    if (isTargetAnimatable &&\r\n        noneKeyframeIndexes.length &&\r\n        animatableTemplateValue) {\r\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\r\n            const index = noneKeyframeIndexes[i];\r\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\r\n        }\r\n    }\r\n    return keyframes;\r\n}\r\n\r\nexport { getKeyframes };\r\n","/**\r\n * Decide whether a transition is defined on a given Transition.\r\n * This filters out orchestration options and returns true\r\n * if any options are left.\r\n */\r\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\r\n    return !!Object.keys(transition).length;\r\n}\r\nfunction getValueTransition(transition, key) {\r\n    return transition[key] || transition[\"default\"] || transition;\r\n}\r\n\r\nexport { getValueTransition, isTransitionDefined };\r\n","const MotionGlobalConfig = {\r\n    skipAnimations: false,\r\n};\r\n\r\nexport { MotionGlobalConfig };\r\n","import { warning } from '../../utils/errors.mjs';\r\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\r\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\r\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\r\nimport { createInstantAnimation } from '../animators/instant.mjs';\r\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\r\nimport { isAnimatable } from '../utils/is-animatable.mjs';\r\nimport { getKeyframes } from '../utils/keyframes.mjs';\r\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\r\nimport { animateValue } from '../animators/js/index.mjs';\r\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\r\n\r\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\r\n    return (onComplete) => {\r\n        const valueTransition = getValueTransition(transition, valueName) || {};\r\n        /**\r\n         * Most transition values are currently completely overwritten by value-specific\r\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\r\n         * delay actually does inherit from the root transition if not value-specific.\r\n         */\r\n        const delay = valueTransition.delay || transition.delay || 0;\r\n        /**\r\n         * Elapsed isn't a public transition option but can be passed through from\r\n         * optimized appear effects in milliseconds.\r\n         */\r\n        let { elapsed = 0 } = transition;\r\n        elapsed = elapsed - secondsToMilliseconds(delay);\r\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\r\n        /**\r\n         * Check if we're able to animate between the start and end keyframes,\r\n         * and throw a warning if we're attempting to animate between one that's\r\n         * animatable and another that isn't.\r\n         */\r\n        const originKeyframe = keyframes[0];\r\n        const targetKeyframe = keyframes[keyframes.length - 1];\r\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\r\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\r\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\r\n        let options = {\r\n            keyframes,\r\n            velocity: value.getVelocity(),\r\n            ease: \"easeOut\",\r\n            ...valueTransition,\r\n            delay: -elapsed,\r\n            onUpdate: (v) => {\r\n                value.set(v);\r\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\r\n            },\r\n            onComplete: () => {\r\n                onComplete();\r\n                valueTransition.onComplete && valueTransition.onComplete();\r\n            },\r\n        };\r\n        /**\r\n         * If there's no transition defined for this value, we can generate\r\n         * unqiue transition settings for this value.\r\n         */\r\n        if (!isTransitionDefined(valueTransition)) {\r\n            options = {\r\n                ...options,\r\n                ...getDefaultTransition(valueName, options),\r\n            };\r\n        }\r\n        /**\r\n         * Both WAAPI and our internal animation functions use durations\r\n         * as defined by milliseconds, while our external API defines them\r\n         * as seconds.\r\n         */\r\n        if (options.duration) {\r\n            options.duration = secondsToMilliseconds(options.duration);\r\n        }\r\n        if (options.repeatDelay) {\r\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\r\n        }\r\n        if (!isOriginAnimatable ||\r\n            !isTargetAnimatable ||\r\n            instantAnimationState.current ||\r\n            valueTransition.type === false ||\r\n            MotionGlobalConfig.skipAnimations) {\r\n            /**\r\n             * If we can't animate this value, or the global instant animation flag is set,\r\n             * or this is simply defined as an instant transition, return an instant transition.\r\n             */\r\n            return createInstantAnimation(instantAnimationState.current\r\n                ? { ...options, delay: 0 }\r\n                : options);\r\n        }\r\n        /**\r\n         * Animate via WAAPI if possible.\r\n         */\r\n        if (\r\n        /**\r\n         * If this is a handoff animation, the optimised animation will be running via\r\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\r\n         * optimised animation.\r\n         */\r\n        !transition.isHandoff &&\r\n            value.owner &&\r\n            value.owner.current instanceof HTMLElement &&\r\n            /**\r\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\r\n             * no way to read the value from WAAPI every frame.\r\n             */\r\n            !value.owner.getProps().onUpdate) {\r\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\r\n            if (acceleratedAnimation)\r\n                return acceleratedAnimation;\r\n        }\r\n        /**\r\n         * If we didn't create an accelerated animation, create a JS animation\r\n         */\r\n        return animateValue(options);\r\n    };\r\n};\r\n\r\nexport { animateMotionValue };\r\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\r\n\r\nfunction isWillChangeMotionValue(value) {\r\n    return Boolean(isMotionValue(value) && value.add);\r\n}\r\n\r\nexport { isWillChangeMotionValue };\r\n","/**\r\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\r\n */\r\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\r\n\r\nexport { isNumericalString };\r\n","function addUniqueItem(arr, item) {\r\n    if (arr.indexOf(item) === -1)\r\n        arr.push(item);\r\n}\r\nfunction removeItem(arr, item) {\r\n    const index = arr.indexOf(item);\r\n    if (index > -1)\r\n        arr.splice(index, 1);\r\n}\r\n// Adapted from array-move\r\nfunction moveItem([...arr], fromIndex, toIndex) {\r\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\r\n    if (startIndex >= 0 && startIndex < arr.length) {\r\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\r\n        const [item] = arr.splice(fromIndex, 1);\r\n        arr.splice(endIndex, 0, item);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport { addUniqueItem, moveItem, removeItem };\r\n","import { addUniqueItem, removeItem } from './array.mjs';\r\n\r\nclass SubscriptionManager {\r\n    constructor() {\r\n        this.subscriptions = [];\r\n    }\r\n    add(handler) {\r\n        addUniqueItem(this.subscriptions, handler);\r\n        return () => removeItem(this.subscriptions, handler);\r\n    }\r\n    notify(a, b, c) {\r\n        const numSubscriptions = this.subscriptions.length;\r\n        if (!numSubscriptions)\r\n            return;\r\n        if (numSubscriptions === 1) {\r\n            /**\r\n             * If there's only a single handler we can just call it without invoking a loop.\r\n             */\r\n            this.subscriptions[0](a, b, c);\r\n        }\r\n        else {\r\n            for (let i = 0; i < numSubscriptions; i++) {\r\n                /**\r\n                 * Check whether the handler exists before firing as it's possible\r\n                 * the subscriptions were modified during this loop running.\r\n                 */\r\n                const handler = this.subscriptions[i];\r\n                handler && handler(a, b, c);\r\n            }\r\n        }\r\n    }\r\n    getSize() {\r\n        return this.subscriptions.length;\r\n    }\r\n    clear() {\r\n        this.subscriptions.length = 0;\r\n    }\r\n}\r\n\r\nexport { SubscriptionManager };\r\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { frame, frameData } from '../frameloop/frame.mjs';\r\n\r\nconst isFloat = (value) => {\r\n    return !isNaN(parseFloat(value));\r\n};\r\nconst collectMotionValues = {\r\n    current: undefined,\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nclass MotionValue {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(init, options = {}) {\r\n        /**\r\n         * This will be replaced by the build step with the latest version number.\r\n         * When MotionValues are provided to motion components, warn if versions are mixed.\r\n         */\r\n        this.version = \"10.18.0\";\r\n        /**\r\n         * Duration, in milliseconds, since last updating frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.timeDelta = 0;\r\n        /**\r\n         * Timestamp of the last time this `MotionValue` was updated.\r\n         *\r\n         * @internal\r\n         */\r\n        this.lastUpdated = 0;\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = false;\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        this.updateAndNotify = (v, render = true) => {\r\n            this.prev = this.current;\r\n            this.current = v;\r\n            // Update timestamp\r\n            const { delta, timestamp } = frameData;\r\n            if (this.lastUpdated !== timestamp) {\r\n                this.timeDelta = delta;\r\n                this.lastUpdated = timestamp;\r\n                frame.postRender(this.scheduleVelocityCheck);\r\n            }\r\n            // Update update subscribers\r\n            if (this.prev !== this.current && this.events.change) {\r\n                this.events.change.notify(this.current);\r\n            }\r\n            // Update velocity subscribers\r\n            if (this.events.velocityChange) {\r\n                this.events.velocityChange.notify(this.getVelocity());\r\n            }\r\n            // Update render subscribers\r\n            if (render && this.events.renderRequest) {\r\n                this.events.renderRequest.notify(this.current);\r\n            }\r\n        };\r\n        /**\r\n         * Schedule a velocity check for the next frame.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\r\n        /**\r\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n         * This ensures velocity calculations return `0`.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.velocityCheck = ({ timestamp }) => {\r\n            if (timestamp !== this.lastUpdated) {\r\n                this.prev = this.current;\r\n                if (this.events.velocityChange) {\r\n                    this.events.velocityChange.notify(this.getVelocity());\r\n                }\r\n            }\r\n        };\r\n        this.hasAnimated = false;\r\n        this.prev = this.current = init;\r\n        this.canTrackVelocity = isFloat(this.current);\r\n        this.owner = options.owner;\r\n    }\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\r\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @deprecated\r\n     */\r\n    onChange(subscription) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\r\n        }\r\n        return this.on(\"change\", subscription);\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        const unsubscribe = this.events[eventName].add(callback);\r\n        if (eventName === \"change\") {\r\n            return () => {\r\n                unsubscribe();\r\n                /**\r\n                 * If we have no more change listeners by the start\r\n                 * of the next frame, stop active animations.\r\n                 */\r\n                frame.read(() => {\r\n                    if (!this.events.change.getSize()) {\r\n                        this.stop();\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        return unsubscribe;\r\n    }\r\n    clearListeners() {\r\n        for (const eventManagers in this.events) {\r\n            this.events[eventManagers].clear();\r\n        }\r\n    }\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    attach(passiveEffect, stopPassiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n        this.stopPassiveEffect = stopPassiveEffect;\r\n    }\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    set(v, render = true) {\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    }\r\n    setWithVelocity(prev, current, delta) {\r\n        this.set(current);\r\n        this.prev = prev;\r\n        this.timeDelta = delta;\r\n    }\r\n    /**\r\n     * Set the state of the `MotionValue`, stopping any active animations,\r\n     * effects, and resets velocity to `0`.\r\n     */\r\n    jump(v) {\r\n        this.updateAndNotify(v);\r\n        this.prev = v;\r\n        this.stop();\r\n        if (this.stopPassiveEffect)\r\n            this.stopPassiveEffect();\r\n    }\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    get() {\r\n        if (collectMotionValues.current) {\r\n            collectMotionValues.current.push(this);\r\n        }\r\n        return this.current;\r\n    }\r\n    /**\r\n     * @public\r\n     */\r\n    getPrevious() {\r\n        return this.prev;\r\n    }\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    getVelocity() {\r\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\r\n        return this.canTrackVelocity\r\n            ? // These casts could be avoided if parseFloat would be typed better\r\n                velocityPerSecond(parseFloat(this.current) -\r\n                    parseFloat(this.prev), this.timeDelta)\r\n            : 0;\r\n    }\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    start(startAnimation) {\r\n        this.stop();\r\n        return new Promise((resolve) => {\r\n            this.hasAnimated = true;\r\n            this.animation = startAnimation(resolve);\r\n            if (this.events.animationStart) {\r\n                this.events.animationStart.notify();\r\n            }\r\n        }).then(() => {\r\n            if (this.events.animationComplete) {\r\n                this.events.animationComplete.notify();\r\n            }\r\n            this.clearAnimation();\r\n        });\r\n    }\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    stop() {\r\n        if (this.animation) {\r\n            this.animation.stop();\r\n            if (this.events.animationCancel) {\r\n                this.events.animationCancel.notify();\r\n            }\r\n        }\r\n        this.clearAnimation();\r\n    }\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    isAnimating() {\r\n        return !!this.animation;\r\n    }\r\n    clearAnimation() {\r\n        delete this.animation;\r\n    }\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.clearListeners();\r\n        this.stop();\r\n        if (this.stopPassiveEffect) {\r\n            this.stopPassiveEffect();\r\n        }\r\n    }\r\n}\r\nfunction motionValue(init, options) {\r\n    return new MotionValue(init, options);\r\n}\r\n\r\nexport { MotionValue, collectMotionValues, motionValue };\r\n","/**\r\n * Tests a provided value against a ValueType\r\n */\r\nconst testValueType = (v) => (type) => type.test(v);\r\n\r\nexport { testValueType };\r\n","/**\r\n * ValueType for \"auto\"\r\n */\r\nconst auto = {\r\n    test: (v) => v === \"auto\",\r\n    parse: (v) => v,\r\n};\r\n\r\nexport { auto };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\r\nimport { testValueType } from './test.mjs';\r\nimport { auto } from './type-auto.mjs';\r\n\r\n/**\r\n * A list of value types commonly used for dimensions\r\n */\r\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\r\n/**\r\n * Tests a dimensional value against the list of dimension ValueTypes\r\n */\r\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\r\n\r\nexport { dimensionValueTypes, findDimensionValueType };\r\n","import { color } from '../../../value/types/color/index.mjs';\r\nimport { complex } from '../../../value/types/complex/index.mjs';\r\nimport { dimensionValueTypes } from './dimensions.mjs';\r\nimport { testValueType } from './test.mjs';\r\n\r\n/**\r\n * A list of all ValueTypes\r\n */\r\nconst valueTypes = [...dimensionValueTypes, color, complex];\r\n/**\r\n * Tests a value against the list of ValueTypes\r\n */\r\nconst findValueType = (v) => valueTypes.find(testValueType(v));\r\n\r\nexport { findValueType };\r\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\r\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\r\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { complex } from '../../value/types/complex/index.mjs';\r\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\r\nimport { findValueType } from '../dom/value-types/find.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\n\r\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\r\nfunction setMotionValue(visualElement, key, value) {\r\n    if (visualElement.hasValue(key)) {\r\n        visualElement.getValue(key).set(value);\r\n    }\r\n    else {\r\n        visualElement.addValue(key, motionValue(value));\r\n    }\r\n}\r\nfunction setTarget(visualElement, definition) {\r\n    const resolved = resolveVariant(visualElement, definition);\r\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\r\n    target = { ...target, ...transitionEnd };\r\n    for (const key in target) {\r\n        const value = resolveFinalValueInKeyframes(target[key]);\r\n        setMotionValue(visualElement, key, value);\r\n    }\r\n}\r\nfunction setVariants(visualElement, variantLabels) {\r\n    const reversedLabels = [...variantLabels].reverse();\r\n    reversedLabels.forEach((key) => {\r\n        const variant = visualElement.getVariant(key);\r\n        variant && setTarget(visualElement, variant);\r\n        if (visualElement.variantChildren) {\r\n            visualElement.variantChildren.forEach((child) => {\r\n                setVariants(child, variantLabels);\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction setValues(visualElement, definition) {\r\n    if (Array.isArray(definition)) {\r\n        return setVariants(visualElement, definition);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        return setVariants(visualElement, [definition]);\r\n    }\r\n    else {\r\n        setTarget(visualElement, definition);\r\n    }\r\n}\r\nfunction checkTargetForNewValues(visualElement, target, origin) {\r\n    var _a, _b;\r\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\r\n    const numNewValues = newValueKeys.length;\r\n    if (!numNewValues)\r\n        return;\r\n    for (let i = 0; i < numNewValues; i++) {\r\n        const key = newValueKeys[i];\r\n        const targetValue = target[key];\r\n        let value = null;\r\n        /**\r\n         * If the target is a series of keyframes, we can use the first value\r\n         * in the array. If this first value is null, we'll still need to read from the DOM.\r\n         */\r\n        if (Array.isArray(targetValue)) {\r\n            value = targetValue[0];\r\n        }\r\n        /**\r\n         * If the target isn't keyframes, or the first keyframe was null, we need to\r\n         * first check if an origin value was explicitly defined in the transition as \"from\",\r\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\r\n         */\r\n        if (value === null) {\r\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\r\n        }\r\n        /**\r\n         * If value is still undefined or null, ignore it. Preferably this would throw,\r\n         * but this was causing issues in Framer.\r\n         */\r\n        if (value === undefined || value === null)\r\n            continue;\r\n        if (typeof value === \"string\" &&\r\n            (isNumericalString(value) || isZeroValueString(value))) {\r\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n            value = parseFloat(value);\r\n        }\r\n        else if (!findValueType(value) && complex.test(targetValue)) {\r\n            value = getAnimatableNone(key, targetValue);\r\n        }\r\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\r\n        if (origin[key] === undefined) {\r\n            origin[key] = value;\r\n        }\r\n        if (value !== null)\r\n            visualElement.setBaseTarget(key, value);\r\n    }\r\n}\r\nfunction getOriginFromTransition(key, transition) {\r\n    if (!transition)\r\n        return;\r\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\r\n    return valueTransition.from;\r\n}\r\nfunction getOrigin(target, transition, visualElement) {\r\n    const origin = {};\r\n    for (const key in target) {\r\n        const transitionOrigin = getOriginFromTransition(key, transition);\r\n        if (transitionOrigin !== undefined) {\r\n            origin[key] = transitionOrigin;\r\n        }\r\n        else {\r\n            const value = visualElement.getValue(key);\r\n            if (value) {\r\n                origin[key] = value.get();\r\n            }\r\n        }\r\n    }\r\n    return origin;\r\n}\r\n\r\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\r\n","import { transformProps } from '../../render/html/utils/transform.mjs';\r\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\r\nimport { animateMotionValue } from './motion-value.mjs';\r\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\r\nimport { setTarget } from '../../render/utils/setters.mjs';\r\nimport { getValueTransition } from '../utils/transitions.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\n/**\r\n * Decide whether we should block this animation. Previously, we achieved this\r\n * just by checking whether the key was listed in protectedKeys, but this\r\n * posed problems if an animation was triggered by afterChildren and protectedKeys\r\n * had been set to true in the meantime.\r\n */\r\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\r\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\r\n    needsAnimating[key] = false;\r\n    return shouldBlock;\r\n}\r\nfunction hasKeyframesChanged(value, target) {\r\n    const current = value.get();\r\n    if (Array.isArray(target)) {\r\n        for (let i = 0; i < target.length; i++) {\r\n            if (target[i] !== current)\r\n                return true;\r\n        }\r\n    }\r\n    else {\r\n        return current !== target;\r\n    }\r\n}\r\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\r\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\r\n    const willChange = visualElement.getValue(\"willChange\");\r\n    if (transitionOverride)\r\n        transition = transitionOverride;\r\n    const animations = [];\r\n    const animationTypeState = type &&\r\n        visualElement.animationState &&\r\n        visualElement.animationState.getState()[type];\r\n    for (const key in target) {\r\n        const value = visualElement.getValue(key);\r\n        const valueTarget = target[key];\r\n        if (!value ||\r\n            valueTarget === undefined ||\r\n            (animationTypeState &&\r\n                shouldBlockAnimation(animationTypeState, key))) {\r\n            continue;\r\n        }\r\n        const valueTransition = {\r\n            delay,\r\n            elapsed: 0,\r\n            ...getValueTransition(transition || {}, key),\r\n        };\r\n        /**\r\n         * If this is the first time a value is being animated, check\r\n         * to see if we're handling off from an existing animation.\r\n         */\r\n        if (window.HandoffAppearAnimations) {\r\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\r\n            if (appearId) {\r\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\r\n                if (elapsed !== null) {\r\n                    valueTransition.elapsed = elapsed;\r\n                    valueTransition.isHandoff = true;\r\n                }\r\n            }\r\n        }\r\n        let canSkip = !valueTransition.isHandoff &&\r\n            !hasKeyframesChanged(value, valueTarget);\r\n        if (valueTransition.type === \"spring\" &&\r\n            (value.getVelocity() || valueTransition.velocity)) {\r\n            canSkip = false;\r\n        }\r\n        /**\r\n         * Temporarily disable skipping animations if there's an animation in\r\n         * progress. Better would be to track the current target of a value\r\n         * and compare that against valueTarget.\r\n         */\r\n        if (value.animation) {\r\n            canSkip = false;\r\n        }\r\n        if (canSkip)\r\n            continue;\r\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\r\n            ? { type: false }\r\n            : valueTransition));\r\n        const animation = value.animation;\r\n        if (isWillChangeMotionValue(willChange)) {\r\n            willChange.add(key);\r\n            animation.then(() => willChange.remove(key));\r\n        }\r\n        animations.push(animation);\r\n    }\r\n    if (transitionEnd) {\r\n        Promise.all(animations).then(() => {\r\n            transitionEnd && setTarget(visualElement, transitionEnd);\r\n        });\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport { animateTarget };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\n\r\nfunction animateVariant(visualElement, variant, options = {}) {\r\n    const resolved = resolveVariant(visualElement, variant, options.custom);\r\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\r\n    if (options.transitionOverride) {\r\n        transition = options.transitionOverride;\r\n    }\r\n    /**\r\n     * If we have a variant, create a callback that runs it as an animation.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getAnimation = resolved\r\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If we have children, create a callback that runs all their animations.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\r\n        ? (forwardDelay = 0) => {\r\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\r\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\r\n        }\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\r\n     * this animation or all children animations before playing the other.\r\n     */\r\n    const { when } = transition;\r\n    if (when) {\r\n        const [first, last] = when === \"beforeChildren\"\r\n            ? [getAnimation, getChildAnimations]\r\n            : [getChildAnimations, getAnimation];\r\n        return first().then(() => last());\r\n    }\r\n    else {\r\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\r\n    }\r\n}\r\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\r\n    const animations = [];\r\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\r\n    const generateStaggerDuration = staggerDirection === 1\r\n        ? (i = 0) => i * staggerChildren\r\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\r\n    Array.from(visualElement.variantChildren)\r\n        .sort(sortByTreeOrder)\r\n        .forEach((child, i) => {\r\n        child.notify(\"AnimationStart\", variant);\r\n        animations.push(animateVariant(child, variant, {\r\n            ...options,\r\n            delay: delayChildren + generateStaggerDuration(i),\r\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\r\n    });\r\n    return Promise.all(animations);\r\n}\r\nfunction sortByTreeOrder(a, b) {\r\n    return a.sortNodePosition(b);\r\n}\r\n\r\nexport { animateVariant, sortByTreeOrder };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\nimport { animateVariant } from './visual-element-variant.mjs';\r\n\r\nfunction animateVisualElement(visualElement, definition, options = {}) {\r\n    visualElement.notify(\"AnimationStart\", definition);\r\n    let animation;\r\n    if (Array.isArray(definition)) {\r\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\r\n        animation = Promise.all(animations);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        animation = animateVariant(visualElement, definition, options);\r\n    }\r\n    else {\r\n        const resolvedDefinition = typeof definition === \"function\"\r\n            ? resolveVariant(visualElement, definition, options.custom)\r\n            : definition;\r\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\r\n    }\r\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\r\n}\r\n\r\nexport { animateVisualElement };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\r\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\nimport { variantPriorityOrder } from './variant-props.mjs';\r\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\r\n\r\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\r\nconst numAnimationTypes = variantPriorityOrder.length;\r\nfunction animateList(visualElement) {\r\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\r\n}\r\nfunction createAnimationState(visualElement) {\r\n    let animate = animateList(visualElement);\r\n    const state = createState();\r\n    let isInitialRender = true;\r\n    /**\r\n     * This function will be used to reduce the animation definitions for\r\n     * each active animation type into an object of resolved values for it.\r\n     */\r\n    const buildResolvedTypeValues = (acc, definition) => {\r\n        const resolved = resolveVariant(visualElement, definition);\r\n        if (resolved) {\r\n            const { transition, transitionEnd, ...target } = resolved;\r\n            acc = { ...acc, ...target, ...transitionEnd };\r\n        }\r\n        return acc;\r\n    };\r\n    /**\r\n     * This just allows us to inject mocked animation functions\r\n     * @internal\r\n     */\r\n    function setAnimateFunction(makeAnimator) {\r\n        animate = makeAnimator(visualElement);\r\n    }\r\n    /**\r\n     * When we receive new props, we need to:\r\n     * 1. Create a list of protected keys for each type. This is a directory of\r\n     *    value keys that are currently being \"handled\" by types of a higher priority\r\n     *    so that whenever an animation is played of a given type, these values are\r\n     *    protected from being animated.\r\n     * 2. Determine if an animation type needs animating.\r\n     * 3. Determine if any values have been removed from a type and figure out\r\n     *    what to animate those to.\r\n     */\r\n    function animateChanges(options, changedActiveType) {\r\n        const props = visualElement.getProps();\r\n        const context = visualElement.getVariantContext(true) || {};\r\n        /**\r\n         * A list of animations that we'll build into as we iterate through the animation\r\n         * types. This will get executed at the end of the function.\r\n         */\r\n        const animations = [];\r\n        /**\r\n         * Keep track of which values have been removed. Then, as we hit lower priority\r\n         * animation types, we can check if they contain removed values and animate to that.\r\n         */\r\n        const removedKeys = new Set();\r\n        /**\r\n         * A dictionary of all encountered keys. This is an object to let us build into and\r\n         * copy it without iteration. Each time we hit an animation type we set its protected\r\n         * keys - the keys its not allowed to animate - to the latest version of this object.\r\n         */\r\n        let encounteredKeys = {};\r\n        /**\r\n         * If a variant has been removed at a given index, and this component is controlling\r\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\r\n         */\r\n        let removedVariantIndex = Infinity;\r\n        /**\r\n         * Iterate through all animation types in reverse priority order. For each, we want to\r\n         * detect which values it's handling and whether or not they've changed (and therefore\r\n         * need to be animated). If any values have been removed, we want to detect those in\r\n         * lower priority props and flag for animation.\r\n         */\r\n        for (let i = 0; i < numAnimationTypes; i++) {\r\n            const type = reversePriorityOrder[i];\r\n            const typeState = state[type];\r\n            const prop = props[type] !== undefined ? props[type] : context[type];\r\n            const propIsVariant = isVariantLabel(prop);\r\n            /**\r\n             * If this type has *just* changed isActive status, set activeDelta\r\n             * to that status. Otherwise set to null.\r\n             */\r\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\r\n            if (activeDelta === false)\r\n                removedVariantIndex = i;\r\n            /**\r\n             * If this prop is an inherited variant, rather than been set directly on the\r\n             * component itself, we want to make sure we allow the parent to trigger animations.\r\n             *\r\n             * TODO: Can probably change this to a !isControllingVariants check\r\n             */\r\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\r\n            /**\r\n             *\r\n             */\r\n            if (isInherited &&\r\n                isInitialRender &&\r\n                visualElement.manuallyAnimateOnMount) {\r\n                isInherited = false;\r\n            }\r\n            /**\r\n             * Set all encountered keys so far as the protected keys for this type. This will\r\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\r\n             */\r\n            typeState.protectedKeys = { ...encounteredKeys };\r\n            // Check if we can skip analysing this prop early\r\n            if (\r\n            // If it isn't active and hasn't *just* been set as inactive\r\n            (!typeState.isActive && activeDelta === null) ||\r\n                // If we didn't and don't have any defined prop for this animation type\r\n                (!prop && !typeState.prevProp) ||\r\n                // Or if the prop doesn't define an animation\r\n                isAnimationControls(prop) ||\r\n                typeof prop === \"boolean\") {\r\n                continue;\r\n            }\r\n            /**\r\n             * As we go look through the values defined on this type, if we detect\r\n             * a changed value or a value that was removed in a higher priority, we set\r\n             * this to true and add this prop to the animation list.\r\n             */\r\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\r\n            let shouldAnimateType = variantDidChange ||\r\n                // If we're making this variant active, we want to always make it active\r\n                (type === changedActiveType &&\r\n                    typeState.isActive &&\r\n                    !isInherited &&\r\n                    propIsVariant) ||\r\n                // If we removed a higher-priority variant (i is in reverse order)\r\n                (i > removedVariantIndex && propIsVariant);\r\n            let handledRemovedValues = false;\r\n            /**\r\n             * As animations can be set as variant lists, variants or target objects, we\r\n             * coerce everything to an array if it isn't one already\r\n             */\r\n            const definitionList = Array.isArray(prop) ? prop : [prop];\r\n            /**\r\n             * Build an object of all the resolved values. We'll use this in the subsequent\r\n             * animateChanges calls to determine whether a value has changed.\r\n             */\r\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\r\n            if (activeDelta === false)\r\n                resolvedValues = {};\r\n            /**\r\n             * Now we need to loop through all the keys in the prev prop and this prop,\r\n             * and decide:\r\n             * 1. If the value has changed, and needs animating\r\n             * 2. If it has been removed, and needs adding to the removedKeys set\r\n             * 3. If it has been removed in a higher priority type and needs animating\r\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\r\n             *    needs adding to the type's protectedKeys list.\r\n             */\r\n            const { prevResolvedValues = {} } = typeState;\r\n            const allKeys = {\r\n                ...prevResolvedValues,\r\n                ...resolvedValues,\r\n            };\r\n            const markToAnimate = (key) => {\r\n                shouldAnimateType = true;\r\n                if (removedKeys.has(key)) {\r\n                    handledRemovedValues = true;\r\n                    removedKeys.delete(key);\r\n                }\r\n                typeState.needsAnimating[key] = true;\r\n            };\r\n            for (const key in allKeys) {\r\n                const next = resolvedValues[key];\r\n                const prev = prevResolvedValues[key];\r\n                // If we've already handled this we can just skip ahead\r\n                if (encounteredKeys.hasOwnProperty(key))\r\n                    continue;\r\n                /**\r\n                 * If the value has changed, we probably want to animate it.\r\n                 */\r\n                let valueHasChanged = false;\r\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\r\n                    valueHasChanged = !shallowCompare(next, prev);\r\n                }\r\n                else {\r\n                    valueHasChanged = next !== prev;\r\n                }\r\n                if (valueHasChanged) {\r\n                    if (next !== undefined) {\r\n                        // If next is defined and doesn't equal prev, it needs animating\r\n                        markToAnimate(key);\r\n                    }\r\n                    else {\r\n                        // If it's undefined, it's been removed.\r\n                        removedKeys.add(key);\r\n                    }\r\n                }\r\n                else if (next !== undefined && removedKeys.has(key)) {\r\n                    /**\r\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\r\n                     * been removed by a higher priority\r\n                     */\r\n                    markToAnimate(key);\r\n                }\r\n                else {\r\n                    /**\r\n                     * If it hasn't changed, we add it to the list of protected values\r\n                     * to ensure it doesn't get animated.\r\n                     */\r\n                    typeState.protectedKeys[key] = true;\r\n                }\r\n            }\r\n            /**\r\n             * Update the typeState so next time animateChanges is called we can compare the\r\n             * latest prop and resolvedValues to these.\r\n             */\r\n            typeState.prevProp = prop;\r\n            typeState.prevResolvedValues = resolvedValues;\r\n            /**\r\n             *\r\n             */\r\n            if (typeState.isActive) {\r\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\r\n            }\r\n            if (isInitialRender && visualElement.blockInitialAnimation) {\r\n                shouldAnimateType = false;\r\n            }\r\n            /**\r\n             * If this is an inherited prop we want to hard-block animations\r\n             */\r\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\r\n                animations.push(...definitionList.map((animation) => ({\r\n                    animation: animation,\r\n                    options: { type, ...options },\r\n                })));\r\n            }\r\n        }\r\n        /**\r\n         * If there are some removed value that haven't been dealt with,\r\n         * we need to create a new animation that falls back either to the value\r\n         * defined in the style prop, or the last read value.\r\n         */\r\n        if (removedKeys.size) {\r\n            const fallbackAnimation = {};\r\n            removedKeys.forEach((key) => {\r\n                const fallbackTarget = visualElement.getBaseTarget(key);\r\n                if (fallbackTarget !== undefined) {\r\n                    fallbackAnimation[key] = fallbackTarget;\r\n                }\r\n            });\r\n            animations.push({ animation: fallbackAnimation });\r\n        }\r\n        let shouldAnimate = Boolean(animations.length);\r\n        if (isInitialRender &&\r\n            (props.initial === false || props.initial === props.animate) &&\r\n            !visualElement.manuallyAnimateOnMount) {\r\n            shouldAnimate = false;\r\n        }\r\n        isInitialRender = false;\r\n        return shouldAnimate ? animate(animations) : Promise.resolve();\r\n    }\r\n    /**\r\n     * Change whether a certain animation type is active.\r\n     */\r\n    function setActive(type, isActive, options) {\r\n        var _a;\r\n        // If the active state hasn't changed, we can safely do nothing here\r\n        if (state[type].isActive === isActive)\r\n            return Promise.resolve();\r\n        // Propagate active change to children\r\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\r\n        state[type].isActive = isActive;\r\n        const animations = animateChanges(options, type);\r\n        for (const key in state) {\r\n            state[key].protectedKeys = {};\r\n        }\r\n        return animations;\r\n    }\r\n    return {\r\n        animateChanges,\r\n        setActive,\r\n        setAnimateFunction,\r\n        getState: () => state,\r\n    };\r\n}\r\nfunction checkVariantsDidChange(prev, next) {\r\n    if (typeof next === \"string\") {\r\n        return next !== prev;\r\n    }\r\n    else if (Array.isArray(next)) {\r\n        return !shallowCompare(next, prev);\r\n    }\r\n    return false;\r\n}\r\nfunction createTypeState(isActive = false) {\r\n    return {\r\n        isActive,\r\n        protectedKeys: {},\r\n        needsAnimating: {},\r\n        prevResolvedValues: {},\r\n    };\r\n}\r\nfunction createState() {\r\n    return {\r\n        animate: createTypeState(true),\r\n        whileInView: createTypeState(),\r\n        whileHover: createTypeState(),\r\n        whileTap: createTypeState(),\r\n        whileDrag: createTypeState(),\r\n        whileFocus: createTypeState(),\r\n        exit: createTypeState(),\r\n    };\r\n}\r\n\r\nexport { checkVariantsDidChange, createAnimationState };\r\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\r\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\r\nimport { Feature } from '../Feature.mjs';\r\n\r\nclass AnimationFeature extends Feature {\r\n    /**\r\n     * We dynamically generate the AnimationState manager as it contains a reference\r\n     * to the underlying animation library. We only want to load that if we load this,\r\n     * so people can optionally code split it out using the `m` component.\r\n     */\r\n    constructor(node) {\r\n        super(node);\r\n        node.animationState || (node.animationState = createAnimationState(node));\r\n    }\r\n    updateAnimationControlsSubscription() {\r\n        const { animate } = this.node.getProps();\r\n        this.unmount();\r\n        if (isAnimationControls(animate)) {\r\n            this.unmount = animate.subscribe(this.node);\r\n        }\r\n    }\r\n    /**\r\n     * Subscribe any provided AnimationControls to the component's VisualElement\r\n     */\r\n    mount() {\r\n        this.updateAnimationControlsSubscription();\r\n    }\r\n    update() {\r\n        const { animate } = this.node.getProps();\r\n        const { animate: prevAnimate } = this.node.prevProps || {};\r\n        if (animate !== prevAnimate) {\r\n            this.updateAnimationControlsSubscription();\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { AnimationFeature };\r\n","import { Feature } from '../Feature.mjs';\r\n\r\nlet id = 0;\r\nclass ExitAnimationFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.id = id++;\r\n    }\r\n    update() {\r\n        if (!this.node.presenceContext)\r\n            return;\r\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\r\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\r\n        if (!this.node.animationState || isPresent === prevIsPresent) {\r\n            return;\r\n        }\r\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\r\n        if (onExitComplete && !isPresent) {\r\n            exitAnimation.then(() => onExitComplete(this.id));\r\n        }\r\n    }\r\n    mount() {\r\n        const { register } = this.node.presenceContext || {};\r\n        if (register) {\r\n            this.unmount = register(this.id);\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { ExitAnimationFeature };\r\n","import { AnimationFeature } from './animation/index.mjs';\r\nimport { ExitAnimationFeature } from './animation/exit.mjs';\r\n\r\nconst animations = {\r\n    animation: {\r\n        Feature: AnimationFeature,\r\n    },\r\n    exit: {\r\n        Feature: ExitAnimationFeature,\r\n    },\r\n};\r\n\r\nexport { animations };\r\n","const distance = (a, b) => Math.abs(a - b);\r\nfunction distance2D(a, b) {\r\n    // Multi-dimensional\r\n    const xDelta = distance(a.x, b.x);\r\n    const yDelta = distance(a.y, b.y);\r\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\r\n}\r\n\r\nexport { distance, distance2D };\r\n","import { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { pipe } from '../../utils/pipe.mjs';\r\nimport { distance2D } from '../../utils/distance.mjs';\r\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\r\n\r\n/**\r\n * @internal\r\n */\r\nclass PanSession {\r\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        /**\r\n         * @internal\r\n         */\r\n        this.contextWindow = window;\r\n        this.updatePoint = () => {\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\r\n            const isPanStarted = this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            const { point } = info;\r\n            const { timestamp } = frameData;\r\n            this.history.push({ ...point, timestamp });\r\n            const { onStart, onMove } = this.handlers;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(this.lastMoveEvent, info);\r\n                this.startEvent = this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = (event, info) => {\r\n            this.lastMoveEvent = event;\r\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n            // Throttle mouse move event to once per frame\r\n            frame.update(this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = (event, info) => {\r\n            this.end();\r\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\r\n            if (this.dragSnapToOrigin)\r\n                resumeAnimation && resumeAnimation();\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\r\n                ? this.lastMoveEventInfo\r\n                : transformPoint(info, this.transformPagePoint), this.history);\r\n            if (this.startEvent && onEnd) {\r\n                onEnd(event, panInfo);\r\n            }\r\n            onSessionEnd && onSessionEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (!isPrimaryPointer(event))\r\n            return;\r\n        this.dragSnapToOrigin = dragSnapToOrigin;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        this.contextWindow = contextWindow || window;\r\n        const info = extractEventInfo(event);\r\n        const initialInfo = transformPoint(info, this.transformPagePoint);\r\n        const { point } = initialInfo;\r\n        const { timestamp } = frameData;\r\n        this.history = [{ ...point, timestamp }];\r\n        const { onSessionStart } = handlers;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    updateHandlers(handlers) {\r\n        this.handlers = handlers;\r\n    }\r\n    end() {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelFrame(this.updatePoint);\r\n    }\r\n}\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo({ point }, history) {\r\n    return {\r\n        point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    let i = history.length - 1;\r\n    let timestampedPoint = null;\r\n    const lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n","import { mix } from '../../utils/mix.mjs';\r\n\r\nfunction calcLength(axis) {\r\n    return axis.max - axis.min;\r\n}\r\nfunction isNear(value, target = 0, maxDistance = 0.01) {\r\n    return Math.abs(value - target) <= maxDistance;\r\n}\r\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\r\n    delta.origin = origin;\r\n    delta.originPoint = mix(source.min, source.max, delta.origin);\r\n    delta.scale = calcLength(target) / calcLength(source);\r\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\r\n        delta.scale = 1;\r\n    delta.translate =\r\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\r\n    if (isNear(delta.translate) || isNaN(delta.translate))\r\n        delta.translate = 0;\r\n}\r\nfunction calcBoxDelta(delta, source, target, origin) {\r\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\r\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\r\n}\r\nfunction calcRelativeAxis(target, relative, parent) {\r\n    target.min = parent.min + relative.min;\r\n    target.max = target.min + calcLength(relative);\r\n}\r\nfunction calcRelativeBox(target, relative, parent) {\r\n    calcRelativeAxis(target.x, relative.x, parent.x);\r\n    calcRelativeAxis(target.y, relative.y, parent.y);\r\n}\r\nfunction calcRelativeAxisPosition(target, layout, parent) {\r\n    target.min = layout.min - parent.min;\r\n    target.max = target.min + calcLength(layout);\r\n}\r\nfunction calcRelativePosition(target, layout, parent) {\r\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\r\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\r\n}\r\n\r\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\r\n","import { progress } from '../../../utils/progress.mjs';\r\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { mix } from '../../../utils/mix.mjs';\r\n\r\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\r\nfunction applyConstraints(point, { min, max }, elastic) {\r\n    if (min !== undefined && point < min) {\r\n        // If we have a min point defined, and this is outside of that, constrain\r\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\r\n    }\r\n    else if (max !== undefined && point > max) {\r\n        // If we have a max point defined, and this is outside of that, constrain\r\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\r\nfunction calcRelativeAxisConstraints(axis, min, max) {\r\n    return {\r\n        min: min !== undefined ? axis.min + min : undefined,\r\n        max: max !== undefined\r\n            ? axis.max + max - (axis.max - axis.min)\r\n            : undefined,\r\n    };\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\r\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\r\n    return {\r\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\r\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\r\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\r\n    let min = constraintsAxis.min - layoutAxis.min;\r\n    let max = constraintsAxis.max - layoutAxis.max;\r\n    // If the constraints axis is actually smaller than the layout axis then we can\r\n    // flip the constraints\r\n    if (constraintsAxis.max - constraintsAxis.min <\r\n        layoutAxis.max - layoutAxis.min) {\r\n        [min, max] = [max, min];\r\n    }\r\n    return { min, max };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\r\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\r\n    return {\r\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\r\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\r\n    };\r\n}\r\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\r\nfunction calcOrigin(source, target) {\r\n    let origin = 0.5;\r\n    const sourceLength = calcLength(source);\r\n    const targetLength = calcLength(target);\r\n    if (targetLength > sourceLength) {\r\n        origin = progress(target.min, target.max - sourceLength, source.min);\r\n    }\r\n    else if (sourceLength > targetLength) {\r\n        origin = progress(source.min, source.max - targetLength, target.min);\r\n    }\r\n    return clamp(0, 1, origin);\r\n}\r\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\r\nfunction rebaseAxisConstraints(layout, constraints) {\r\n    const relativeConstraints = {};\r\n    if (constraints.min !== undefined) {\r\n        relativeConstraints.min = constraints.min - layout.min;\r\n    }\r\n    if (constraints.max !== undefined) {\r\n        relativeConstraints.max = constraints.max - layout.min;\r\n    }\r\n    return relativeConstraints;\r\n}\r\nconst defaultElastic = 0.35;\r\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\r\nfunction resolveDragElastic(dragElastic = defaultElastic) {\r\n    if (dragElastic === false) {\r\n        dragElastic = 0;\r\n    }\r\n    else if (dragElastic === true) {\r\n        dragElastic = defaultElastic;\r\n    }\r\n    return {\r\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\r\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\r\n    };\r\n}\r\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\r\n    return {\r\n        min: resolvePointElastic(dragElastic, minLabel),\r\n        max: resolvePointElastic(dragElastic, maxLabel),\r\n    };\r\n}\r\nfunction resolvePointElastic(dragElastic, label) {\r\n    return typeof dragElastic === \"number\"\r\n        ? dragElastic\r\n        : dragElastic[label] || 0;\r\n}\r\n\r\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\r\n","const createAxisDelta = () => ({\r\n    translate: 0,\r\n    scale: 1,\r\n    origin: 0,\r\n    originPoint: 0,\r\n});\r\nconst createDelta = () => ({\r\n    x: createAxisDelta(),\r\n    y: createAxisDelta(),\r\n});\r\nconst createAxis = () => ({ min: 0, max: 0 });\r\nconst createBox = () => ({\r\n    x: createAxis(),\r\n    y: createAxis(),\r\n});\r\n\r\nexport { createAxis, createAxisDelta, createBox, createDelta };\r\n","function eachAxis(callback) {\r\n    return [callback(\"x\"), callback(\"y\")];\r\n}\r\n\r\nexport { eachAxis };\r\n","/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\r\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\r\n    return {\r\n        x: { min: left, max: right },\r\n        y: { min: top, max: bottom },\r\n    };\r\n}\r\nfunction convertBoxToBoundingBox({ x, y }) {\r\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\r\n}\r\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\r\nfunction transformBoxPoints(point, transformPoint) {\r\n    if (!transformPoint)\r\n        return point;\r\n    const topLeft = transformPoint({ x: point.left, y: point.top });\r\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\r\n    return {\r\n        top: topLeft.y,\r\n        left: topLeft.x,\r\n        bottom: bottomRight.y,\r\n        right: bottomRight.x,\r\n    };\r\n}\r\n\r\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\r\n","function isIdentityScale(scale) {\r\n    return scale === undefined || scale === 1;\r\n}\r\nfunction hasScale({ scale, scaleX, scaleY }) {\r\n    return (!isIdentityScale(scale) ||\r\n        !isIdentityScale(scaleX) ||\r\n        !isIdentityScale(scaleY));\r\n}\r\nfunction hasTransform(values) {\r\n    return (hasScale(values) ||\r\n        has2DTranslate(values) ||\r\n        values.z ||\r\n        values.rotate ||\r\n        values.rotateX ||\r\n        values.rotateY);\r\n}\r\nfunction has2DTranslate(values) {\r\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\r\n}\r\nfunction is2DTranslate(value) {\r\n    return value && value !== \"0%\";\r\n}\r\n\r\nexport { has2DTranslate, hasScale, hasTransform };\r\n","import { mix } from '../../utils/mix.mjs';\r\nimport { hasTransform } from '../utils/has-transform.mjs';\r\n\r\n/**\r\n * Scales a point based on a factor and an originPoint\r\n */\r\nfunction scalePoint(point, scale, originPoint) {\r\n    const distanceFromOrigin = point - originPoint;\r\n    const scaled = scale * distanceFromOrigin;\r\n    return originPoint + scaled;\r\n}\r\n/**\r\n * Applies a translate/scale delta to a point\r\n */\r\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, boxScale, originPoint);\r\n    }\r\n    return scalePoint(point, scale, originPoint) + translate;\r\n}\r\n/**\r\n * Applies a translate/scale delta to an axis\r\n */\r\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\r\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Applies a translate/scale delta to a box\r\n */\r\nfunction applyBoxDelta(box, { x, y }) {\r\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\r\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\r\n}\r\n/**\r\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\r\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\r\n *\r\n * This is the final nested loop within updateLayoutDelta for future refactoring\r\n */\r\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\r\n    const treeLength = treePath.length;\r\n    if (!treeLength)\r\n        return;\r\n    // Reset the treeScale\r\n    treeScale.x = treeScale.y = 1;\r\n    let node;\r\n    let delta;\r\n    for (let i = 0; i < treeLength; i++) {\r\n        node = treePath[i];\r\n        delta = node.projectionDelta;\r\n        /**\r\n         * TODO: Prefer to remove this, but currently we have motion components with\r\n         * display: contents in Framer.\r\n         */\r\n        const instance = node.instance;\r\n        if (instance &&\r\n            instance.style &&\r\n            instance.style.display === \"contents\") {\r\n            continue;\r\n        }\r\n        if (isSharedTransition &&\r\n            node.options.layoutScroll &&\r\n            node.scroll &&\r\n            node !== node.root) {\r\n            transformBox(box, {\r\n                x: -node.scroll.offset.x,\r\n                y: -node.scroll.offset.y,\r\n            });\r\n        }\r\n        if (delta) {\r\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\r\n            treeScale.x *= delta.x.scale;\r\n            treeScale.y *= delta.y.scale;\r\n            // Apply each ancestor's calculated delta into this component's recorded layout box\r\n            applyBoxDelta(box, delta);\r\n        }\r\n        if (isSharedTransition && hasTransform(node.latestValues)) {\r\n            transformBox(box, node.latestValues);\r\n        }\r\n    }\r\n    /**\r\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\r\n     * This will help reduce useless scales getting rendered.\r\n     */\r\n    treeScale.x = snapToDefault(treeScale.x);\r\n    treeScale.y = snapToDefault(treeScale.y);\r\n}\r\nfunction snapToDefault(scale) {\r\n    if (Number.isInteger(scale))\r\n        return scale;\r\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\r\n}\r\nfunction translateAxis(axis, distance) {\r\n    axis.min = axis.min + distance;\r\n    axis.max = axis.max + distance;\r\n}\r\n/**\r\n * Apply a transform to an axis from the latest resolved motion values.\r\n * This function basically acts as a bridge between a flat motion value map\r\n * and applyAxisDelta\r\n */\r\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\r\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\r\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\r\n    // Apply the axis delta to the final axis\r\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\r\n}\r\n/**\r\n * The names of the motion values we want to apply as translation, scale and origin.\r\n */\r\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\r\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\r\n/**\r\n * Apply a transform to a box from the latest resolved motion values.\r\n */\r\nfunction transformBox(box, transform) {\r\n    transformAxis(box.x, transform, xKeys);\r\n    transformAxis(box.y, transform, yKeys);\r\n}\r\n\r\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\r\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\r\nimport { translateAxis } from '../geometry/delta-apply.mjs';\r\n\r\nfunction measureViewportBox(instance, transformPoint) {\r\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\r\n}\r\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\r\n    const viewportBox = measureViewportBox(element, transformPagePoint);\r\n    const { scroll } = rootProjectionNode;\r\n    if (scroll) {\r\n        translateAxis(viewportBox.x, scroll.offset.x);\r\n        translateAxis(viewportBox.y, scroll.offset.y);\r\n    }\r\n    return viewportBox;\r\n}\r\n\r\nexport { measurePageBox, measureViewportBox };\r\n","// Fixes https://github.com/framer/motion/issues/2270\r\nconst getContextWindow = ({ current }) => {\r\n    return current ? current.ownerDocument.defaultView : null;\r\n};\r\n\r\nexport { getContextWindow };\r\n","import { invariant } from '../../utils/errors.mjs';\r\nimport { PanSession } from '../pan/PanSession.mjs';\r\nimport { getGlobalLock } from './utils/lock.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\r\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\r\nimport { mix } from '../../utils/mix.mjs';\r\nimport { percent } from '../../value/types/numbers/units.mjs';\r\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst elementDragControls = new WeakMap();\r\n/**\r\n *\r\n */\r\n// let latestPointerEvent: PointerEvent\r\nclass VisualElementDragControls {\r\n    constructor(visualElement) {\r\n        // This is a reference to the global drag gesture lock, ensuring only one component\r\n        // can \"capture\" the drag of one or both axes.\r\n        // TODO: Look into moving this into pansession?\r\n        this.openGlobalLock = null;\r\n        this.isDragging = false;\r\n        this.currentDirection = null;\r\n        this.originPoint = { x: 0, y: 0 };\r\n        /**\r\n         * The permitted boundaries of travel, in pixels.\r\n         */\r\n        this.constraints = false;\r\n        this.hasMutatedConstraints = false;\r\n        /**\r\n         * The per-axis resolved elastic values.\r\n         */\r\n        this.elastic = createBox();\r\n        this.visualElement = visualElement;\r\n    }\r\n    start(originEvent, { snapToCursor = false } = {}) {\r\n        /**\r\n         * Don't start dragging if this component is exiting\r\n         */\r\n        const { presenceContext } = this.visualElement;\r\n        if (presenceContext && presenceContext.isPresent === false)\r\n            return;\r\n        const onSessionStart = (event) => {\r\n            const { dragSnapToOrigin } = this.getProps();\r\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\r\n            if (snapToCursor) {\r\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\r\n            }\r\n        };\r\n        const onStart = (event, info) => {\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            const { drag, dragPropagation, onDragStart } = this.getProps();\r\n            if (drag && !dragPropagation) {\r\n                if (this.openGlobalLock)\r\n                    this.openGlobalLock();\r\n                this.openGlobalLock = getGlobalLock(drag);\r\n                // If we don 't have the lock, don't start dragging\r\n                if (!this.openGlobalLock)\r\n                    return;\r\n            }\r\n            this.isDragging = true;\r\n            this.currentDirection = null;\r\n            this.resolveConstraints();\r\n            if (this.visualElement.projection) {\r\n                this.visualElement.projection.isAnimationBlocked = true;\r\n                this.visualElement.projection.target = undefined;\r\n            }\r\n            /**\r\n             * Record gesture origin\r\n             */\r\n            eachAxis((axis) => {\r\n                let current = this.getAxisMotionValue(axis).get() || 0;\r\n                /**\r\n                 * If the MotionValue is a percentage value convert to px\r\n                 */\r\n                if (percent.test(current)) {\r\n                    const { projection } = this.visualElement;\r\n                    if (projection && projection.layout) {\r\n                        const measuredAxis = projection.layout.layoutBox[axis];\r\n                        if (measuredAxis) {\r\n                            const length = calcLength(measuredAxis);\r\n                            current = length * (parseFloat(current) / 100);\r\n                        }\r\n                    }\r\n                }\r\n                this.originPoint[axis] = current;\r\n            });\r\n            // Fire onDragStart event\r\n            if (onDragStart) {\r\n                frame.update(() => onDragStart(event, info), false, true);\r\n            }\r\n            const { animationState } = this.visualElement;\r\n            animationState && animationState.setActive(\"whileDrag\", true);\r\n        };\r\n        const onMove = (event, info) => {\r\n            // latestPointerEvent = event\r\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !this.openGlobalLock)\r\n                return;\r\n            const { offset } = info;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && this.currentDirection === null) {\r\n                this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (this.currentDirection !== null) {\r\n                    onDirectionLock && onDirectionLock(this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            // Update each point with the latest position\r\n            this.updateAxis(\"x\", info.point, offset);\r\n            this.updateAxis(\"y\", info.point, offset);\r\n            /**\r\n             * Ideally we would leave the renderer to fire naturally at the end of\r\n             * this frame but if the element is about to change layout as the result\r\n             * of a re-render we want to ensure the browser can read the latest\r\n             * bounding box to ensure the pointer and element don't fall out of sync.\r\n             */\r\n            this.visualElement.render();\r\n            /**\r\n             * This must fire after the render call as it might trigger a state\r\n             * change which itself might trigger a layout update.\r\n             */\r\n            onDrag && onDrag(event, info);\r\n        };\r\n        const onSessionEnd = (event, info) => this.stop(event, info);\r\n        const resumeAnimation = () => eachAxis((axis) => {\r\n            var _a;\r\n            return this.getAnimationState(axis) === \"paused\" &&\r\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\r\n        });\r\n        const { dragSnapToOrigin } = this.getProps();\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart,\r\n            onStart,\r\n            onMove,\r\n            onSessionEnd,\r\n            resumeAnimation,\r\n        }, {\r\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\r\n            dragSnapToOrigin,\r\n            contextWindow: getContextWindow(this.visualElement),\r\n        });\r\n    }\r\n    stop(event, info) {\r\n        const isDragging = this.isDragging;\r\n        this.cancel();\r\n        if (!isDragging)\r\n            return;\r\n        const { velocity } = info;\r\n        this.startAnimation(velocity);\r\n        const { onDragEnd } = this.getProps();\r\n        if (onDragEnd) {\r\n            frame.update(() => onDragEnd(event, info));\r\n        }\r\n    }\r\n    cancel() {\r\n        this.isDragging = false;\r\n        const { projection, animationState } = this.visualElement;\r\n        if (projection) {\r\n            projection.isAnimationBlocked = false;\r\n        }\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = undefined;\r\n        const { dragPropagation } = this.getProps();\r\n        if (!dragPropagation && this.openGlobalLock) {\r\n            this.openGlobalLock();\r\n            this.openGlobalLock = null;\r\n        }\r\n        animationState && animationState.setActive(\"whileDrag\", false);\r\n    }\r\n    updateAxis(axis, _point, offset) {\r\n        const { drag } = this.getProps();\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\r\n            return;\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        let next = this.originPoint[axis] + offset[axis];\r\n        // Apply constraints\r\n        if (this.constraints && this.constraints[axis]) {\r\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\r\n        }\r\n        axisValue.set(next);\r\n    }\r\n    resolveConstraints() {\r\n        var _a;\r\n        const { dragConstraints, dragElastic } = this.getProps();\r\n        const layout = this.visualElement.projection &&\r\n            !this.visualElement.projection.layout\r\n            ? this.visualElement.projection.measure(false)\r\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\r\n        const prevConstraints = this.constraints;\r\n        if (dragConstraints && isRefObject(dragConstraints)) {\r\n            if (!this.constraints) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        }\r\n        else {\r\n            if (dragConstraints && layout) {\r\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\r\n            }\r\n            else {\r\n                this.constraints = false;\r\n            }\r\n        }\r\n        this.elastic = resolveDragElastic(dragElastic);\r\n        /**\r\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\r\n         * from viewport-relative to component-relative.\r\n         */\r\n        if (prevConstraints !== this.constraints &&\r\n            layout &&\r\n            this.constraints &&\r\n            !this.hasMutatedConstraints) {\r\n            eachAxis((axis) => {\r\n                if (this.getAxisMotionValue(axis)) {\r\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    resolveRefConstraints() {\r\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\r\n        if (!constraints || !isRefObject(constraints))\r\n            return false;\r\n        const constraintsElement = constraints.current;\r\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n        const { projection } = this.visualElement;\r\n        // TODO\r\n        if (!projection || !projection.layout)\r\n            return false;\r\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\r\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\r\n        /**\r\n         * If there's an onMeasureDragConstraints listener we call it and\r\n         * if different constraints are returned, set constraints to that\r\n         */\r\n        if (onMeasureDragConstraints) {\r\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\r\n            this.hasMutatedConstraints = !!userConstraints;\r\n            if (userConstraints) {\r\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\r\n            }\r\n        }\r\n        return measuredConstraints;\r\n    }\r\n    startAnimation(velocity) {\r\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\r\n        const constraints = this.constraints || {};\r\n        const momentumAnimations = eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\r\n                return;\r\n            }\r\n            let transition = (constraints && constraints[axis]) || {};\r\n            if (dragSnapToOrigin)\r\n                transition = { min: 0, max: 0 };\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            const bounceStiffness = dragElastic ? 200 : 1000000;\r\n            const bounceDamping = dragElastic ? 40 : 10000000;\r\n            const inertia = {\r\n                type: \"inertia\",\r\n                velocity: dragMomentum ? velocity[axis] : 0,\r\n                bounceStiffness,\r\n                bounceDamping,\r\n                timeConstant: 750,\r\n                restDelta: 1,\r\n                restSpeed: 10,\r\n                ...dragTransition,\r\n                ...transition,\r\n            };\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return this.startAxisValueAnimation(axis, inertia);\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\r\n    }\r\n    startAxisValueAnimation(axis, transition) {\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\r\n    }\r\n    stopAnimation() {\r\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\r\n    }\r\n    pauseAnimation() {\r\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\r\n    }\r\n    getAnimationState(axis) {\r\n        var _a;\r\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\r\n    }\r\n    /**\r\n     * Drag works differently depending on which props are provided.\r\n     *\r\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\r\n     * - Otherwise, we apply the delta to the x/y motion values.\r\n     */\r\n    getAxisMotionValue(axis) {\r\n        const dragKey = \"_drag\" + axis.toUpperCase();\r\n        const props = this.visualElement.getProps();\r\n        const externalMotionValue = props[dragKey];\r\n        return externalMotionValue\r\n            ? externalMotionValue\r\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\r\n    }\r\n    snapToCursor(point) {\r\n        eachAxis((axis) => {\r\n            const { drag } = this.getProps();\r\n            // If we're not dragging this axis, do an early return.\r\n            if (!shouldDrag(axis, drag, this.currentDirection))\r\n                return;\r\n            const { projection } = this.visualElement;\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (projection && projection.layout) {\r\n                const { min, max } = projection.layout.layoutBox[axis];\r\n                axisValue.set(point[axis] - mix(min, max, 0.5));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When the viewport resizes we want to check if the measured constraints\r\n     * have changed and, if so, reposition the element within those new constraints\r\n     * relative to where it was before the resize.\r\n     */\r\n    scalePositionWithinConstraints() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        const { drag, dragConstraints } = this.getProps();\r\n        const { projection } = this.visualElement;\r\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\r\n            return;\r\n        /**\r\n         * Stop current animations as there can be visual glitching if we try to do\r\n         * this mid-animation\r\n         */\r\n        this.stopAnimation();\r\n        /**\r\n         * Record the relative position of the dragged element relative to the\r\n         * constraints box and save as a progress value.\r\n         */\r\n        const boxProgress = { x: 0, y: 0 };\r\n        eachAxis((axis) => {\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (axisValue) {\r\n                const latest = axisValue.get();\r\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\r\n            }\r\n        });\r\n        /**\r\n         * Update the layout of this element and resolve the latest drag constraints\r\n         */\r\n        const { transformTemplate } = this.visualElement.getProps();\r\n        this.visualElement.current.style.transform = transformTemplate\r\n            ? transformTemplate({}, \"\")\r\n            : \"none\";\r\n        projection.root && projection.root.updateScroll();\r\n        projection.updateLayout();\r\n        this.resolveConstraints();\r\n        /**\r\n         * For each axis, calculate the current progress of the layout axis\r\n         * within the new constraints.\r\n         */\r\n        eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, null))\r\n                return;\r\n            /**\r\n             * Calculate a new transform based on the previous box progress\r\n             */\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            const { min, max } = this.constraints[axis];\r\n            axisValue.set(mix(min, max, boxProgress[axis]));\r\n        });\r\n    }\r\n    addListeners() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        elementDragControls.set(this.visualElement, this);\r\n        const element = this.visualElement.current;\r\n        /**\r\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\r\n         */\r\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\r\n            const { drag, dragListener = true } = this.getProps();\r\n            drag && dragListener && this.start(event);\r\n        });\r\n        const measureDragConstraints = () => {\r\n            const { dragConstraints } = this.getProps();\r\n            if (isRefObject(dragConstraints)) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        };\r\n        const { projection } = this.visualElement;\r\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\r\n        if (projection && !projection.layout) {\r\n            projection.root && projection.root.updateScroll();\r\n            projection.updateLayout();\r\n        }\r\n        measureDragConstraints();\r\n        /**\r\n         * Attach a window resize listener to scale the draggable target within its defined\r\n         * constraints as the window resizes.\r\n         */\r\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\r\n        /**\r\n         * If the element's layout changes, calculate the delta and apply that to\r\n         * the drag gesture's origin point.\r\n         */\r\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\r\n            if (this.isDragging && hasLayoutChanged) {\r\n                eachAxis((axis) => {\r\n                    const motionValue = this.getAxisMotionValue(axis);\r\n                    if (!motionValue)\r\n                        return;\r\n                    this.originPoint[axis] += delta[axis].translate;\r\n                    motionValue.set(motionValue.get() + delta[axis].translate);\r\n                });\r\n                this.visualElement.render();\r\n            }\r\n        }));\r\n        return () => {\r\n            stopResizeListener();\r\n            stopPointerListener();\r\n            stopMeasureLayoutListener();\r\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\r\n        };\r\n    }\r\n    getProps() {\r\n        const props = this.visualElement.getProps();\r\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\r\n        return {\r\n            ...props,\r\n            drag,\r\n            dragDirectionLock,\r\n            dragPropagation,\r\n            dragConstraints,\r\n            dragElastic,\r\n            dragMomentum,\r\n        };\r\n    }\r\n}\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold = 10) {\r\n    let direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n\r\nexport { VisualElementDragControls, elementDragControls };\r\n","import { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\r\n\r\nclass DragGesture extends Feature {\r\n    constructor(node) {\r\n        super(node);\r\n        this.removeGroupControls = noop;\r\n        this.removeListeners = noop;\r\n        this.controls = new VisualElementDragControls(node);\r\n    }\r\n    mount() {\r\n        // If we've been provided a DragControls for manual control over the drag gesture,\r\n        // subscribe this component to it on mount.\r\n        const { dragControls } = this.node.getProps();\r\n        if (dragControls) {\r\n            this.removeGroupControls = dragControls.subscribe(this.controls);\r\n        }\r\n        this.removeListeners = this.controls.addListeners() || noop;\r\n    }\r\n    unmount() {\r\n        this.removeGroupControls();\r\n        this.removeListeners();\r\n    }\r\n}\r\n\r\nexport { DragGesture };\r\n","import { PanSession } from './PanSession.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst asyncHandler = (handler) => (event, info) => {\r\n    if (handler) {\r\n        frame.update(() => handler(event, info));\r\n    }\r\n};\r\nclass PanGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.removePointerDownListener = noop;\r\n    }\r\n    onPointerDown(pointerDownEvent) {\r\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\r\n            transformPagePoint: this.node.getTransformPagePoint(),\r\n            contextWindow: getContextWindow(this.node),\r\n        });\r\n    }\r\n    createPanHandlers() {\r\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\r\n        return {\r\n            onSessionStart: asyncHandler(onPanSessionStart),\r\n            onStart: asyncHandler(onPanStart),\r\n            onMove: onPan,\r\n            onEnd: (event, info) => {\r\n                delete this.session;\r\n                if (onPanEnd) {\r\n                    frame.update(() => onPanEnd(event, info));\r\n                }\r\n            },\r\n        };\r\n    }\r\n    mount() {\r\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\r\n    }\r\n    update() {\r\n        this.session && this.session.updateHandlers(this.createPanHandlers());\r\n    }\r\n    unmount() {\r\n        this.removePointerDownListener();\r\n        this.session && this.session.end();\r\n    }\r\n}\r\n\r\nexport { PanGesture };\r\n","import { useContext, useId, useEffect } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\n\r\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\r\nfunction usePresence() {\r\n    const context = useContext(PresenceContext);\r\n    if (context === null)\r\n        return [true, null];\r\n    const { isPresent, onExitComplete, register } = context;\r\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\r\n    // either be null or non-null for the lifespan of the component.\r\n    const id = useId();\r\n    useEffect(() => register(id), []);\r\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\r\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\r\n}\r\n/**\r\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\r\n * There is no `safeToRemove` function.\r\n *\r\n * ```jsx\r\n * import { useIsPresent } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const isPresent = useIsPresent()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && console.log(\"I've been removed!\")\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useIsPresent() {\r\n    return isPresent(useContext(PresenceContext));\r\n}\r\nfunction isPresent(context) {\r\n    return context === null ? true : context.isPresent;\r\n}\r\n\r\nexport { isPresent, useIsPresent, usePresence };\r\n","/**\r\n * This should only ever be modified on the client otherwise it'll\r\n * persist through server requests. If we need instanced states we\r\n * could lazy-init via root.\r\n */\r\nconst globalProjectionState = {\r\n    /**\r\n     * Global flag as to whether the tree has animated since the last time\r\n     * we resized the window\r\n     */\r\n    hasAnimatedSinceResize: true,\r\n    /**\r\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\r\n     * update will be given a `data-projection-id` attribute.\r\n     */\r\n    hasEverUpdated: false,\r\n};\r\n\r\nexport { globalProjectionState };\r\n","import { px } from '../../value/types/numbers/units.mjs';\r\n\r\nfunction pixelsToPercent(pixels, axis) {\r\n    if (axis.max === axis.min)\r\n        return 0;\r\n    return (pixels / (axis.max - axis.min)) * 100;\r\n}\r\n/**\r\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\r\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\r\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\r\n * borderRadius in both states. If we animate between the two in pixels that will trigger\r\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\r\n */\r\nconst correctBorderRadius = {\r\n    correct: (latest, node) => {\r\n        if (!node.target)\r\n            return latest;\r\n        /**\r\n         * If latest is a string, if it's a percentage we can return immediately as it's\r\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\r\n         */\r\n        if (typeof latest === \"string\") {\r\n            if (px.test(latest)) {\r\n                latest = parseFloat(latest);\r\n            }\r\n            else {\r\n                return latest;\r\n            }\r\n        }\r\n        /**\r\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\r\n         * pixel value as a percentage of each axis\r\n         */\r\n        const x = pixelsToPercent(latest, node.target.x);\r\n        const y = pixelsToPercent(latest, node.target.y);\r\n        return `${x}% ${y}%`;\r\n    },\r\n};\r\n\r\nexport { correctBorderRadius, pixelsToPercent };\r\n","import { mix } from '../../utils/mix.mjs';\r\nimport { complex } from '../../value/types/complex/index.mjs';\r\n\r\nconst correctBoxShadow = {\r\n    correct: (latest, { treeScale, projectionDelta }) => {\r\n        const original = latest;\r\n        const shadow = complex.parse(latest);\r\n        // TODO: Doesn't support multiple shadows\r\n        if (shadow.length > 5)\r\n            return original;\r\n        const template = complex.createTransformer(latest);\r\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\r\n        // Calculate the overall context scale\r\n        const xScale = projectionDelta.x.scale * treeScale.x;\r\n        const yScale = projectionDelta.y.scale * treeScale.y;\r\n        shadow[0 + offset] /= xScale;\r\n        shadow[1 + offset] /= yScale;\r\n        /**\r\n         * Ideally we'd correct x and y scales individually, but because blur and\r\n         * spread apply to both we have to take a scale average and apply that instead.\r\n         * We could potentially improve the outcome of this by incorporating the ratio between\r\n         * the two scales.\r\n         */\r\n        const averageScale = mix(xScale, yScale, 0.5);\r\n        // Blur\r\n        if (typeof shadow[2 + offset] === \"number\")\r\n            shadow[2 + offset] /= averageScale;\r\n        // Spread\r\n        if (typeof shadow[3 + offset] === \"number\")\r\n            shadow[3 + offset] /= averageScale;\r\n        return template(shadow);\r\n    },\r\n};\r\n\r\nexport { correctBoxShadow };\r\n","import React__default, { useContext } from 'react';\r\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\r\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\r\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\r\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\r\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\r\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\r\nimport { frame } from '../../../frameloop/frame.mjs';\r\n\r\nclass MeasureLayoutWithContext extends React__default.Component {\r\n    /**\r\n     * This only mounts projection nodes for components that\r\n     * need measuring, we might want to do it for all components\r\n     * in order to incorporate transforms\r\n     */\r\n    componentDidMount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\r\n        const { projection } = visualElement;\r\n        addScaleCorrector(defaultScaleCorrectors);\r\n        if (projection) {\r\n            if (layoutGroup.group)\r\n                layoutGroup.group.add(projection);\r\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\r\n                switchLayoutGroup.register(projection);\r\n            }\r\n            projection.root.didUpdate();\r\n            projection.addEventListener(\"animationComplete\", () => {\r\n                this.safeToRemove();\r\n            });\r\n            projection.setOptions({\r\n                ...projection.options,\r\n                onExitComplete: () => this.safeToRemove(),\r\n            });\r\n        }\r\n        globalProjectionState.hasEverUpdated = true;\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\r\n        const projection = visualElement.projection;\r\n        if (!projection)\r\n            return null;\r\n        /**\r\n         * TODO: We use this data in relegate to determine whether to\r\n         * promote a previous element. There's no guarantee its presence data\r\n         * will have updated by this point - if a bug like this arises it will\r\n         * have to be that we markForRelegation and then find a new lead some other way,\r\n         * perhaps in didUpdate\r\n         */\r\n        projection.isPresent = isPresent;\r\n        if (drag ||\r\n            prevProps.layoutDependency !== layoutDependency ||\r\n            layoutDependency === undefined) {\r\n            projection.willUpdate();\r\n        }\r\n        else {\r\n            this.safeToRemove();\r\n        }\r\n        if (prevProps.isPresent !== isPresent) {\r\n            if (isPresent) {\r\n                projection.promote();\r\n            }\r\n            else if (!projection.relegate()) {\r\n                /**\r\n                 * If there's another stack member taking over from this one,\r\n                 * it's in charge of the exit animation and therefore should\r\n                 * be in charge of the safe to remove. Otherwise we call it here.\r\n                 */\r\n                frame.postRender(() => {\r\n                    const stack = projection.getStack();\r\n                    if (!stack || !stack.members.length) {\r\n                        this.safeToRemove();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate() {\r\n        const { projection } = this.props.visualElement;\r\n        if (projection) {\r\n            projection.root.didUpdate();\r\n            queueMicrotask(() => {\r\n                if (!projection.currentAnimation && projection.isLead()) {\r\n                    this.safeToRemove();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\r\n        const { projection } = visualElement;\r\n        if (projection) {\r\n            projection.scheduleCheckAfterUnmount();\r\n            if (layoutGroup && layoutGroup.group)\r\n                layoutGroup.group.remove(projection);\r\n            if (promoteContext && promoteContext.deregister)\r\n                promoteContext.deregister(projection);\r\n        }\r\n    }\r\n    safeToRemove() {\r\n        const { safeToRemove } = this.props;\r\n        safeToRemove && safeToRemove();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\nfunction MeasureLayout(props) {\r\n    const [isPresent, safeToRemove] = usePresence();\r\n    const layoutGroup = useContext(LayoutGroupContext);\r\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\r\n}\r\nconst defaultScaleCorrectors = {\r\n    borderRadius: {\r\n        ...correctBorderRadius,\r\n        applyTo: [\r\n            \"borderTopLeftRadius\",\r\n            \"borderTopRightRadius\",\r\n            \"borderBottomLeftRadius\",\r\n            \"borderBottomRightRadius\",\r\n        ],\r\n    },\r\n    borderTopLeftRadius: correctBorderRadius,\r\n    borderTopRightRadius: correctBorderRadius,\r\n    borderBottomLeftRadius: correctBorderRadius,\r\n    borderBottomRightRadius: correctBorderRadius,\r\n    boxShadow: correctBoxShadow,\r\n};\r\n\r\nexport { MeasureLayout };\r\n","import { circOut } from '../../easing/circ.mjs';\r\nimport { progress } from '../../utils/progress.mjs';\r\nimport { mix } from '../../utils/mix.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\nimport { percent, px } from '../../value/types/numbers/units.mjs';\r\n\r\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\r\nconst numBorders = borders.length;\r\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\r\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\r\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\r\n    if (shouldCrossfadeOpacity) {\r\n        target.opacity = mix(0, \r\n        // TODO Reinstate this if only child\r\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\r\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\r\n    }\r\n    else if (isOnlyMember) {\r\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\r\n    }\r\n    /**\r\n     * Mix border radius\r\n     */\r\n    for (let i = 0; i < numBorders; i++) {\r\n        const borderLabel = `border${borders[i]}Radius`;\r\n        let followRadius = getRadius(follow, borderLabel);\r\n        let leadRadius = getRadius(lead, borderLabel);\r\n        if (followRadius === undefined && leadRadius === undefined)\r\n            continue;\r\n        followRadius || (followRadius = 0);\r\n        leadRadius || (leadRadius = 0);\r\n        const canMix = followRadius === 0 ||\r\n            leadRadius === 0 ||\r\n            isPx(followRadius) === isPx(leadRadius);\r\n        if (canMix) {\r\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\r\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\r\n                target[borderLabel] += \"%\";\r\n            }\r\n        }\r\n        else {\r\n            target[borderLabel] = leadRadius;\r\n        }\r\n    }\r\n    /**\r\n     * Mix rotation\r\n     */\r\n    if (follow.rotate || lead.rotate) {\r\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\r\n    }\r\n}\r\nfunction getRadius(values, radiusName) {\r\n    return values[radiusName] !== undefined\r\n        ? values[radiusName]\r\n        : values.borderRadius;\r\n}\r\n// /**\r\n//  * We only want to mix the background color if there's a follow element\r\n//  * that we're not crossfading opacity between. For instance with switch\r\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\r\n//  * element being animated but also cuts down on the number of paints triggered\r\n//  * for elements where opacity is doing that work for us.\r\n//  */\r\n// if (\r\n//     !hasFollowElement &&\r\n//     latestLeadValues.backgroundColor &&\r\n//     latestFollowValues.backgroundColor\r\n// ) {\r\n//     /**\r\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\r\n//      * We could probably create a mixer that runs at the start of the animation but\r\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\r\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\r\n//      */\r\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\r\n//         latestFollowValues.backgroundColor as string,\r\n//         latestLeadValues.backgroundColor as string\r\n//     )(p)\r\n// }\r\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\r\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\r\nfunction compress(min, max, easing) {\r\n    return (p) => {\r\n        // Could replace ifs with clamp\r\n        if (p < min)\r\n            return 0;\r\n        if (p > max)\r\n            return 1;\r\n        return easing(progress(min, max, p));\r\n    };\r\n}\r\n\r\nexport { mixValues };\r\n","/**\r\n * Reset an axis to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisInto(axis, originAxis) {\r\n    axis.min = originAxis.min;\r\n    axis.max = originAxis.max;\r\n}\r\n/**\r\n * Reset a box to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyBoxInto(box, originBox) {\r\n    copyAxisInto(box.x, originBox.x);\r\n    copyAxisInto(box.y, originBox.y);\r\n}\r\n\r\nexport { copyAxisInto, copyBoxInto };\r\n","import { mix } from '../../utils/mix.mjs';\r\nimport { percent } from '../../value/types/numbers/units.mjs';\r\nimport { scalePoint } from './delta-apply.mjs';\r\n\r\n/**\r\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\r\n */\r\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\r\n    point -= translate;\r\n    point = scalePoint(point, 1 / scale, originPoint);\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, 1 / boxScale, originPoint);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\r\n */\r\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\r\n    if (percent.test(translate)) {\r\n        translate = parseFloat(translate);\r\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\r\n        translate = relativeProgress - sourceAxis.min;\r\n    }\r\n    if (typeof translate !== \"number\")\r\n        return;\r\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\r\n    if (axis === originAxis)\r\n        originPoint -= translate;\r\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\r\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\r\n}\r\n/**\r\n * The names of the motion values we want to apply as translation, scale and origin.\r\n */\r\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\r\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\r\n/**\r\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\r\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\r\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\r\n}\r\n\r\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\r\n","import { calcLength } from './delta-calc.mjs';\r\n\r\nfunction isAxisDeltaZero(delta) {\r\n    return delta.translate === 0 && delta.scale === 1;\r\n}\r\nfunction isDeltaZero(delta) {\r\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\r\n}\r\nfunction boxEquals(a, b) {\r\n    return (a.x.min === b.x.min &&\r\n        a.x.max === b.x.max &&\r\n        a.y.min === b.y.min &&\r\n        a.y.max === b.y.max);\r\n}\r\nfunction boxEqualsRounded(a, b) {\r\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\r\n        Math.round(a.x.max) === Math.round(b.x.max) &&\r\n        Math.round(a.y.min) === Math.round(b.y.min) &&\r\n        Math.round(a.y.max) === Math.round(b.y.max));\r\n}\r\nfunction aspectRatio(box) {\r\n    return calcLength(box.x) / calcLength(box.y);\r\n}\r\n\r\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\r\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\r\n\r\nclass NodeStack {\r\n    constructor() {\r\n        this.members = [];\r\n    }\r\n    add(node) {\r\n        addUniqueItem(this.members, node);\r\n        node.scheduleRender();\r\n    }\r\n    remove(node) {\r\n        removeItem(this.members, node);\r\n        if (node === this.prevLead) {\r\n            this.prevLead = undefined;\r\n        }\r\n        if (node === this.lead) {\r\n            const prevLead = this.members[this.members.length - 1];\r\n            if (prevLead) {\r\n                this.promote(prevLead);\r\n            }\r\n        }\r\n    }\r\n    relegate(node) {\r\n        const indexOfNode = this.members.findIndex((member) => node === member);\r\n        if (indexOfNode === 0)\r\n            return false;\r\n        /**\r\n         * Find the next projection node that is present\r\n         */\r\n        let prevLead;\r\n        for (let i = indexOfNode; i >= 0; i--) {\r\n            const member = this.members[i];\r\n            if (member.isPresent !== false) {\r\n                prevLead = member;\r\n                break;\r\n            }\r\n        }\r\n        if (prevLead) {\r\n            this.promote(prevLead);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    promote(node, preserveFollowOpacity) {\r\n        const prevLead = this.lead;\r\n        if (node === prevLead)\r\n            return;\r\n        this.prevLead = prevLead;\r\n        this.lead = node;\r\n        node.show();\r\n        if (prevLead) {\r\n            prevLead.instance && prevLead.scheduleRender();\r\n            node.scheduleRender();\r\n            node.resumeFrom = prevLead;\r\n            if (preserveFollowOpacity) {\r\n                node.resumeFrom.preserveOpacity = true;\r\n            }\r\n            if (prevLead.snapshot) {\r\n                node.snapshot = prevLead.snapshot;\r\n                node.snapshot.latestValues =\r\n                    prevLead.animationValues || prevLead.latestValues;\r\n            }\r\n            if (node.root && node.root.isUpdating) {\r\n                node.isLayoutDirty = true;\r\n            }\r\n            const { crossfade } = node.options;\r\n            if (crossfade === false) {\r\n                prevLead.hide();\r\n            }\r\n            /**\r\n             * TODO:\r\n             *   - Test border radius when previous node was deleted\r\n             *   - boxShadow mixing\r\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\r\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\r\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\r\n             * ---\r\n             *   - Crossfade opacity of root nodes\r\n             *   - layoutId changes after animation\r\n             *   - layoutId changes mid animation\r\n             */\r\n        }\r\n    }\r\n    exitAnimationComplete() {\r\n        this.members.forEach((node) => {\r\n            const { options, resumingFrom } = node;\r\n            options.onExitComplete && options.onExitComplete();\r\n            if (resumingFrom) {\r\n                resumingFrom.options.onExitComplete &&\r\n                    resumingFrom.options.onExitComplete();\r\n            }\r\n        });\r\n    }\r\n    scheduleRender() {\r\n        this.members.forEach((node) => {\r\n            node.instance && node.scheduleRender(false);\r\n        });\r\n    }\r\n    /**\r\n     * Clear any leads that have been removed this render to prevent them from being\r\n     * used in future animations and to prevent memory leaks\r\n     */\r\n    removeLeadSnapshot() {\r\n        if (this.lead && this.lead.snapshot) {\r\n            this.lead.snapshot = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport { NodeStack };\r\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\r\n    let transform = \"\";\r\n    /**\r\n     * The translations we use to calculate are always relative to the viewport coordinate space.\r\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\r\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\r\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\r\n     */\r\n    const xTranslate = delta.x.translate / treeScale.x;\r\n    const yTranslate = delta.y.translate / treeScale.y;\r\n    if (xTranslate || yTranslate) {\r\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\r\n    }\r\n    /**\r\n     * Apply scale correction for the tree transform.\r\n     * This will apply scale to the screen-orientated axes.\r\n     */\r\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\r\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\r\n    }\r\n    if (latestTransform) {\r\n        const { rotate, rotateX, rotateY } = latestTransform;\r\n        if (rotate)\r\n            transform += `rotate(${rotate}deg) `;\r\n        if (rotateX)\r\n            transform += `rotateX(${rotateX}deg) `;\r\n        if (rotateY)\r\n            transform += `rotateY(${rotateY}deg) `;\r\n    }\r\n    /**\r\n     * Apply scale to match the size of the element to the size we want it.\r\n     * This will apply scale to the element-orientated axes.\r\n     */\r\n    const elementScaleX = delta.x.scale * treeScale.x;\r\n    const elementScaleY = delta.y.scale * treeScale.y;\r\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\r\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\r\n    }\r\n    return transform || \"none\";\r\n}\r\n\r\nexport { buildProjectionTransform };\r\n","const compareByDepth = (a, b) => a.depth - b.depth;\r\n\r\nexport { compareByDepth };\r\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\r\nimport { compareByDepth } from './compare-by-depth.mjs';\r\n\r\nclass FlatTree {\r\n    constructor() {\r\n        this.children = [];\r\n        this.isDirty = false;\r\n    }\r\n    add(child) {\r\n        addUniqueItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    remove(child) {\r\n        removeItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    forEach(callback) {\r\n        this.isDirty && this.children.sort(compareByDepth);\r\n        this.isDirty = false;\r\n        this.children.forEach(callback);\r\n    }\r\n}\r\n\r\nexport { FlatTree };\r\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\r\n\r\n/**\r\n * Timeout defined in ms\r\n */\r\nfunction delay(callback, timeout) {\r\n    const start = performance.now();\r\n    const checkElapsed = ({ timestamp }) => {\r\n        const elapsed = timestamp - start;\r\n        if (elapsed >= timeout) {\r\n            cancelFrame(checkElapsed);\r\n            callback(elapsed - timeout);\r\n        }\r\n    };\r\n    frame.read(checkElapsed, true);\r\n    return () => cancelFrame(checkElapsed);\r\n}\r\n\r\nexport { delay };\r\n","function record(data) {\r\n    if (window.MotionDebug) {\r\n        window.MotionDebug.record(data);\r\n    }\r\n}\r\n\r\nexport { record };\r\n","function isSVGElement(element) {\r\n    return element instanceof SVGElement && element.tagName !== \"svg\";\r\n}\r\n\r\nexport { isSVGElement };\r\n","import { animateMotionValue } from './motion-value.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction animateSingleValue(value, keyframes, options) {\r\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\r\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\r\n    return motionValue$1.animation;\r\n}\r\n\r\nexport { animateSingleValue };\r\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\r\nimport { mixValues } from '../animation/mix-values.mjs';\r\nimport { copyBoxInto } from '../geometry/copy.mjs';\r\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\r\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\r\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\r\nimport { createBox, createDelta } from '../geometry/models.mjs';\r\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\r\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\r\nimport { NodeStack } from '../shared/stack.mjs';\r\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\r\nimport { buildProjectionTransform } from '../styles/transform.mjs';\r\nimport { eachAxis } from '../utils/each-axis.mjs';\r\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\r\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\nimport { globalProjectionState } from './state.mjs';\r\nimport { delay } from '../../utils/delay.mjs';\r\nimport { mix } from '../../utils/mix.mjs';\r\nimport { record } from '../../debug/record.mjs';\r\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\r\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\r\nimport { clamp } from '../../utils/clamp.mjs';\r\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\n\r\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\nconst hiddenVisibility = { visibility: \"hidden\" };\r\n/**\r\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\r\n * which has a noticeable difference in spring animations\r\n */\r\nconst animationTarget = 1000;\r\nlet id = 0;\r\n/**\r\n * Use a mutable data object for debug data so as to not create a new\r\n * object every frame.\r\n */\r\nconst projectionFrameData = {\r\n    type: \"projectionFrame\",\r\n    totalNodes: 0,\r\n    resolvedTargetDeltas: 0,\r\n    recalculatedProjection: 0,\r\n};\r\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\r\n    return class ProjectionNode {\r\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\r\n            /**\r\n             * A unique ID generated for every projection node.\r\n             */\r\n            this.id = id++;\r\n            /**\r\n             * An id that represents a unique session instigated by startUpdate.\r\n             */\r\n            this.animationId = 0;\r\n            /**\r\n             * A Set containing all this component's children. This is used to iterate\r\n             * through the children.\r\n             *\r\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\r\n             */\r\n            this.children = new Set();\r\n            /**\r\n             * Options for the node. We use this to configure what kind of layout animations\r\n             * we should perform (if any).\r\n             */\r\n            this.options = {};\r\n            /**\r\n             * We use this to detect when its safe to shut down part of a projection tree.\r\n             * We have to keep projecting children for scale correction and relative projection\r\n             * until all their parents stop performing layout animations.\r\n             */\r\n            this.isTreeAnimating = false;\r\n            this.isAnimationBlocked = false;\r\n            /**\r\n             * Flag to true if we think this layout has been changed. We can't always know this,\r\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\r\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\r\n             * and if one node is dirtied, they all are.\r\n             */\r\n            this.isLayoutDirty = false;\r\n            /**\r\n             * Flag to true if we think the projection calculations for this node needs\r\n             * recalculating as a result of an updated transform or layout animation.\r\n             */\r\n            this.isProjectionDirty = false;\r\n            /**\r\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\r\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\r\n             */\r\n            this.isSharedProjectionDirty = false;\r\n            /**\r\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\r\n             * respected by shared nodes.\r\n             */\r\n            this.isTransformDirty = false;\r\n            /**\r\n             * Block layout updates for instant layout transitions throughout the tree.\r\n             */\r\n            this.updateManuallyBlocked = false;\r\n            this.updateBlockedByResize = false;\r\n            /**\r\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\r\n             * call.\r\n             */\r\n            this.isUpdating = false;\r\n            /**\r\n             * If this is an SVG element we currently disable projection transforms\r\n             */\r\n            this.isSVG = false;\r\n            /**\r\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\r\n             * its projection styles.\r\n             */\r\n            this.needsReset = false;\r\n            /**\r\n             * Flags whether this node should have its transform reset prior to measuring.\r\n             */\r\n            this.shouldResetTransform = false;\r\n            /**\r\n             * An object representing the calculated contextual/accumulated/tree scale.\r\n             * This will be used to scale calculcated projection transforms, as these are\r\n             * calculated in screen-space but need to be scaled for elements to layoutly\r\n             * make it to their calculated destinations.\r\n             *\r\n             * TODO: Lazy-init\r\n             */\r\n            this.treeScale = { x: 1, y: 1 };\r\n            /**\r\n             *\r\n             */\r\n            this.eventHandlers = new Map();\r\n            this.hasTreeAnimated = false;\r\n            // Note: Currently only running on root node\r\n            this.updateScheduled = false;\r\n            this.projectionUpdateScheduled = false;\r\n            this.checkUpdateFailed = () => {\r\n                if (this.isUpdating) {\r\n                    this.isUpdating = false;\r\n                    this.clearAllSnapshots();\r\n                }\r\n            };\r\n            /**\r\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\r\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\r\n             * the next step.\r\n             */\r\n            this.updateProjection = () => {\r\n                this.projectionUpdateScheduled = false;\r\n                /**\r\n                 * Reset debug counts. Manually resetting rather than creating a new\r\n                 * object each frame.\r\n                 */\r\n                projectionFrameData.totalNodes =\r\n                    projectionFrameData.resolvedTargetDeltas =\r\n                        projectionFrameData.recalculatedProjection =\r\n                            0;\r\n                this.nodes.forEach(propagateDirtyNodes);\r\n                this.nodes.forEach(resolveTargetDelta);\r\n                this.nodes.forEach(calcProjection);\r\n                this.nodes.forEach(cleanDirtyNodes);\r\n                record(projectionFrameData);\r\n            };\r\n            this.hasProjected = false;\r\n            this.isVisible = true;\r\n            this.animationProgress = 0;\r\n            /**\r\n             * Shared layout\r\n             */\r\n            // TODO Only running on root node\r\n            this.sharedNodes = new Map();\r\n            this.latestValues = latestValues;\r\n            this.root = parent ? parent.root || parent : this;\r\n            this.path = parent ? [...parent.path, parent] : [];\r\n            this.parent = parent;\r\n            this.depth = parent ? parent.depth + 1 : 0;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                this.path[i].shouldResetTransform = true;\r\n            }\r\n            if (this.root === this)\r\n                this.nodes = new FlatTree();\r\n        }\r\n        addEventListener(name, handler) {\r\n            if (!this.eventHandlers.has(name)) {\r\n                this.eventHandlers.set(name, new SubscriptionManager());\r\n            }\r\n            return this.eventHandlers.get(name).add(handler);\r\n        }\r\n        notifyListeners(name, ...args) {\r\n            const subscriptionManager = this.eventHandlers.get(name);\r\n            subscriptionManager && subscriptionManager.notify(...args);\r\n        }\r\n        hasListeners(name) {\r\n            return this.eventHandlers.has(name);\r\n        }\r\n        /**\r\n         * Lifecycles\r\n         */\r\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\r\n            if (this.instance)\r\n                return;\r\n            this.isSVG = isSVGElement(instance);\r\n            this.instance = instance;\r\n            const { layoutId, layout, visualElement } = this.options;\r\n            if (visualElement && !visualElement.current) {\r\n                visualElement.mount(instance);\r\n            }\r\n            this.root.nodes.add(this);\r\n            this.parent && this.parent.children.add(this);\r\n            if (isLayoutDirty && (layout || layoutId)) {\r\n                this.isLayoutDirty = true;\r\n            }\r\n            if (attachResizeListener) {\r\n                let cancelDelay;\r\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\r\n                attachResizeListener(instance, () => {\r\n                    this.root.updateBlockedByResize = true;\r\n                    cancelDelay && cancelDelay();\r\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\r\n                    if (globalProjectionState.hasAnimatedSinceResize) {\r\n                        globalProjectionState.hasAnimatedSinceResize = false;\r\n                        this.nodes.forEach(finishAnimation);\r\n                    }\r\n                });\r\n            }\r\n            if (layoutId) {\r\n                this.root.registerSharedNode(layoutId, this);\r\n            }\r\n            // Only register the handler if it requires layout animation\r\n            if (this.options.animate !== false &&\r\n                visualElement &&\r\n                (layoutId || layout)) {\r\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\r\n                    if (this.isTreeAnimationBlocked()) {\r\n                        this.target = undefined;\r\n                        this.relativeTarget = undefined;\r\n                        return;\r\n                    }\r\n                    // TODO: Check here if an animation exists\r\n                    const layoutTransition = this.options.transition ||\r\n                        visualElement.getDefaultTransition() ||\r\n                        defaultLayoutTransition;\r\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\r\n                    /**\r\n                     * The target layout of the element might stay the same,\r\n                     * but its position relative to its parent has changed.\r\n                     */\r\n                    const targetChanged = !this.targetLayout ||\r\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\r\n                        hasRelativeTargetChanged;\r\n                    /**\r\n                     * If the layout hasn't seemed to have changed, it might be that the\r\n                     * element is visually in the same place in the document but its position\r\n                     * relative to its parent has indeed changed. So here we check for that.\r\n                     */\r\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\r\n                    if (this.options.layoutRoot ||\r\n                        (this.resumeFrom && this.resumeFrom.instance) ||\r\n                        hasOnlyRelativeTargetChanged ||\r\n                        (hasLayoutChanged &&\r\n                            (targetChanged || !this.currentAnimation))) {\r\n                        if (this.resumeFrom) {\r\n                            this.resumingFrom = this.resumeFrom;\r\n                            this.resumingFrom.resumingFrom = undefined;\r\n                        }\r\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\r\n                        const animationOptions = {\r\n                            ...getValueTransition(layoutTransition, \"layout\"),\r\n                            onPlay: onLayoutAnimationStart,\r\n                            onComplete: onLayoutAnimationComplete,\r\n                        };\r\n                        if (visualElement.shouldReduceMotion ||\r\n                            this.options.layoutRoot) {\r\n                            animationOptions.delay = 0;\r\n                            animationOptions.type = false;\r\n                        }\r\n                        this.startAnimation(animationOptions);\r\n                    }\r\n                    else {\r\n                        /**\r\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\r\n                         * finish it immediately. Otherwise it will be animating from a location\r\n                         * that was probably never commited to screen and look like a jumpy box.\r\n                         */\r\n                        if (!hasLayoutChanged) {\r\n                            finishAnimation(this);\r\n                        }\r\n                        if (this.isLead() && this.options.onExitComplete) {\r\n                            this.options.onExitComplete();\r\n                        }\r\n                    }\r\n                    this.targetLayout = newLayout;\r\n                });\r\n            }\r\n        }\r\n        unmount() {\r\n            this.options.layoutId && this.willUpdate();\r\n            this.root.nodes.remove(this);\r\n            const stack = this.getStack();\r\n            stack && stack.remove(this);\r\n            this.parent && this.parent.children.delete(this);\r\n            this.instance = undefined;\r\n            cancelFrame(this.updateProjection);\r\n        }\r\n        // only on the root\r\n        blockUpdate() {\r\n            this.updateManuallyBlocked = true;\r\n        }\r\n        unblockUpdate() {\r\n            this.updateManuallyBlocked = false;\r\n        }\r\n        isUpdateBlocked() {\r\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\r\n        }\r\n        isTreeAnimationBlocked() {\r\n            return (this.isAnimationBlocked ||\r\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\r\n                false);\r\n        }\r\n        // Note: currently only running on root node\r\n        startUpdate() {\r\n            if (this.isUpdateBlocked())\r\n                return;\r\n            this.isUpdating = true;\r\n            this.nodes && this.nodes.forEach(resetRotation);\r\n            this.animationId++;\r\n        }\r\n        getTransformTemplate() {\r\n            const { visualElement } = this.options;\r\n            return visualElement && visualElement.getProps().transformTemplate;\r\n        }\r\n        willUpdate(shouldNotifyListeners = true) {\r\n            this.root.hasTreeAnimated = true;\r\n            if (this.root.isUpdateBlocked()) {\r\n                this.options.onExitComplete && this.options.onExitComplete();\r\n                return;\r\n            }\r\n            !this.root.isUpdating && this.root.startUpdate();\r\n            if (this.isLayoutDirty)\r\n                return;\r\n            this.isLayoutDirty = true;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                node.shouldResetTransform = true;\r\n                node.updateScroll(\"snapshot\");\r\n                if (node.options.layoutRoot) {\r\n                    node.willUpdate(false);\r\n                }\r\n            }\r\n            const { layoutId, layout } = this.options;\r\n            if (layoutId === undefined && !layout)\r\n                return;\r\n            const transformTemplate = this.getTransformTemplate();\r\n            this.prevTransformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            this.updateSnapshot();\r\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\r\n        }\r\n        update() {\r\n            this.updateScheduled = false;\r\n            const updateWasBlocked = this.isUpdateBlocked();\r\n            // When doing an instant transition, we skip the layout update,\r\n            // but should still clean up the measurements so that the next\r\n            // snapshot could be taken correctly.\r\n            if (updateWasBlocked) {\r\n                this.unblockUpdate();\r\n                this.clearAllSnapshots();\r\n                this.nodes.forEach(clearMeasurements);\r\n                return;\r\n            }\r\n            if (!this.isUpdating) {\r\n                this.nodes.forEach(clearIsLayoutDirty);\r\n            }\r\n            this.isUpdating = false;\r\n            /**\r\n             * Write\r\n             */\r\n            this.nodes.forEach(resetTransformStyle);\r\n            /**\r\n             * Read ==================\r\n             */\r\n            // Update layout measurements of updated children\r\n            this.nodes.forEach(updateLayout);\r\n            /**\r\n             * Write\r\n             */\r\n            // Notify listeners that the layout is updated\r\n            this.nodes.forEach(notifyLayoutUpdate);\r\n            this.clearAllSnapshots();\r\n            /**\r\n             * Manually flush any pending updates. Ideally\r\n             * we could leave this to the following requestAnimationFrame but this seems\r\n             * to leave a flash of incorrectly styled content.\r\n             */\r\n            const now = performance.now();\r\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\r\n            frameData.timestamp = now;\r\n            frameData.isProcessing = true;\r\n            steps.update.process(frameData);\r\n            steps.preRender.process(frameData);\r\n            steps.render.process(frameData);\r\n            frameData.isProcessing = false;\r\n        }\r\n        didUpdate() {\r\n            if (!this.updateScheduled) {\r\n                this.updateScheduled = true;\r\n                queueMicrotask(() => this.update());\r\n            }\r\n        }\r\n        clearAllSnapshots() {\r\n            this.nodes.forEach(clearSnapshot);\r\n            this.sharedNodes.forEach(removeLeadSnapshots);\r\n        }\r\n        scheduleUpdateProjection() {\r\n            if (!this.projectionUpdateScheduled) {\r\n                this.projectionUpdateScheduled = true;\r\n                frame.preRender(this.updateProjection, false, true);\r\n            }\r\n        }\r\n        scheduleCheckAfterUnmount() {\r\n            /**\r\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\r\n             * we manually call didUpdate to give a chance to the siblings to animate.\r\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\r\n             */\r\n            frame.postRender(() => {\r\n                if (this.isLayoutDirty) {\r\n                    this.root.didUpdate();\r\n                }\r\n                else {\r\n                    this.root.checkUpdateFailed();\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * Update measurements\r\n         */\r\n        updateSnapshot() {\r\n            if (this.snapshot || !this.instance)\r\n                return;\r\n            this.snapshot = this.measure();\r\n        }\r\n        updateLayout() {\r\n            if (!this.instance)\r\n                return;\r\n            // TODO: Incorporate into a forwarded scroll offset\r\n            this.updateScroll();\r\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\r\n                !this.isLayoutDirty) {\r\n                return;\r\n            }\r\n            /**\r\n             * When a node is mounted, it simply resumes from the prevLead's\r\n             * snapshot instead of taking a new one, but the ancestors scroll\r\n             * might have updated while the prevLead is unmounted. We need to\r\n             * update the scroll again to make sure the layout we measure is\r\n             * up to date.\r\n             */\r\n            if (this.resumeFrom && !this.resumeFrom.instance) {\r\n                for (let i = 0; i < this.path.length; i++) {\r\n                    const node = this.path[i];\r\n                    node.updateScroll();\r\n                }\r\n            }\r\n            const prevLayout = this.layout;\r\n            this.layout = this.measure(false);\r\n            this.layoutCorrected = createBox();\r\n            this.isLayoutDirty = false;\r\n            this.projectionDelta = undefined;\r\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\r\n            const { visualElement } = this.options;\r\n            visualElement &&\r\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\r\n        }\r\n        updateScroll(phase = \"measure\") {\r\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\r\n            if (this.scroll &&\r\n                this.scroll.animationId === this.root.animationId &&\r\n                this.scroll.phase === phase) {\r\n                needsMeasurement = false;\r\n            }\r\n            if (needsMeasurement) {\r\n                this.scroll = {\r\n                    animationId: this.root.animationId,\r\n                    phase,\r\n                    isRoot: checkIsScrollRoot(this.instance),\r\n                    offset: measureScroll(this.instance),\r\n                };\r\n            }\r\n        }\r\n        resetTransform() {\r\n            if (!resetTransform)\r\n                return;\r\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\r\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\r\n            const transformTemplate = this.getTransformTemplate();\r\n            const transformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\r\n            if (isResetRequested &&\r\n                (hasProjection ||\r\n                    hasTransform(this.latestValues) ||\r\n                    transformTemplateHasChanged)) {\r\n                resetTransform(this.instance, transformTemplateValue);\r\n                this.shouldResetTransform = false;\r\n                this.scheduleRender();\r\n            }\r\n        }\r\n        measure(removeTransform = true) {\r\n            const pageBox = this.measurePageBox();\r\n            let layoutBox = this.removeElementScroll(pageBox);\r\n            /**\r\n             * Measurements taken during the pre-render stage\r\n             * still have transforms applied so we remove them\r\n             * via calculation.\r\n             */\r\n            if (removeTransform) {\r\n                layoutBox = this.removeTransform(layoutBox);\r\n            }\r\n            roundBox(layoutBox);\r\n            return {\r\n                animationId: this.root.animationId,\r\n                measuredBox: pageBox,\r\n                layoutBox,\r\n                latestValues: {},\r\n                source: this.id,\r\n            };\r\n        }\r\n        measurePageBox() {\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return createBox();\r\n            const box = visualElement.measureViewportBox();\r\n            // Remove viewport scroll to give page-relative coordinates\r\n            const { scroll } = this.root;\r\n            if (scroll) {\r\n                translateAxis(box.x, scroll.offset.x);\r\n                translateAxis(box.y, scroll.offset.y);\r\n            }\r\n            return box;\r\n        }\r\n        removeElementScroll(box) {\r\n            const boxWithoutScroll = createBox();\r\n            copyBoxInto(boxWithoutScroll, box);\r\n            /**\r\n             * Performance TODO: Keep a cumulative scroll offset down the tree\r\n             * rather than loop back up the path.\r\n             */\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                const { scroll, options } = node;\r\n                if (node !== this.root && scroll && options.layoutScroll) {\r\n                    /**\r\n                     * If this is a new scroll root, we want to remove all previous scrolls\r\n                     * from the viewport box.\r\n                     */\r\n                    if (scroll.isRoot) {\r\n                        copyBoxInto(boxWithoutScroll, box);\r\n                        const { scroll: rootScroll } = this.root;\r\n                        /**\r\n                         * Undo the application of page scroll that was originally added\r\n                         * to the measured bounding box.\r\n                         */\r\n                        if (rootScroll) {\r\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\r\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\r\n                        }\r\n                    }\r\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\r\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return boxWithoutScroll;\r\n        }\r\n        applyTransform(box, transformOnly = false) {\r\n            const withTransforms = createBox();\r\n            copyBoxInto(withTransforms, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!transformOnly &&\r\n                    node.options.layoutScroll &&\r\n                    node.scroll &&\r\n                    node !== node.root) {\r\n                    transformBox(withTransforms, {\r\n                        x: -node.scroll.offset.x,\r\n                        y: -node.scroll.offset.y,\r\n                    });\r\n                }\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                transformBox(withTransforms, node.latestValues);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                transformBox(withTransforms, this.latestValues);\r\n            }\r\n            return withTransforms;\r\n        }\r\n        removeTransform(box) {\r\n            const boxWithoutTransform = createBox();\r\n            copyBoxInto(boxWithoutTransform, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!node.instance)\r\n                    continue;\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                hasScale(node.latestValues) && node.updateSnapshot();\r\n                const sourceBox = createBox();\r\n                const nodeBox = node.measurePageBox();\r\n                copyBoxInto(sourceBox, nodeBox);\r\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\r\n            }\r\n            return boxWithoutTransform;\r\n        }\r\n        setTargetDelta(delta) {\r\n            this.targetDelta = delta;\r\n            this.root.scheduleUpdateProjection();\r\n            this.isProjectionDirty = true;\r\n        }\r\n        setOptions(options) {\r\n            this.options = {\r\n                ...this.options,\r\n                ...options,\r\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\r\n            };\r\n        }\r\n        clearMeasurements() {\r\n            this.scroll = undefined;\r\n            this.layout = undefined;\r\n            this.snapshot = undefined;\r\n            this.prevTransformTemplateValue = undefined;\r\n            this.targetDelta = undefined;\r\n            this.target = undefined;\r\n            this.isLayoutDirty = false;\r\n        }\r\n        forceRelativeParentToResolveTarget() {\r\n            if (!this.relativeParent)\r\n                return;\r\n            /**\r\n             * If the parent target isn't up-to-date, force it to update.\r\n             * This is an unfortunate de-optimisation as it means any updating relative\r\n             * projection will cause all the relative parents to recalculate back\r\n             * up the tree.\r\n             */\r\n            if (this.relativeParent.resolvedRelativeTargetAt !==\r\n                frameData.timestamp) {\r\n                this.relativeParent.resolveTargetDelta(true);\r\n            }\r\n        }\r\n        resolveTargetDelta(forceRecalculation = false) {\r\n            var _a;\r\n            /**\r\n             * Once the dirty status of nodes has been spread through the tree, we also\r\n             * need to check if we have a shared node of a different depth that has itself\r\n             * been dirtied.\r\n             */\r\n            const lead = this.getLead();\r\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\r\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\r\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            /**\r\n             * We don't use transform for this step of processing so we don't\r\n             * need to check whether any nodes have changed transform.\r\n             */\r\n            const canSkip = !(forceRecalculation ||\r\n                (isShared && this.isSharedProjectionDirty) ||\r\n                this.isProjectionDirty ||\r\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\r\n                this.attemptToResolveRelativeTarget);\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If we have no layout, we can't perform projection, so early return\r\n             */\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            this.resolvedRelativeTargetAt = frameData.timestamp;\r\n            /**\r\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\r\n             * a relativeParent. This will allow a component to perform scale correction\r\n             * even if no animation has started.\r\n             */\r\n            // TODO If this is unsuccessful this currently happens every frame\r\n            if (!this.targetDelta && !this.relativeTarget) {\r\n                // TODO: This is a semi-repetition of further down this function, make DRY\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    relativeParent.layout &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * If we have no relative target or no target delta our target isn't valid\r\n             * for this frame.\r\n             */\r\n            if (!this.relativeTarget && !this.targetDelta)\r\n                return;\r\n            /**\r\n             * Lazy-init target data structure\r\n             */\r\n            if (!this.target) {\r\n                this.target = createBox();\r\n                this.targetWithTransforms = createBox();\r\n            }\r\n            /**\r\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\r\n             */\r\n            if (this.relativeTarget &&\r\n                this.relativeTargetOrigin &&\r\n                this.relativeParent &&\r\n                this.relativeParent.target) {\r\n                this.forceRelativeParentToResolveTarget();\r\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\r\n                /**\r\n                 * If we've only got a targetDelta, resolve it into a target\r\n                 */\r\n            }\r\n            else if (this.targetDelta) {\r\n                if (Boolean(this.resumingFrom)) {\r\n                    // TODO: This is creating a new object every frame\r\n                    this.target = this.applyTransform(this.layout.layoutBox);\r\n                }\r\n                else {\r\n                    copyBoxInto(this.target, this.layout.layoutBox);\r\n                }\r\n                applyBoxDelta(this.target, this.targetDelta);\r\n            }\r\n            else {\r\n                /**\r\n                 * If no target, use own layout as target\r\n                 */\r\n                copyBoxInto(this.target, this.layout.layoutBox);\r\n            }\r\n            /**\r\n             * If we've been told to attempt to resolve a relative target, do so.\r\n             */\r\n            if (this.attemptToResolveRelativeTarget) {\r\n                this.attemptToResolveRelativeTarget = false;\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    Boolean(relativeParent.resumingFrom) ===\r\n                        Boolean(this.resumingFrom) &&\r\n                    !relativeParent.options.layoutScroll &&\r\n                    relativeParent.target &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * Increase debug counter for resolved target deltas\r\n             */\r\n            projectionFrameData.resolvedTargetDeltas++;\r\n        }\r\n        getClosestProjectingParent() {\r\n            if (!this.parent ||\r\n                hasScale(this.parent.latestValues) ||\r\n                has2DTranslate(this.parent.latestValues)) {\r\n                return undefined;\r\n            }\r\n            if (this.parent.isProjecting()) {\r\n                return this.parent;\r\n            }\r\n            else {\r\n                return this.parent.getClosestProjectingParent();\r\n            }\r\n        }\r\n        isProjecting() {\r\n            return Boolean((this.relativeTarget ||\r\n                this.targetDelta ||\r\n                this.options.layoutRoot) &&\r\n                this.layout);\r\n        }\r\n        calcProjection() {\r\n            var _a;\r\n            const lead = this.getLead();\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            let canSkip = true;\r\n            /**\r\n             * If this is a normal layout animation and neither this node nor its nearest projecting\r\n             * is dirty then we can't skip.\r\n             */\r\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If this is a shared layout animation and this node's shared projection is dirty then\r\n             * we can't skip.\r\n             */\r\n            if (isShared &&\r\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If we have resolved the target this frame we must recalculate the\r\n             * projection to ensure it visually represents the internal calculations.\r\n             */\r\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\r\n                canSkip = false;\r\n            }\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If this section of the tree isn't animating we can\r\n             * delete our target sources for the following frame.\r\n             */\r\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\r\n                this.currentAnimation ||\r\n                this.pendingAnimation);\r\n            if (!this.isTreeAnimating) {\r\n                this.targetDelta = this.relativeTarget = undefined;\r\n            }\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            /**\r\n             * Reset the corrected box with the latest values from box, as we're then going\r\n             * to perform mutative operations on it.\r\n             */\r\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\r\n            /**\r\n             * Record previous tree scales before updating.\r\n             */\r\n            const prevTreeScaleX = this.treeScale.x;\r\n            const prevTreeScaleY = this.treeScale.y;\r\n            /**\r\n             * Apply all the parent deltas to this box to produce the corrected box. This\r\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n             */\r\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\r\n            /**\r\n             * If this layer needs to perform scale correction but doesn't have a target,\r\n             * use the layout as the target.\r\n             */\r\n            if (lead.layout &&\r\n                !lead.target &&\r\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\r\n                lead.target = lead.layout.layoutBox;\r\n            }\r\n            const { target } = lead;\r\n            if (!target) {\r\n                /**\r\n                 * If we don't have a target to project into, but we were previously\r\n                 * projecting, we want to remove the stored transform and schedule\r\n                 * a render to ensure the elements reflect the removed transform.\r\n                 */\r\n                if (this.projectionTransform) {\r\n                    this.projectionDelta = createDelta();\r\n                    this.projectionTransform = \"none\";\r\n                    this.scheduleRender();\r\n                }\r\n                return;\r\n            }\r\n            if (!this.projectionDelta) {\r\n                this.projectionDelta = createDelta();\r\n                this.projectionDeltaWithTransform = createDelta();\r\n            }\r\n            const prevProjectionTransform = this.projectionTransform;\r\n            /**\r\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\r\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n             * to allow people to choose whether these styles are corrected based on just the\r\n             * layout reprojection or the final bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\r\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\r\n            if (this.projectionTransform !== prevProjectionTransform ||\r\n                this.treeScale.x !== prevTreeScaleX ||\r\n                this.treeScale.y !== prevTreeScaleY) {\r\n                this.hasProjected = true;\r\n                this.scheduleRender();\r\n                this.notifyListeners(\"projectionUpdate\", target);\r\n            }\r\n            /**\r\n             * Increase debug counter for recalculated projections\r\n             */\r\n            projectionFrameData.recalculatedProjection++;\r\n        }\r\n        hide() {\r\n            this.isVisible = false;\r\n            // TODO: Schedule render\r\n        }\r\n        show() {\r\n            this.isVisible = true;\r\n            // TODO: Schedule render\r\n        }\r\n        scheduleRender(notifyAll = true) {\r\n            this.options.scheduleRender && this.options.scheduleRender();\r\n            if (notifyAll) {\r\n                const stack = this.getStack();\r\n                stack && stack.scheduleRender();\r\n            }\r\n            if (this.resumingFrom && !this.resumingFrom.instance) {\r\n                this.resumingFrom = undefined;\r\n            }\r\n        }\r\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\r\n            const snapshot = this.snapshot;\r\n            const snapshotLatestValues = snapshot\r\n                ? snapshot.latestValues\r\n                : {};\r\n            const mixedValues = { ...this.latestValues };\r\n            const targetDelta = createDelta();\r\n            if (!this.relativeParent ||\r\n                !this.relativeParent.options.layoutRoot) {\r\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\r\n            }\r\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\r\n            const relativeLayout = createBox();\r\n            const snapshotSource = snapshot ? snapshot.source : undefined;\r\n            const layoutSource = this.layout ? this.layout.source : undefined;\r\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\r\n            const stack = this.getStack();\r\n            const isOnlyMember = !stack || stack.members.length <= 1;\r\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\r\n                !isOnlyMember &&\r\n                this.options.crossfade === true &&\r\n                !this.path.some(hasOpacityCrossfade));\r\n            this.animationProgress = 0;\r\n            let prevRelativeTarget;\r\n            this.mixTargetDelta = (latest) => {\r\n                const progress = latest / 1000;\r\n                mixAxisDelta(targetDelta.x, delta.x, progress);\r\n                mixAxisDelta(targetDelta.y, delta.y, progress);\r\n                this.setTargetDelta(targetDelta);\r\n                if (this.relativeTarget &&\r\n                    this.relativeTargetOrigin &&\r\n                    this.layout &&\r\n                    this.relativeParent &&\r\n                    this.relativeParent.layout) {\r\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\r\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\r\n                    /**\r\n                     * If this is an unchanged relative target we can consider the\r\n                     * projection not dirty.\r\n                     */\r\n                    if (prevRelativeTarget &&\r\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\r\n                        this.isProjectionDirty = false;\r\n                    }\r\n                    if (!prevRelativeTarget)\r\n                        prevRelativeTarget = createBox();\r\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\r\n                }\r\n                if (isSharedLayoutAnimation) {\r\n                    this.animationValues = mixedValues;\r\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\r\n                }\r\n                this.root.scheduleUpdateProjection();\r\n                this.scheduleRender();\r\n                this.animationProgress = progress;\r\n            };\r\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\r\n        }\r\n        startAnimation(options) {\r\n            this.notifyListeners(\"animationStart\");\r\n            this.currentAnimation && this.currentAnimation.stop();\r\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\r\n                this.resumingFrom.currentAnimation.stop();\r\n            }\r\n            if (this.pendingAnimation) {\r\n                cancelFrame(this.pendingAnimation);\r\n                this.pendingAnimation = undefined;\r\n            }\r\n            /**\r\n             * Start the animation in the next frame to have a frame with progress 0,\r\n             * where the target is the same as when the animation started, so we can\r\n             * calculate the relative positions correctly for instant transitions.\r\n             */\r\n            this.pendingAnimation = frame.update(() => {\r\n                globalProjectionState.hasAnimatedSinceResize = true;\r\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\r\n                    ...options,\r\n                    onUpdate: (latest) => {\r\n                        this.mixTargetDelta(latest);\r\n                        options.onUpdate && options.onUpdate(latest);\r\n                    },\r\n                    onComplete: () => {\r\n                        options.onComplete && options.onComplete();\r\n                        this.completeAnimation();\r\n                    },\r\n                });\r\n                if (this.resumingFrom) {\r\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\r\n                }\r\n                this.pendingAnimation = undefined;\r\n            });\r\n        }\r\n        completeAnimation() {\r\n            if (this.resumingFrom) {\r\n                this.resumingFrom.currentAnimation = undefined;\r\n                this.resumingFrom.preserveOpacity = undefined;\r\n            }\r\n            const stack = this.getStack();\r\n            stack && stack.exitAnimationComplete();\r\n            this.resumingFrom =\r\n                this.currentAnimation =\r\n                    this.animationValues =\r\n                        undefined;\r\n            this.notifyListeners(\"animationComplete\");\r\n        }\r\n        finishAnimation() {\r\n            if (this.currentAnimation) {\r\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\r\n                this.currentAnimation.stop();\r\n            }\r\n            this.completeAnimation();\r\n        }\r\n        applyTransformsToTarget() {\r\n            const lead = this.getLead();\r\n            let { targetWithTransforms, target, layout, latestValues } = lead;\r\n            if (!targetWithTransforms || !target || !layout)\r\n                return;\r\n            /**\r\n             * If we're only animating position, and this element isn't the lead element,\r\n             * then instead of projecting into the lead box we instead want to calculate\r\n             * a new target that aligns the two boxes but maintains the layout shape.\r\n             */\r\n            if (this !== lead &&\r\n                this.layout &&\r\n                layout &&\r\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\r\n                target = this.target || createBox();\r\n                const xLength = calcLength(this.layout.layoutBox.x);\r\n                target.x.min = lead.target.x.min;\r\n                target.x.max = target.x.min + xLength;\r\n                const yLength = calcLength(this.layout.layoutBox.y);\r\n                target.y.min = lead.target.y.min;\r\n                target.y.max = target.y.min + yLength;\r\n            }\r\n            copyBoxInto(targetWithTransforms, target);\r\n            /**\r\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\r\n             * This is the final box that we will then project into by calculating a transform delta and\r\n             * applying it to the corrected box.\r\n             */\r\n            transformBox(targetWithTransforms, latestValues);\r\n            /**\r\n             * Update the delta between the corrected box and the final target box, after\r\n             * user-set transforms are applied to it. This will be used by the renderer to\r\n             * create a transform style that will reproject the element from its layout layout\r\n             * into the desired bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\r\n        }\r\n        registerSharedNode(layoutId, node) {\r\n            if (!this.sharedNodes.has(layoutId)) {\r\n                this.sharedNodes.set(layoutId, new NodeStack());\r\n            }\r\n            const stack = this.sharedNodes.get(layoutId);\r\n            stack.add(node);\r\n            const config = node.options.initialPromotionConfig;\r\n            node.promote({\r\n                transition: config ? config.transition : undefined,\r\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\r\n                    ? config.shouldPreserveFollowOpacity(node)\r\n                    : undefined,\r\n            });\r\n        }\r\n        isLead() {\r\n            const stack = this.getStack();\r\n            return stack ? stack.lead === this : true;\r\n        }\r\n        getLead() {\r\n            var _a;\r\n            const { layoutId } = this.options;\r\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\r\n        }\r\n        getPrevLead() {\r\n            var _a;\r\n            const { layoutId } = this.options;\r\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\r\n        }\r\n        getStack() {\r\n            const { layoutId } = this.options;\r\n            if (layoutId)\r\n                return this.root.sharedNodes.get(layoutId);\r\n        }\r\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\r\n            const stack = this.getStack();\r\n            if (stack)\r\n                stack.promote(this, preserveFollowOpacity);\r\n            if (needsReset) {\r\n                this.projectionDelta = undefined;\r\n                this.needsReset = true;\r\n            }\r\n            if (transition)\r\n                this.setOptions({ transition });\r\n        }\r\n        relegate() {\r\n            const stack = this.getStack();\r\n            if (stack) {\r\n                return stack.relegate(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        resetRotation() {\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return;\r\n            // If there's no detected rotation values, we can early return without a forced render.\r\n            let hasRotate = false;\r\n            /**\r\n             * An unrolled check for rotation values. Most elements don't have any rotation and\r\n             * skipping the nested loop and new object creation is 50% faster.\r\n             */\r\n            const { latestValues } = visualElement;\r\n            if (latestValues.rotate ||\r\n                latestValues.rotateX ||\r\n                latestValues.rotateY ||\r\n                latestValues.rotateZ) {\r\n                hasRotate = true;\r\n            }\r\n            // If there's no rotation values, we don't need to do any more.\r\n            if (!hasRotate)\r\n                return;\r\n            const resetValues = {};\r\n            // Check the rotate value of all axes and reset to 0\r\n            for (let i = 0; i < transformAxes.length; i++) {\r\n                const key = \"rotate\" + transformAxes[i];\r\n                // Record the rotation and then temporarily set it to 0\r\n                if (latestValues[key]) {\r\n                    resetValues[key] = latestValues[key];\r\n                    visualElement.setStaticValue(key, 0);\r\n                }\r\n            }\r\n            // Force a render of this element to apply the transform with all rotations\r\n            // set to 0.\r\n            visualElement.render();\r\n            // Put back all the values we reset\r\n            for (const key in resetValues) {\r\n                visualElement.setStaticValue(key, resetValues[key]);\r\n            }\r\n            // Schedule a render for the next frame. This ensures we won't visually\r\n            // see the element with the reset rotate value applied.\r\n            visualElement.scheduleRender();\r\n        }\r\n        getProjectionStyles(styleProp) {\r\n            var _a, _b;\r\n            if (!this.instance || this.isSVG)\r\n                return undefined;\r\n            if (!this.isVisible) {\r\n                return hiddenVisibility;\r\n            }\r\n            const styles = {\r\n                visibility: \"\",\r\n            };\r\n            const transformTemplate = this.getTransformTemplate();\r\n            if (this.needsReset) {\r\n                this.needsReset = false;\r\n                styles.opacity = \"\";\r\n                styles.pointerEvents =\r\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\r\n                styles.transform = transformTemplate\r\n                    ? transformTemplate(this.latestValues, \"\")\r\n                    : \"none\";\r\n                return styles;\r\n            }\r\n            const lead = this.getLead();\r\n            if (!this.projectionDelta || !this.layout || !lead.target) {\r\n                const emptyStyles = {};\r\n                if (this.options.layoutId) {\r\n                    emptyStyles.opacity =\r\n                        this.latestValues.opacity !== undefined\r\n                            ? this.latestValues.opacity\r\n                            : 1;\r\n                    emptyStyles.pointerEvents =\r\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\r\n                }\r\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\r\n                    emptyStyles.transform = transformTemplate\r\n                        ? transformTemplate({}, \"\")\r\n                        : \"none\";\r\n                    this.hasProjected = false;\r\n                }\r\n                return emptyStyles;\r\n            }\r\n            const valuesToRender = lead.animationValues || lead.latestValues;\r\n            this.applyTransformsToTarget();\r\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\r\n            if (transformTemplate) {\r\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\r\n            }\r\n            const { x, y } = this.projectionDelta;\r\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\r\n            if (lead.animationValues) {\r\n                /**\r\n                 * If the lead component is animating, assign this either the entering/leaving\r\n                 * opacity\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\r\n                        : this.preserveOpacity\r\n                            ? this.latestValues.opacity\r\n                            : valuesToRender.opacityExit;\r\n            }\r\n            else {\r\n                /**\r\n                 * Or we're not animating at all, set the lead component to its layout\r\n                 * opacity and other components to hidden.\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? valuesToRender.opacity !== undefined\r\n                            ? valuesToRender.opacity\r\n                            : \"\"\r\n                        : valuesToRender.opacityExit !== undefined\r\n                            ? valuesToRender.opacityExit\r\n                            : 0;\r\n            }\r\n            /**\r\n             * Apply scale correction\r\n             */\r\n            for (const key in scaleCorrectors) {\r\n                if (valuesToRender[key] === undefined)\r\n                    continue;\r\n                const { correct, applyTo } = scaleCorrectors[key];\r\n                /**\r\n                 * Only apply scale correction to the value if we have an\r\n                 * active projection transform. Otherwise these values become\r\n                 * vulnerable to distortion if the element changes size without\r\n                 * a corresponding layout animation.\r\n                 */\r\n                const corrected = styles.transform === \"none\"\r\n                    ? valuesToRender[key]\r\n                    : correct(valuesToRender[key], lead);\r\n                if (applyTo) {\r\n                    const num = applyTo.length;\r\n                    for (let i = 0; i < num; i++) {\r\n                        styles[applyTo[i]] = corrected;\r\n                    }\r\n                }\r\n                else {\r\n                    styles[key] = corrected;\r\n                }\r\n            }\r\n            /**\r\n             * Disable pointer events on follow components. This is to ensure\r\n             * that if a follow component covers a lead component it doesn't block\r\n             * pointer events on the lead.\r\n             */\r\n            if (this.options.layoutId) {\r\n                styles.pointerEvents =\r\n                    lead === this\r\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\r\n                        : \"none\";\r\n            }\r\n            return styles;\r\n        }\r\n        clearSnapshot() {\r\n            this.resumeFrom = this.snapshot = undefined;\r\n        }\r\n        // Only run on root\r\n        resetTree() {\r\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\r\n            this.root.nodes.forEach(clearMeasurements);\r\n            this.root.sharedNodes.clear();\r\n        }\r\n    };\r\n}\r\nfunction updateLayout(node) {\r\n    node.updateLayout();\r\n}\r\nfunction notifyLayoutUpdate(node) {\r\n    var _a;\r\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\r\n    if (node.isLead() &&\r\n        node.layout &&\r\n        snapshot &&\r\n        node.hasListeners(\"didUpdate\")) {\r\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\r\n        const { animationType } = node.options;\r\n        const isShared = snapshot.source !== node.layout.source;\r\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\r\n        // animations for instance if layout=\"size\" and an element has only changed position\r\n        if (animationType === \"size\") {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(axisSnapshot);\r\n                axisSnapshot.min = layout[axis].min;\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n            });\r\n        }\r\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(layout[axis]);\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n                /**\r\n                 * Ensure relative target gets resized and rerendererd\r\n                 */\r\n                if (node.relativeTarget && !node.currentAnimation) {\r\n                    node.isProjectionDirty = true;\r\n                    node.relativeTarget[axis].max =\r\n                        node.relativeTarget[axis].min + length;\r\n                }\r\n            });\r\n        }\r\n        const layoutDelta = createDelta();\r\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\r\n        const visualDelta = createDelta();\r\n        if (isShared) {\r\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\r\n        }\r\n        else {\r\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\r\n        }\r\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\r\n        let hasRelativeTargetChanged = false;\r\n        if (!node.resumeFrom) {\r\n            const relativeParent = node.getClosestProjectingParent();\r\n            /**\r\n             * If the relativeParent is itself resuming from a different element then\r\n             * the relative snapshot is not relavent\r\n             */\r\n            if (relativeParent && !relativeParent.resumeFrom) {\r\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\r\n                if (parentSnapshot && parentLayout) {\r\n                    const relativeSnapshot = createBox();\r\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\r\n                    const relativeLayout = createBox();\r\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\r\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\r\n                        hasRelativeTargetChanged = true;\r\n                    }\r\n                    if (relativeParent.options.layoutRoot) {\r\n                        node.relativeTarget = relativeLayout;\r\n                        node.relativeTargetOrigin = relativeSnapshot;\r\n                        node.relativeParent = relativeParent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        node.notifyListeners(\"didUpdate\", {\r\n            layout,\r\n            snapshot,\r\n            delta: visualDelta,\r\n            layoutDelta,\r\n            hasLayoutChanged,\r\n            hasRelativeTargetChanged,\r\n        });\r\n    }\r\n    else if (node.isLead()) {\r\n        const { onExitComplete } = node.options;\r\n        onExitComplete && onExitComplete();\r\n    }\r\n    /**\r\n     * Clearing transition\r\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\r\n     * and why we need it at all\r\n     */\r\n    node.options.transition = undefined;\r\n}\r\nfunction propagateDirtyNodes(node) {\r\n    /**\r\n     * Increase debug counter for nodes encountered this frame\r\n     */\r\n    projectionFrameData.totalNodes++;\r\n    if (!node.parent)\r\n        return;\r\n    /**\r\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\r\n     * no performance impact but it will allow the next child that *is* projecting\r\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\r\n     * correcting.\r\n     */\r\n    if (!node.isProjecting()) {\r\n        node.isProjectionDirty = node.parent.isProjectionDirty;\r\n    }\r\n    /**\r\n     * Propagate isSharedProjectionDirty and isTransformDirty\r\n     * throughout the whole tree. A future revision can take another look at\r\n     * this but for safety we still recalcualte shared nodes.\r\n     */\r\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\r\n        node.parent.isProjectionDirty ||\r\n        node.parent.isSharedProjectionDirty));\r\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\r\n}\r\nfunction cleanDirtyNodes(node) {\r\n    node.isProjectionDirty =\r\n        node.isSharedProjectionDirty =\r\n            node.isTransformDirty =\r\n                false;\r\n}\r\nfunction clearSnapshot(node) {\r\n    node.clearSnapshot();\r\n}\r\nfunction clearMeasurements(node) {\r\n    node.clearMeasurements();\r\n}\r\nfunction clearIsLayoutDirty(node) {\r\n    node.isLayoutDirty = false;\r\n}\r\nfunction resetTransformStyle(node) {\r\n    const { visualElement } = node.options;\r\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\r\n        visualElement.notify(\"BeforeLayoutMeasure\");\r\n    }\r\n    node.resetTransform();\r\n}\r\nfunction finishAnimation(node) {\r\n    node.finishAnimation();\r\n    node.targetDelta = node.relativeTarget = node.target = undefined;\r\n    node.isProjectionDirty = true;\r\n}\r\nfunction resolveTargetDelta(node) {\r\n    node.resolveTargetDelta();\r\n}\r\nfunction calcProjection(node) {\r\n    node.calcProjection();\r\n}\r\nfunction resetRotation(node) {\r\n    node.resetRotation();\r\n}\r\nfunction removeLeadSnapshots(stack) {\r\n    stack.removeLeadSnapshot();\r\n}\r\nfunction mixAxisDelta(output, delta, p) {\r\n    output.translate = mix(delta.translate, 0, p);\r\n    output.scale = mix(delta.scale, 1, p);\r\n    output.origin = delta.origin;\r\n    output.originPoint = delta.originPoint;\r\n}\r\nfunction mixAxis(output, from, to, p) {\r\n    output.min = mix(from.min, to.min, p);\r\n    output.max = mix(from.max, to.max, p);\r\n}\r\nfunction mixBox(output, from, to, p) {\r\n    mixAxis(output.x, from.x, to.x, p);\r\n    mixAxis(output.y, from.y, to.y, p);\r\n}\r\nfunction hasOpacityCrossfade(node) {\r\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\r\n}\r\nconst defaultLayoutTransition = {\r\n    duration: 0.45,\r\n    ease: [0.4, 0, 0.1, 1],\r\n};\r\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\r\n    navigator.userAgent.toLowerCase().includes(string);\r\n/**\r\n * Measured bounding boxes must be rounded in Safari and\r\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\r\n * can appear to jump.\r\n */\r\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\r\n    ? Math.round\r\n    : noop;\r\nfunction roundAxis(axis) {\r\n    // Round to the nearest .5 pixels to support subpixel layouts\r\n    axis.min = roundPoint(axis.min);\r\n    axis.max = roundPoint(axis.max);\r\n}\r\nfunction roundBox(box) {\r\n    roundAxis(box.x);\r\n    roundAxis(box.y);\r\n}\r\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\r\n    return (animationType === \"position\" ||\r\n        (animationType === \"preserve-aspect\" &&\r\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\r\n}\r\n\r\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\n\r\nconst DocumentProjectionNode = createProjectionNode({\r\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\r\n    measureScroll: () => ({\r\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\r\n        y: document.documentElement.scrollTop || document.body.scrollTop,\r\n    }),\r\n    checkIsScrollRoot: () => true,\r\n});\r\n\r\nexport { DocumentProjectionNode };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\r\n\r\nconst rootProjectionNode = {\r\n    current: undefined,\r\n};\r\nconst HTMLProjectionNode = createProjectionNode({\r\n    measureScroll: (instance) => ({\r\n        x: instance.scrollLeft,\r\n        y: instance.scrollTop,\r\n    }),\r\n    defaultParent: () => {\r\n        if (!rootProjectionNode.current) {\r\n            const documentNode = new DocumentProjectionNode({});\r\n            documentNode.mount(window);\r\n            documentNode.setOptions({ layoutScroll: true });\r\n            rootProjectionNode.current = documentNode;\r\n        }\r\n        return rootProjectionNode.current;\r\n    },\r\n    resetTransform: (instance, value) => {\r\n        instance.style.transform = value !== undefined ? value : \"none\";\r\n    },\r\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\r\n});\r\n\r\nexport { HTMLProjectionNode, rootProjectionNode };\r\n","import { DragGesture } from '../../gestures/drag/index.mjs';\r\nimport { PanGesture } from '../../gestures/pan/index.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\n\r\nconst drag = {\r\n    pan: {\r\n        Feature: PanGesture,\r\n    },\r\n    drag: {\r\n        Feature: DragGesture,\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { drag };\r\n","import { invariant } from '../../../utils/errors.mjs';\r\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\r\nimport { isCSSVariableToken } from './is-css-variable.mjs';\r\n\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\nfunction parseCSSVariable(current) {\r\n    const match = splitCSSVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    const [, token, fallback] = match;\r\n    return [token, fallback];\r\n}\r\nconst maxDepth = 4;\r\nfunction getVariableValue(current, element, depth = 1) {\r\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\r\n    const [token, fallback] = parseCSSVariable(current);\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        const trimmed = resolved.trim();\r\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\r\n    }\r\n    else if (isCSSVariableToken(fallback)) {\r\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\r\n        return getVariableValue(fallback, element, depth + 1);\r\n    }\r\n    else {\r\n        return fallback;\r\n    }\r\n}\r\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\r\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\r\n    const element = visualElement.current;\r\n    if (!(element instanceof Element))\r\n        return { target, transitionEnd };\r\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\r\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\r\n    if (transitionEnd) {\r\n        transitionEnd = { ...transitionEnd };\r\n    }\r\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\r\n    visualElement.values.forEach((value) => {\r\n        const current = value.get();\r\n        if (!isCSSVariableToken(current))\r\n            return;\r\n        const resolved = getVariableValue(current, element);\r\n        if (resolved)\r\n            value.set(resolved);\r\n    });\r\n    // Cycle through every target property and resolve CSS variables. Currently\r\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\r\n    for (const key in target) {\r\n        const current = target[key];\r\n        if (!isCSSVariableToken(current))\r\n            continue;\r\n        const resolved = getVariableValue(current, element);\r\n        if (!resolved)\r\n            continue;\r\n        // Clone target if it hasn't already been\r\n        target[key] = resolved;\r\n        if (!transitionEnd)\r\n            transitionEnd = {};\r\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\r\n        // CSS variable. This will ensure that after the animation the component will reflect\r\n        // changes in the value of the CSS variable.\r\n        if (transitionEnd[key] === undefined) {\r\n            transitionEnd[key] = current;\r\n        }\r\n    }\r\n    return { target, transitionEnd };\r\n}\r\n\r\nexport { parseCSSVariable, resolveCSSVariables };\r\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\r\nimport { invariant } from '../../../utils/errors.mjs';\r\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\r\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\r\nimport { isBrowser } from '../../../utils/is-browser.mjs';\r\nimport { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    \"x\",\r\n    \"y\",\r\n    \"translateX\",\r\n    \"translateY\",\r\n]);\r\nconst isPositionalKey = (key) => positionalKeys.has(key);\r\nconst hasPositionalKey = (target) => {\r\n    return Object.keys(target).some(isPositionalKey);\r\n};\r\nconst isNumOrPxType = (v) => v === number || v === px;\r\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\r\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\r\n        if (matrix) {\r\n            return getPosFromMatrix(matrix[1], pos2);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n};\r\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\r\nfunction removeNonTranslationalTransform(visualElement) {\r\n    const removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach((key) => {\r\n        const value = visualElement.getValue(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    // Apply changes to element before measurement\r\n    if (removedTransforms.length)\r\n        visualElement.render();\r\n    return removedTransforms;\r\n}\r\nconst positionalValues = {\r\n    // Dimensions\r\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\r\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\r\n    top: (_bbox, { top }) => parseFloat(top),\r\n    left: (_bbox, { left }) => parseFloat(left),\r\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\r\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\n// Alias translate longform names\r\npositionalValues.translateX = positionalValues.x;\r\npositionalValues.translateY = positionalValues.y;\r\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\r\n    const originBbox = visualElement.measureViewportBox();\r\n    const element = visualElement.current;\r\n    const elementComputedStyle = getComputedStyle(element);\r\n    const { display } = elementComputedStyle;\r\n    const origin = {};\r\n    // If the element is currently set to display: \"none\", make it visible before\r\n    // measuring the target bounding box\r\n    if (display === \"none\") {\r\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\r\n    }\r\n    /**\r\n     * Record origins before we render and update styles\r\n     */\r\n    changedKeys.forEach((key) => {\r\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\r\n    });\r\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\r\n    visualElement.render();\r\n    const targetBbox = visualElement.measureViewportBox();\r\n    changedKeys.forEach((key) => {\r\n        // Restore styles to their **calculated computed style**, not their actual\r\n        // originally set style. This allows us to animate between equivalent pixel units.\r\n        const value = visualElement.getValue(key);\r\n        value && value.jump(origin[key]);\r\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\r\n    });\r\n    return target;\r\n};\r\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\r\n    target = { ...target };\r\n    transitionEnd = { ...transitionEnd };\r\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\r\n    // We want to remove any transform values that could affect the element's bounding box before\r\n    // it's measured. We'll reapply these later.\r\n    let removedTransformValues = [];\r\n    let hasAttemptedToRemoveTransformValues = false;\r\n    const changedValueTypeKeys = [];\r\n    targetPositionalKeys.forEach((key) => {\r\n        const value = visualElement.getValue(key);\r\n        if (!visualElement.hasValue(key))\r\n            return;\r\n        let from = origin[key];\r\n        let fromType = findDimensionValueType(from);\r\n        const to = target[key];\r\n        let toType;\r\n        // TODO: The current implementation of this basically throws an error\r\n        // if you try and do value conversion via keyframes. There's probably\r\n        // a way of doing this but the performance implications would need greater scrutiny,\r\n        // as it'd be doing multiple resize-remeasure operations.\r\n        if (isKeyframesTarget(to)) {\r\n            const numKeyframes = to.length;\r\n            const fromIndex = to[0] === null ? 1 : 0;\r\n            from = to[fromIndex];\r\n            fromType = findDimensionValueType(from);\r\n            for (let i = fromIndex; i < numKeyframes; i++) {\r\n                /**\r\n                 * Don't allow wildcard keyframes to be used to detect\r\n                 * a difference in value types.\r\n                 */\r\n                if (to[i] === null)\r\n                    break;\r\n                if (!toType) {\r\n                    toType = findDimensionValueType(to[i]);\r\n                    invariant(toType === fromType ||\r\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\r\n                }\r\n                else {\r\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toType = findDimensionValueType(to);\r\n        }\r\n        if (fromType !== toType) {\r\n            // If they're both just number or px, convert them both to numbers rather than\r\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\r\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\r\n                const current = value.get();\r\n                if (typeof current === \"string\") {\r\n                    value.set(parseFloat(current));\r\n                }\r\n                if (typeof to === \"string\") {\r\n                    target[key] = parseFloat(to);\r\n                }\r\n                else if (Array.isArray(to) && toType === px) {\r\n                    target[key] = to.map(parseFloat);\r\n                }\r\n            }\r\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\r\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\r\n                (from === 0 || to === 0)) {\r\n                // If one or the other value is 0, it's safe to coerce it to the\r\n                // type of the other without measurement\r\n                if (from === 0) {\r\n                    value.set(toType.transform(from));\r\n                }\r\n                else {\r\n                    target[key] = fromType.transform(to);\r\n                }\r\n            }\r\n            else {\r\n                // If we're going to do value conversion via DOM measurements, we first\r\n                // need to remove non-positional transform values that could affect the bbox measurements.\r\n                if (!hasAttemptedToRemoveTransformValues) {\r\n                    removedTransformValues =\r\n                        removeNonTranslationalTransform(visualElement);\r\n                    hasAttemptedToRemoveTransformValues = true;\r\n                }\r\n                changedValueTypeKeys.push(key);\r\n                transitionEnd[key] =\r\n                    transitionEnd[key] !== undefined\r\n                        ? transitionEnd[key]\r\n                        : target[key];\r\n                value.jump(to);\r\n            }\r\n        }\r\n    });\r\n    if (changedValueTypeKeys.length) {\r\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\r\n            ? window.pageYOffset\r\n            : null;\r\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\r\n        // If we removed transform values, reapply them before the next render\r\n        if (removedTransformValues.length) {\r\n            removedTransformValues.forEach(([key, value]) => {\r\n                visualElement.getValue(key).set(value);\r\n            });\r\n        }\r\n        // Reapply original values\r\n        visualElement.render();\r\n        // Restore scroll position\r\n        if (isBrowser && scrollY !== null) {\r\n            window.scrollTo({ top: scrollY });\r\n        }\r\n        return { target: convertedTarget, transitionEnd };\r\n    }\r\n    else {\r\n        return { target, transitionEnd };\r\n    }\r\n};\r\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @internal\r\n */\r\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\r\n    return hasPositionalKey(target)\r\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\r\n        : { target, transitionEnd };\r\n}\r\n\r\nexport { positionalValues, unitConversion };\r\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\r\nimport { unitConversion } from './unit-conversion.mjs';\r\n\r\n/**\r\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\r\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\r\n */\r\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\r\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\r\n    target = resolved.target;\r\n    transitionEnd = resolved.transitionEnd;\r\n    return unitConversion(visualElement, target, origin, transitionEnd);\r\n};\r\n\r\nexport { parseDomVariant };\r\n","// Does this device prefer reduced motion? Returns `null` server-side.\r\nconst prefersReducedMotion = { current: null };\r\nconst hasReducedMotionListener = { current: false };\r\n\r\nexport { hasReducedMotionListener, prefersReducedMotion };\r\n","import { isBrowser } from '../is-browser.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\r\n\r\nfunction initPrefersReducedMotion() {\r\n    hasReducedMotionListener.current = true;\r\n    if (!isBrowser)\r\n        return;\r\n    if (window.matchMedia) {\r\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\r\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\r\n        motionMediaQuery.addListener(setReducedMotionPreferences);\r\n        setReducedMotionPreferences();\r\n    }\r\n    else {\r\n        prefersReducedMotion.current = false;\r\n    }\r\n}\r\n\r\nexport { initPrefersReducedMotion };\r\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\r\nimport { warnOnce } from '../../utils/warn-once.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction updateMotionValuesFromProps(element, next, prev) {\r\n    const { willChange } = next;\r\n    for (const key in next) {\r\n        const nextValue = next[key];\r\n        const prevValue = prev[key];\r\n        if (isMotionValue(nextValue)) {\r\n            /**\r\n             * If this is a motion value found in props or style, we want to add it\r\n             * to our visual element's motion value map.\r\n             */\r\n            element.addValue(key, nextValue);\r\n            if (isWillChangeMotionValue(willChange)) {\r\n                willChange.add(key);\r\n            }\r\n            /**\r\n             * Check the version of the incoming motion value with this version\r\n             * and warn against mismatches.\r\n             */\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\r\n            }\r\n        }\r\n        else if (isMotionValue(prevValue)) {\r\n            /**\r\n             * If we're swapping from a motion value to a static value,\r\n             * create a new motion value from that\r\n             */\r\n            element.addValue(key, motionValue(nextValue, { owner: element }));\r\n            if (isWillChangeMotionValue(willChange)) {\r\n                willChange.remove(key);\r\n            }\r\n        }\r\n        else if (prevValue !== nextValue) {\r\n            /**\r\n             * If this is a flat value that has changed, update the motion value\r\n             * or create one if it doesn't exist. We only want to do this if we're\r\n             * not handling the value with our animation state.\r\n             */\r\n            if (element.hasValue(key)) {\r\n                const existingValue = element.getValue(key);\r\n                // TODO: Only update values that aren't being animated or even looked at\r\n                !existingValue.hasAnimated && existingValue.set(nextValue);\r\n            }\r\n            else {\r\n                const latestValue = element.getStaticValue(key);\r\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\r\n            }\r\n        }\r\n    }\r\n    // Handle removed values\r\n    for (const key in prev) {\r\n        if (next[key] === undefined)\r\n            element.removeValue(key);\r\n    }\r\n    return next;\r\n}\r\n\r\nexport { updateMotionValuesFromProps };\r\n","const visualElementStore = new WeakMap();\r\n\r\nexport { visualElementStore };\r\n","import { warning, invariant } from '../utils/errors.mjs';\r\nimport { createBox } from '../projection/geometry/models.mjs';\r\nimport { isRefObject } from '../utils/is-ref-object.mjs';\r\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { motionValue } from '../value/index.mjs';\r\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\r\nimport { transformProps } from './html/utils/transform.mjs';\r\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\r\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\r\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\r\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\r\nimport { variantProps } from './utils/variant-props.mjs';\r\nimport { visualElementStore } from './store.mjs';\r\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\r\n\r\nconst featureNames = Object.keys(featureDefinitions);\r\nconst numFeatures = featureNames.length;\r\nconst propEventHandlers = [\r\n    \"AnimationStart\",\r\n    \"AnimationComplete\",\r\n    \"Update\",\r\n    \"BeforeLayoutMeasure\",\r\n    \"LayoutMeasure\",\r\n    \"LayoutAnimationStart\",\r\n    \"LayoutAnimationComplete\",\r\n];\r\nconst numVariantProps = variantProps.length;\r\n/**\r\n * A VisualElement is an imperative abstraction around UI elements such as\r\n * HTMLElement, SVGElement, Three.Object3D etc.\r\n */\r\nclass VisualElement {\r\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\r\n        /**\r\n         * A reference to the current underlying Instance, e.g. a HTMLElement\r\n         * or Three.Mesh etc.\r\n         */\r\n        this.current = null;\r\n        /**\r\n         * A set containing references to this VisualElement's children.\r\n         */\r\n        this.children = new Set();\r\n        /**\r\n         * Determine what role this visual element should take in the variant tree.\r\n         */\r\n        this.isVariantNode = false;\r\n        this.isControllingVariants = false;\r\n        /**\r\n         * Decides whether this VisualElement should animate in reduced motion\r\n         * mode.\r\n         *\r\n         * TODO: This is currently set on every individual VisualElement but feels\r\n         * like it could be set globally.\r\n         */\r\n        this.shouldReduceMotion = null;\r\n        /**\r\n         * A map of all motion values attached to this visual element. Motion\r\n         * values are source of truth for any given animated value. A motion\r\n         * value might be provided externally by the component via props.\r\n         */\r\n        this.values = new Map();\r\n        /**\r\n         * Cleanup functions for active features (hover/tap/exit etc)\r\n         */\r\n        this.features = {};\r\n        /**\r\n         * A map of every subscription that binds the provided or generated\r\n         * motion values onChange listeners to this visual element.\r\n         */\r\n        this.valueSubscriptions = new Map();\r\n        /**\r\n         * A reference to the previously-provided motion values as returned\r\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n         * if any motion values need to be removed after props are updated.\r\n         */\r\n        this.prevMotionValues = {};\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        /**\r\n         * An object containing an unsubscribe function for each prop event subscription.\r\n         * For example, every \"Update\" event can have multiple subscribers via\r\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\r\n         */\r\n        this.propEventSubscriptions = {};\r\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\r\n        this.render = () => {\r\n            if (!this.current)\r\n                return;\r\n            this.triggerBuild();\r\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\r\n        };\r\n        this.scheduleRender = () => frame.render(this.render, false, true);\r\n        const { latestValues, renderState } = visualState;\r\n        this.latestValues = latestValues;\r\n        this.baseTarget = { ...latestValues };\r\n        this.initialValues = props.initial ? { ...latestValues } : {};\r\n        this.renderState = renderState;\r\n        this.parent = parent;\r\n        this.props = props;\r\n        this.presenceContext = presenceContext;\r\n        this.depth = parent ? parent.depth + 1 : 0;\r\n        this.reducedMotionConfig = reducedMotionConfig;\r\n        this.options = options;\r\n        this.isControllingVariants = isControllingVariants(props);\r\n        this.isVariantNode = isVariantNode(props);\r\n        if (this.isVariantNode) {\r\n            this.variantChildren = new Set();\r\n        }\r\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\r\n        /**\r\n         * Any motion values that are provided to the element when created\r\n         * aren't yet bound to the element, as this would technically be impure.\r\n         * However, we iterate through the motion values and set them to the\r\n         * initial values for this component.\r\n         *\r\n         * TODO: This is impure and we should look at changing this to run on mount.\r\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\r\n         * more a reflection of the test.\r\n         */\r\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\r\n        for (const key in initialMotionValues) {\r\n            const value = initialMotionValues[key];\r\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\r\n                value.set(latestValues[key], false);\r\n                if (isWillChangeMotionValue(willChange)) {\r\n                    willChange.add(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * This method takes React props and returns found MotionValues. For example, HTML\r\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\r\n     *\r\n     * This isn't an abstract method as it needs calling in the constructor, but it is\r\n     * intended to be one.\r\n     */\r\n    scrapeMotionValuesFromProps(_props, _prevProps) {\r\n        return {};\r\n    }\r\n    mount(instance) {\r\n        this.current = instance;\r\n        visualElementStore.set(instance, this);\r\n        if (this.projection && !this.projection.instance) {\r\n            this.projection.mount(instance);\r\n        }\r\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\r\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\r\n        }\r\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\r\n        if (!hasReducedMotionListener.current) {\r\n            initPrefersReducedMotion();\r\n        }\r\n        this.shouldReduceMotion =\r\n            this.reducedMotionConfig === \"never\"\r\n                ? false\r\n                : this.reducedMotionConfig === \"always\"\r\n                    ? true\r\n                    : prefersReducedMotion.current;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\r\n        }\r\n        if (this.parent)\r\n            this.parent.children.add(this);\r\n        this.update(this.props, this.presenceContext);\r\n    }\r\n    unmount() {\r\n        visualElementStore.delete(this.current);\r\n        this.projection && this.projection.unmount();\r\n        cancelFrame(this.notifyUpdate);\r\n        cancelFrame(this.render);\r\n        this.valueSubscriptions.forEach((remove) => remove());\r\n        this.removeFromVariantTree && this.removeFromVariantTree();\r\n        this.parent && this.parent.children.delete(this);\r\n        for (const key in this.events) {\r\n            this.events[key].clear();\r\n        }\r\n        for (const key in this.features) {\r\n            this.features[key].unmount();\r\n        }\r\n        this.current = null;\r\n    }\r\n    bindToMotionValue(key, value) {\r\n        const valueIsTransform = transformProps.has(key);\r\n        const removeOnChange = value.on(\"change\", (latestValue) => {\r\n            this.latestValues[key] = latestValue;\r\n            this.props.onUpdate &&\r\n                frame.update(this.notifyUpdate, false, true);\r\n            if (valueIsTransform && this.projection) {\r\n                this.projection.isTransformDirty = true;\r\n            }\r\n        });\r\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\r\n        this.valueSubscriptions.set(key, () => {\r\n            removeOnChange();\r\n            removeOnRenderRequest();\r\n        });\r\n    }\r\n    sortNodePosition(other) {\r\n        /**\r\n         * If these nodes aren't even of the same type we can't compare their depth.\r\n         */\r\n        if (!this.current ||\r\n            !this.sortInstanceNodePosition ||\r\n            this.type !== other.type) {\r\n            return 0;\r\n        }\r\n        return this.sortInstanceNodePosition(this.current, other.current);\r\n    }\r\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\r\n        let ProjectionNodeConstructor;\r\n        let MeasureLayout;\r\n        /**\r\n         * If we're in development mode, check to make sure we're not rendering a motion component\r\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n         */\r\n        if (process.env.NODE_ENV !== \"production\" &&\r\n            preloadedFeatures &&\r\n            isStrict) {\r\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\r\n            renderedProps.ignoreStrict\r\n                ? warning(false, strictMessage)\r\n                : invariant(false, strictMessage);\r\n        }\r\n        for (let i = 0; i < numFeatures; i++) {\r\n            const name = featureNames[i];\r\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\r\n            if (ProjectionNode)\r\n                ProjectionNodeConstructor = ProjectionNode;\r\n            if (isEnabled(renderedProps)) {\r\n                if (!this.features[name] && FeatureConstructor) {\r\n                    this.features[name] = new FeatureConstructor(this);\r\n                }\r\n                if (MeasureLayoutComponent) {\r\n                    MeasureLayout = MeasureLayoutComponent;\r\n                }\r\n            }\r\n        }\r\n        if ((this.type === \"html\" || this.type === \"svg\") &&\r\n            !this.projection &&\r\n            ProjectionNodeConstructor) {\r\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\r\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\r\n            this.projection.setOptions({\r\n                layoutId,\r\n                layout,\r\n                alwaysMeasureLayout: Boolean(drag) ||\r\n                    (dragConstraints && isRefObject(dragConstraints)),\r\n                visualElement: this,\r\n                scheduleRender: () => this.scheduleRender(),\r\n                /**\r\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n                 * to update by the time layout animations run.\r\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n                 * ensuring it gets called if there's no potential layout animations.\r\n                 *\r\n                 */\r\n                animationType: typeof layout === \"string\" ? layout : \"both\",\r\n                initialPromotionConfig: initialLayoutGroupConfig,\r\n                layoutScroll,\r\n                layoutRoot,\r\n            });\r\n        }\r\n        return MeasureLayout;\r\n    }\r\n    updateFeatures() {\r\n        for (const key in this.features) {\r\n            const feature = this.features[key];\r\n            if (feature.isMounted) {\r\n                feature.update();\r\n            }\r\n            else {\r\n                feature.mount();\r\n                feature.isMounted = true;\r\n            }\r\n        }\r\n    }\r\n    triggerBuild() {\r\n        this.build(this.renderState, this.latestValues, this.options, this.props);\r\n    }\r\n    /**\r\n     * Measure the current viewport box with or without transforms.\r\n     * Only measures axis-aligned boxes, rotate and skew must be manually\r\n     * removed with a re-render to work.\r\n     */\r\n    measureViewportBox() {\r\n        return this.current\r\n            ? this.measureInstanceViewportBox(this.current, this.props)\r\n            : createBox();\r\n    }\r\n    getStaticValue(key) {\r\n        return this.latestValues[key];\r\n    }\r\n    setStaticValue(key, value) {\r\n        this.latestValues[key] = value;\r\n    }\r\n    /**\r\n     * Make a target animatable by Popmotion. For instance, if we're\r\n     * trying to animate width from 100px to 100vw we need to measure 100vw\r\n     * in pixels to determine what we really need to animate to. This is also\r\n     * pluggable to support Framer's custom value types like Color,\r\n     * and CSS variables.\r\n     */\r\n    makeTargetAnimatable(target, canMutate = true) {\r\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\r\n    }\r\n    /**\r\n     * Update the provided props. Ensure any newly-added motion values are\r\n     * added to our map, old ones removed, and listeners updated.\r\n     */\r\n    update(props, presenceContext) {\r\n        if (props.transformTemplate || this.props.transformTemplate) {\r\n            this.scheduleRender();\r\n        }\r\n        this.prevProps = this.props;\r\n        this.props = props;\r\n        this.prevPresenceContext = this.presenceContext;\r\n        this.presenceContext = presenceContext;\r\n        /**\r\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\r\n         */\r\n        for (let i = 0; i < propEventHandlers.length; i++) {\r\n            const key = propEventHandlers[i];\r\n            if (this.propEventSubscriptions[key]) {\r\n                this.propEventSubscriptions[key]();\r\n                delete this.propEventSubscriptions[key];\r\n            }\r\n            const listener = props[\"on\" + key];\r\n            if (listener) {\r\n                this.propEventSubscriptions[key] = this.on(key, listener);\r\n            }\r\n        }\r\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\r\n        if (this.handleChildMotionValue) {\r\n            this.handleChildMotionValue();\r\n        }\r\n    }\r\n    getProps() {\r\n        return this.props;\r\n    }\r\n    /**\r\n     * Returns the variant definition with a given name.\r\n     */\r\n    getVariant(name) {\r\n        return this.props.variants ? this.props.variants[name] : undefined;\r\n    }\r\n    /**\r\n     * Returns the defined default transition on this component.\r\n     */\r\n    getDefaultTransition() {\r\n        return this.props.transition;\r\n    }\r\n    getTransformPagePoint() {\r\n        return this.props.transformPagePoint;\r\n    }\r\n    getClosestVariantNode() {\r\n        return this.isVariantNode\r\n            ? this\r\n            : this.parent\r\n                ? this.parent.getClosestVariantNode()\r\n                : undefined;\r\n    }\r\n    getVariantContext(startAtParent = false) {\r\n        if (startAtParent) {\r\n            return this.parent ? this.parent.getVariantContext() : undefined;\r\n        }\r\n        if (!this.isControllingVariants) {\r\n            const context = this.parent\r\n                ? this.parent.getVariantContext() || {}\r\n                : {};\r\n            if (this.props.initial !== undefined) {\r\n                context.initial = this.props.initial;\r\n            }\r\n            return context;\r\n        }\r\n        const context = {};\r\n        for (let i = 0; i < numVariantProps; i++) {\r\n            const name = variantProps[i];\r\n            const prop = this.props[name];\r\n            if (isVariantLabel(prop) || prop === false) {\r\n                context[name] = prop;\r\n            }\r\n        }\r\n        return context;\r\n    }\r\n    /**\r\n     * Add a child visual element to our set of children.\r\n     */\r\n    addVariantChild(child) {\r\n        const closestVariantNode = this.getClosestVariantNode();\r\n        if (closestVariantNode) {\r\n            closestVariantNode.variantChildren &&\r\n                closestVariantNode.variantChildren.add(child);\r\n            return () => closestVariantNode.variantChildren.delete(child);\r\n        }\r\n    }\r\n    /**\r\n     * Add a motion value and bind it to this visual element.\r\n     */\r\n    addValue(key, value) {\r\n        // Remove existing value if it exists\r\n        if (value !== this.values.get(key)) {\r\n            this.removeValue(key);\r\n            this.bindToMotionValue(key, value);\r\n        }\r\n        this.values.set(key, value);\r\n        this.latestValues[key] = value.get();\r\n    }\r\n    /**\r\n     * Remove a motion value and unbind any active subscriptions.\r\n     */\r\n    removeValue(key) {\r\n        this.values.delete(key);\r\n        const unsubscribe = this.valueSubscriptions.get(key);\r\n        if (unsubscribe) {\r\n            unsubscribe();\r\n            this.valueSubscriptions.delete(key);\r\n        }\r\n        delete this.latestValues[key];\r\n        this.removeValueFromRenderState(key, this.renderState);\r\n    }\r\n    /**\r\n     * Check whether we have a motion value for this key\r\n     */\r\n    hasValue(key) {\r\n        return this.values.has(key);\r\n    }\r\n    getValue(key, defaultValue) {\r\n        if (this.props.values && this.props.values[key]) {\r\n            return this.props.values[key];\r\n        }\r\n        let value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = motionValue(defaultValue, { owner: this });\r\n            this.addValue(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * If we're trying to animate to a previously unencountered value,\r\n     * we need to check for it in our state and as a last resort read it\r\n     * directly from the instance (which might have performance implications).\r\n     */\r\n    readValue(key) {\r\n        var _a;\r\n        return this.latestValues[key] !== undefined || !this.current\r\n            ? this.latestValues[key]\r\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\r\n    }\r\n    /**\r\n     * Set the base target to later animate back to. This is currently\r\n     * only hydrated on creation and when we first read a value.\r\n     */\r\n    setBaseTarget(key, value) {\r\n        this.baseTarget[key] = value;\r\n    }\r\n    /**\r\n     * Find the base target for a value thats been removed from all animation\r\n     * props.\r\n     */\r\n    getBaseTarget(key) {\r\n        var _a;\r\n        const { initial } = this.props;\r\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\r\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\r\n            : undefined;\r\n        /**\r\n         * If this value still exists in the current initial variant, read that.\r\n         */\r\n        if (initial && valueFromInitial !== undefined) {\r\n            return valueFromInitial;\r\n        }\r\n        /**\r\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\r\n         * so we can read the value from an alternative source, try that.\r\n         */\r\n        const target = this.getBaseTargetFromProps(this.props, key);\r\n        if (target !== undefined && !isMotionValue(target))\r\n            return target;\r\n        /**\r\n         * If the value was initially defined on initial, but it doesn't any more,\r\n         * return undefined. Otherwise return the value as initially read from the DOM.\r\n         */\r\n        return this.initialValues[key] !== undefined &&\r\n            valueFromInitial === undefined\r\n            ? undefined\r\n            : this.baseTarget[key];\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        return this.events[eventName].add(callback);\r\n    }\r\n    notify(eventName, ...args) {\r\n        if (this.events[eventName]) {\r\n            this.events[eventName].notify(...args);\r\n        }\r\n    }\r\n}\r\n\r\nexport { VisualElement };\r\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\r\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\r\nimport { VisualElement } from '../VisualElement.mjs';\r\n\r\nclass DOMVisualElement extends VisualElement {\r\n    sortInstanceNodePosition(a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props.style ? props.style[key] : undefined;\r\n    }\r\n    removeValueFromRenderState(key, { vars, style }) {\r\n        delete vars[key];\r\n        delete style[key];\r\n    }\r\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\r\n        let origin = getOrigin(target, transition || {}, this);\r\n        /**\r\n         * If Framer has provided a function to convert `Color` etc value types, convert them\r\n         */\r\n        if (transformValues) {\r\n            if (transitionEnd)\r\n                transitionEnd = transformValues(transitionEnd);\r\n            if (target)\r\n                target = transformValues(target);\r\n            if (origin)\r\n                origin = transformValues(origin);\r\n        }\r\n        if (isMounted) {\r\n            checkTargetForNewValues(this, target, origin);\r\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\r\n            transitionEnd = parsed.transitionEnd;\r\n            target = parsed.target;\r\n        }\r\n        return {\r\n            transition,\r\n            transitionEnd,\r\n            ...target,\r\n        };\r\n    }\r\n}\r\n\r\nexport { DOMVisualElement };\r\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\r\nimport { transformProps } from './utils/transform.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { renderHTML } from './utils/render.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction getComputedStyle(element) {\r\n    return window.getComputedStyle(element);\r\n}\r\nclass HTMLVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"html\";\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        else {\r\n            const computedStyle = getComputedStyle(instance);\r\n            const value = (isCSSVariableName(key)\r\n                ? computedStyle.getPropertyValue(key)\r\n                : computedStyle[key]) || 0;\r\n            return typeof value === \"string\" ? value.trim() : value;\r\n        }\r\n    }\r\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\r\n        return measureViewportBox(instance, transformPagePoint);\r\n    }\r\n    build(renderState, latestValues, options, props) {\r\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps) {\r\n        return scrapeMotionValuesFromProps(props, prevProps);\r\n    }\r\n    handleChildMotionValue() {\r\n        if (this.childSubscription) {\r\n            this.childSubscription();\r\n            delete this.childSubscription;\r\n        }\r\n        const { children } = this.props;\r\n        if (isMotionValue(children)) {\r\n            this.childSubscription = children.on(\"change\", (latest) => {\r\n                if (this.current)\r\n                    this.current.textContent = `${latest}`;\r\n            });\r\n        }\r\n    }\r\n    renderInstance(instance, renderState, styleProp, projection) {\r\n        renderHTML(instance, renderState, styleProp, projection);\r\n    }\r\n}\r\n\r\nexport { HTMLVisualElement, getComputedStyle };\r\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\r\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\r\nimport { transformProps } from '../html/utils/transform.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\n\r\nclass SVGVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"svg\";\r\n        this.isSVGTag = false;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props[key];\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\r\n        return instance.getAttribute(key);\r\n    }\r\n    measureInstanceViewportBox() {\r\n        return createBox();\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps) {\r\n        return scrapeMotionValuesFromProps(props, prevProps);\r\n    }\r\n    build(renderState, latestValues, options, props) {\r\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\r\n    }\r\n    renderInstance(instance, renderState, styleProp, projection) {\r\n        renderSVG(instance, renderState, styleProp, projection);\r\n    }\r\n    mount(instance) {\r\n        this.isSVGTag = isSVGTag(instance.tagName);\r\n        super.mount(instance);\r\n    }\r\n}\r\n\r\nexport { SVGVisualElement };\r\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\r\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\n\r\nconst createDomVisualElement = (Component, options) => {\r\n    return isSVGComponent(Component)\r\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\r\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\r\n};\r\n\r\nexport { createDomVisualElement };\r\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\n\r\nconst layout = {\r\n    layout: {\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { layout };\r\n","import { createMotionComponent } from '../../motion/index.mjs';\r\nimport { createMotionProxy } from './motion-proxy.mjs';\r\nimport { createDomMotionConfig } from './utils/create-config.mjs';\r\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\r\nimport { animations } from '../../motion/features/animations.mjs';\r\nimport { drag } from '../../motion/features/drag.mjs';\r\nimport { createDomVisualElement } from './create-visual-element.mjs';\r\nimport { layout } from '../../motion/features/layout.mjs';\r\n\r\nconst preloadedFeatures = {\r\n    ...animations,\r\n    ...gestureAnimations,\r\n    ...drag,\r\n    ...layout,\r\n};\r\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @public\r\n */\r\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\r\n/**\r\n * Create a DOM `motion` component with the provided string. This is primarily intended\r\n * as a full alternative to `motion` for consumers who have to support environments that don't\r\n * support `Proxy`.\r\n *\r\n * ```javascript\r\n * import { createDomMotionComponent } from \"framer-motion\"\r\n *\r\n * const motion = {\r\n *   div: createDomMotionComponent('div')\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction createDomMotionComponent(key) {\r\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\r\n}\r\n\r\nexport { createDomMotionComponent, motion };\r\n"],"names":["MotionConfigContext","createContext","p","MotionContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","useInsertionEffect","wantsHandoff","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","featureProps","featureDefinitions","key","loadFeatures","features","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","initialLayoutGroupConfig","isStrict","React.createElement","ForwardRefComponent","forwardRef","layoutId","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","numTransforms","buildTransform","transform","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","i","transformName","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","cssVariableRegex","getValueAsType","type","clamp","min","max","number","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","noop","any","Queue","process","createRenderStep","runNextFrame","thisFrame","nextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","callback","keepAlive","immediate","addToCurrentFrame","queue","frameData","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","steps","acc","processStep","stepId","processBatch","timestamp","wake","frame","cancelFrame","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","HoverGesture","FocusGesture","isFocusVisible","isNodeOrChild","child","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","shallowCompare","next","prev","prevLength","getCurrent","current","getVelocity","velocity","resolveVariant","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","c","d","mapEasingToNativeEasing","animateStyle","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","getFinalKeyframe","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","reverseEasing","circIn","circOut","circInOut","backOut","backIn","backInOut","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","mix","from","to","progress","hueToRgb","q","hslaToRgba","mixLinearColor","fromExpo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","test","_a","_b","cssVarTokeniser","colorTokeniser","numberTokeniser","tokenise","regex","countKey","parse","matches","analyseComplexValue","originalValue","parseComplexValue","createTransformer","numColors","numVars","tokenised","numValues","output","convertNumbersToZero","getAnimatableNone","parsed","complex","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","detectMixerFactory","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","arr","convertOffsetToTimes","o","defaultEasing","keyframeValues","easingFunctions","absoluteTimes","mapTimeToKeyframe","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","e","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restDelta","restSpeed","damping","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","types","animateValue","autoplay","driver","keyframes$1","repeatDelay","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","resolveFinishedPromise","currentFinishedPromise","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","calculatedDuration","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","finish","stopAnimationDriver","cancel","play","now","controls","reject","newTime","newSpeed","memo","supportsWaapi","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","createAcceleratedAnimation","pendingCancel","sampleAnimation","pregeneratedKeyframes","animation","cancelAnimation","safeCancel","timeline","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","numSubscriptions","isFloat","MotionValue","render","subscription","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","motionValue","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","appearId","canSkip","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","AnimationFeature","prevAnimate","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","getContextWindow","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","usePresence","useId","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","safeToRemove","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","timeout","start","checkElapsed","record","data","isSVGElement","animateSingleValue","motionValue$1","transformAxes","hiddenVisibility","animationTarget","projectionFrameData","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","args","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","splitCSSVariableRegex","parseCSSVariable","match","fallback","getVariableValue","depth","trimmed","resolveCSSVariables","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","initialMotionValues","_props","_prevProps","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","ProjectionNodeConstructor","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutScroll","layoutRoot","feature","canMutate","listener","startAtParent","closestVariantNode","valueFromInitial","DOMVisualElement","transformValues","isMounted","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204]}